{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Qmate Service Qmate Service is a custom WebdriverIO Service for testing web applications and APIs built with TypeScript. It replaces the former JavaScript version of the service and enhances it with many improvements and new features. Tip Qmate Service is part of the standalone tool Qmate but can also be used as custom service for WebdriverIO. However, if you want to make use of all our features, we recommend to use the standalone version enabling all our custom services out of the box. Main features The main features of this service are: Supporting UI5 and OPA Selectors Reuse API with useful functions for UI5 and any other type of web application REST & OData API testing Dynamic test data handling","title":"About"},{"location":"#qmate-service","text":"Qmate Service is a custom WebdriverIO Service for testing web applications and APIs built with TypeScript. It replaces the former JavaScript version of the service and enhances it with many improvements and new features. Tip Qmate Service is part of the standalone tool Qmate but can also be used as custom service for WebdriverIO. However, if you want to make use of all our features, we recommend to use the standalone version enabling all our custom services out of the box.","title":"Qmate Service"},{"location":"#main-features","text":"The main features of this service are: Supporting UI5 and OPA Selectors Reuse API with useful functions for UI5 and any other type of web application REST & OData API testing Dynamic test data handling","title":"Main features"},{"location":"contact/","text":"Important Information In case of questions or issues, please use our Official Channels to reach out to us. Benjamin Warth Walldorf - Germany benjamin.warth@sap.com Marvin Gr\u00fc\u00dfinger Walldorf - Germany marvin.gruessinger@sap.com","title":"Contact"},{"location":"contact/#benjamin-warth","text":"Walldorf - Germany benjamin.warth@sap.com","title":"Benjamin Warth"},{"location":"contact/#marvin-gruinger","text":"Walldorf - Germany marvin.gruessinger@sap.com","title":"Marvin Gr\u00fc\u00dfinger"},{"location":"doc/","text":"Constants common Global namespace for common modules. util Global namespace for util modules. ui5 Global namespace for UI5 modules. nonUi5 Global namespace for non UI5 modules. service Global namespace for service modules. common Global namespace for common modules. Kind : global constant common .assertion .expectEqual(value1, value2) .expectUnequal(value1, value2) .expectTrue(value) .expectFalse(value) .expectDefined(value) .expectUndefined(value) .expectUrlToBe() .date .getToday([format]) \u21d2 String .getTomorrow([format]) \u21d2 String .getNextMonth([format]) \u21d2 String .getPreviousMonth([format]) \u21d2 String .getNextYear([format]) \u21d2 String .getPreviousYear([format]) \u21d2 String .getSpecific(date, [format]) \u21d2 String .calculate([date], [format]) \u21d2 String .navigation .navigateToUrl(url) .navigateToUrlAndRetry(url, [retries], [interval]) .userInteraction .fillActive(value) .fillActiveAndRetry(value, [retries], [interval]) .clearAndFillActive(value) .clearAndFillActiveAndRetry(value, [retries], [interval]) .pressKey(keys) .pressEnter() .pressTab() .pressF4() .pressBackspace() .pressEscape() .pressArrowLeft() .pressArrowRight() common.assertion Kind : static class of common .assertion .expectEqual(value1, value2) .expectUnequal(value1, value2) .expectTrue(value) .expectFalse(value) .expectDefined(value) .expectUndefined(value) .expectUrlToBe() assertion.expectEqual(value1, value2) Expects the passed values to be equal. Kind : static method of assertion Param Type Description value1 Any Value (1) to be equal to value (2) value2 Any Value (2) to be equal to value (1) Example common . assertion . expectEqual ( value1 , value2 ); assertion.expectUnequal(value1, value2) Expects the passed values to be unequal. Kind : static method of assertion Param Type Description value1 Any Value (1) to be unequal to value (2) value2 Any Value (2) to be unequal to value (1) Example common . assertion . expectUnequal ( value1 , value2 ); assertion.expectTrue(value) Expects the passed value to be true. Kind : static method of assertion Param Type Description value Any Value to be equal to true Example common . assertion . expectTrue ( value ); assertion.expectFalse(value) Expects the passed value to be false. Kind : static method of assertion Param Type Description value Boolean The value to be false. Example common . assertion . expectFalse ( false ); assertion.expectDefined(value) Expects the passed values is defined. Kind : static method of assertion Param Type Description value Any Value to be defined (not undefined) Example common . assertion . expectDefined ( value ); assertion.expectUndefined(value) Expects the passed values is undefined. Kind : static method of assertion Param Type Description value Any Value to be undefined Example common . assertion . expectUndefined ( value ); assertion.expectUrlToBe() Expects the url to be the passed value. Kind : static method of assertion Example await common . assertion . expectUrlToBe ( \"www.sap.com\" ); common.date Kind : static class of common .date .getToday([format]) \u21d2 String .getTomorrow([format]) \u21d2 String .getNextMonth([format]) \u21d2 String .getPreviousMonth([format]) \u21d2 String .getNextYear([format]) \u21d2 String .getPreviousYear([format]) \u21d2 String .getSpecific(date, [format]) \u21d2 String .calculate([date], [format]) \u21d2 String date.getToday([format]) \u21d2 String Returns the current day in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getToday ( \"mm/dd/yyyy\" ); date.getTomorrow([format]) \u21d2 String Returns tomorrows date in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getTomorrow ( \"mm/dd/yyyy\" ); date.getNextMonth([format]) \u21d2 String Returns the current day one month later in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getNextMonth ( \"mm/dd/yyyy\" ); date.getPreviousMonth([format]) \u21d2 String Returns the current day one month before in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getPreviousMonth ( \"mm/dd/yyyy\" ); date.getNextYear([format]) \u21d2 String Returns the current day one year later in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getNextYear ( \"mm/dd/yyyy\" ); date.getPreviousYear([format]) \u21d2 String Returns the current day one year before in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getPreviousYear ( \"mm/dd/yyyy\" ); date.getSpecific(date, [format]) \u21d2 String Returns a specific date in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description date String A specific date string. [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getSpecific ( \"2020, 0, 17\" , \"mm/dd/yyyy\" ); date.calculate([date], [format]) \u21d2 String Calculates the date based on the input parameter and returns it in the given format. Kind : static method of date Returns : String - The calculated date in the given format. Param Type Default Description [date] String \"today\" Supported values: today, tomorrow, nextMonth, previousMonth, nextYear, previousYear [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"datetime\", \"object\"). Example const date = await common . date . calculate ( \"today\" , \"mm/dd/yyy\" ); common.navigation Kind : static class of common .navigation .navigateToUrl(url) .navigateToUrlAndRetry(url, [retries], [interval]) navigation.navigateToUrl(url) Navigates to the passed url. Kind : static method of navigation Param Type Description url String The url. Example await common . navigation . navigateToUrl ( \"www.sap.com\" ); navigation.navigateToUrlAndRetry(url, [retries], [interval]) Navigates to the passed url and retries the function in case of a failure. Kind : static method of navigation Param Type Default Description url String The url to navigate to. [retries] Integer 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Integer 5000 The interval of the retries (ms), can be set in config for all functions under params stepRetriesIntervals. Example await common . navigation . navigateToUrlAndRetry ( \"www.sap.com\" ); common.userInteraction Kind : static class of common .userInteraction .fillActive(value) .fillActiveAndRetry(value, [retries], [interval]) .clearAndFillActive(value) .clearAndFillActiveAndRetry(value, [retries], [interval]) .pressKey(keys) .pressEnter() .pressTab() .pressF4() .pressBackspace() .pressEscape() .pressArrowLeft() .pressArrowRight() userInteraction.fillActive(value) Fills the active input with the given value. Kind : static method of userInteraction Param Type Description value String The value with witch the input should be filled. Example await common . userInteraction . fillActive ( \"My Value\" ); userInteraction.fillActiveAndRetry(value, [retries], [interval]) Enters the given value to the active input field and retries the action in case it fails. Kind : static method of userInteraction Param Type Default Description value String The value with witch the input should be filled. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await common . userInteraction . fillActiveAndRetry ( \"My Value\" ); userInteraction.clearAndFillActive(value) Clears and fills the active input. Kind : static method of userInteraction Param Type Description value String The value to fill. Example await common . userInteraction . clearAndFillActive ( \"My Value\" ); userInteraction.clearAndFillActiveAndRetry(value, [retries], [interval]) CClears and fills the active input. Retries the action in case of a failure. Kind : static method of userInteraction Param Type Default Description value String The value to fill. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await common . userInteraction . clearAndFillActiveAndRetry ( \"My Value\" ); userInteraction.pressKey(keys) Performs the specified keypress. Possible values: https://w3c.github.io/webdriver/#keyboard-actions Kind : static method of userInteraction Param Type Description keys String | Array.<String> The key or combination of keys to execute. Example await common . userInteraction . pressKey ( \"Enter\" ); Example await common . userInteraction . pressKey ( \"\\uE004\" ); Example await common . userInteraction . pressKey ([ \"\\uE009\" , \"Alt\" ]); userInteraction.pressEnter() Performs the Enter keypress. Kind : static method of userInteraction Example await common . userInteraction . pressEnter (); userInteraction.pressTab() Performs the Tab keypress. Kind : static method of userInteraction Example await common . userInteraction . pressTab (); userInteraction.pressF4() Performs the F4 keypress. Kind : static method of userInteraction Example await common . userInteraction . pressF4 (); userInteraction.pressBackspace() Performs the Backspace keypress. Kind : static method of userInteraction Example await common . userInteraction . pressBackspace (); userInteraction.pressEscape() Performs the Escape keypress. Kind : static method of userInteraction Example await common . userInteraction . pressEscape (); userInteraction.pressArrowLeft() Performs the Arrow Left keypress. Kind : static method of userInteraction Example await common . userInteraction . pressArrowLeft (); userInteraction.pressArrowRight() Performs the Arrow Right keypress. Kind : static method of userInteraction Example await common . userInteraction . pressArrowRight (); util Global namespace for util modules. Kind : global constant util .browser .getBaseUrl() \u21d2 String .setBaseUrl(baseUrl:) .logCurrentUrl() .getCurrentUrl() .resetFocus() .sleep([duration]) .collectCoverage() .sleepAndCollectCoverage([duration]) .refresh() .clearBrowser([clearLocal], [clearSession], [clearCookies]) .getBrowserName() \u21d2 String .getUI5Version([timeout]) .logUI5Version() .executeScript(command) \u21d2 Any .switchToNewWindow(titleOrUrl, [timeout]) .switchToWindow(handle) .getCurrentWindow() \u21d2 Object .switchToIframe(selector) .switchToDefaultContent() .back() .console .log(message, [textColor], [backgroundColor], [brightness]) .error(message) .warn(message) .success(message) .info(message) .data .getData(filename) \u21d2 String .getSecureData(filename) \u21d2 String .decrypt(data) \u21d2 String .file .upload(files, [selector]) .parsePdf(pdfStream, renderingMethod) \u21d2 String .expectPdfContainsText(pdfStream, text, renderingMethod) .expectPdfNotContainsText(pdfStream, text, renderingMethod) .formatter .sliceStringAt(input, slicePoint, length) \u21d2 String .sliceStringAfter(input, slicePoint, length) \u21d2 String .trimString(input) .extractNumberFromString(input, [index]) \u21d2 String .stringifyJSON(object) \u21d2 String .addRemoveLeadingZeros(number, length) \u21d2 String .formatDate(date, format, [locale]) \u21d2 String .function .retry(fct, args, [retries], [interval], [scope]) .executeOptional(fct, args) .system .getOS() \u21d2 String util.browser Kind : static class of util .browser .getBaseUrl() \u21d2 String .setBaseUrl(baseUrl:) .logCurrentUrl() .getCurrentUrl() .resetFocus() .sleep([duration]) .collectCoverage() .sleepAndCollectCoverage([duration]) .refresh() .clearBrowser([clearLocal], [clearSession], [clearCookies]) .getBrowserName() \u21d2 String .getUI5Version([timeout]) .logUI5Version() .executeScript(command) \u21d2 Any .switchToNewWindow(titleOrUrl, [timeout]) .switchToWindow(handle) .getCurrentWindow() \u21d2 Object .switchToIframe(selector) .switchToDefaultContent() .back() browser.getBaseUrl() \u21d2 String Retrieves the baseUrl from the configuration file. Kind : static method of browser Returns : String - The baseUrl. Example const baseUrl = util . browser . getBaseUrl (); browser.setBaseUrl(baseUrl:) Sets or overwrites the baseUrl in the configuration file. Kind : static method of browser Param Type Description baseUrl: String base URL to set Example await util . browser . setBaseUrl ( \"https://www.sap.com\" ); browser.logCurrentUrl() Displays the current URL in the console. Kind : static method of browser Example await util . browser . logCurrentUrl (); browser.getCurrentUrl() Returns the current URL Kind : static method of browser Example await util . browser . getCurrentUrl (); browser.resetFocus() Resets the focus in case it set for a specific element. Kind : static method of browser Example await util . browser . resetFocus (); browser.sleep([duration]) Sleeps (pauses execution) for the passed duration. Kind : static method of browser Param Type Default Description [duration] Number 1000 The time to pause (ms). Example await util . browser . sleep ( 30000 ); browser.collectCoverage() Trigger collection of coverage by coverage service. Kind : static method of browser Example await util . browser . collectCoverage (); browser.sleepAndCollectCoverage([duration]) Trigger collection of coverage by coverage service. Kind : static method of browser Param Type Default Description [duration] Number 1000 The time to pause (ms). Example await util . browser . sleepAndCollectCoverage ( 3000 ); browser.refresh() Refreshes the page. Kind : static method of browser Example await util . browser . refresh (); browser.clearBrowser([clearLocal], [clearSession], [clearCookies]) Clears the local and session cache and deletes all browser cookies. Kind : static method of browser Param Type Default Description [clearLocal] Boolean true Specifies if the local cache will be cleared. [clearSession] Boolean true Specifies if the session cache will be cleared. [clearCookies] Boolean true Specifies if the cookies will be cleared. Example await util . browser . clearBrowser (); browser.getBrowserName() \u21d2 String Retrieves the name of the current browser. Kind : static method of browser Returns : String - The browser name. Example const browserName = util . browser . getBrowserName (); browser.getUI5Version([timeout]) Gets the UI5 version and creation date for UI5 based applications. Kind : static method of browser Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await util . browser . getUI5Version (); browser.logUI5Version() Logs the UI5 version and creation date for UI5 based applications to the console. Kind : static method of browser Example await util . browser . logUI5Version (); browser.executeScript(command) \u21d2 Any Executes the specified JavaScript command. Kind : static method of browser Returns : Any - The result from the executed function. Param Type Description command String The command to execute. Example await util . browser . executeScript ( command ); browser.switchToNewWindow(titleOrUrl, [timeout]) Switches to the window or tab with the given title. Kind : static method of browser Param Type Default Description titleOrUrl String | RegExp Window title or url of the expected window or tab (can be either a string or part of it as regular expression). [timeout] Number 10000 The timeout to wait (ms). Example await util . browser . switchToNewWindow ( \"SAP - Home\" ); Example await util . browser . switchToNewWindow ( /Home/ ); Example await util . browser . switchToNewWindow ( \"www.sap.com\" ); browser.switchToWindow(handle) Switches to the passed window. Kind : static method of browser Param Type Description handle Object The window handle. Example await util . browser . switchToWindow ( originalWindowHandle ); browser.getCurrentWindow() \u21d2 Object Returns the current window handle. Kind : static method of browser Returns : Object - The window handle. Example const originalWindowHandle = await util . browser . getCurrentWindow (); browser.switchToIframe(selector) Switches to the passed iframe. Kind : static method of browser Param Type Description selector String The CSS selector describing the iframe element. Example await util . browser . switchToIframe ( \"iframe[id='frame01']\" ); browser.switchToDefaultContent() Switches to the default content of the HTML page. Kind : static method of browser Example await util . browser . switchToDefaultContent (); browser.back() Go one step back in browser history. Kind : static method of browser Example await util . browser . back (); util.console Kind : static class of util .console .log(message, [textColor], [backgroundColor], [brightness]) .error(message) .warn(message) .success(message) .info(message) console.log(message, [textColor], [backgroundColor], [brightness]) Logs a message to the console in the given color. Kind : static method of console Param Type Description message String The message to log. [textColor] String The color of the text: \"black, white\", \"red\", \"yellow\", \"green\", \"blue\", \"cyan\", \"magenta\". [backgroundColor] String The color of the background: \"black, white\", \"red\", \"yellow\", \"green\", \"blue\", \"cyan\", \"magenta\". [brightness] String Adjusts the brightness of the color: \"bright\", \"dim\". Leave empty for default. Example util . console . log ( \"The document has been saved.\" , \"green\" ); console.error(message) Logs a error message to the console in red. Kind : static method of console Param Type Description message String The message to log. Example util . console . error ( \"Error: Please investigate.\" ); console.warn(message) Logs a warning message to the console in yellow. Kind : static method of console Param Type Description message String The message to log. Example util . console . warn ( \"Optional step not executed.\" ); console.success(message) Logs a success message to the console in green. Kind : static method of console Param Type Description message String The message to log. Example util . console . success ( \"The document has been saved.\" ); console.info(message) Logs a info message to the console in cyan. Kind : static method of console Param Type Description message String The message to log. Example util . console . success ( \"The document has been saved.\" ); util.data Kind : static class of util .data .getData(filename) \u21d2 String .getSecureData(filename) \u21d2 String .decrypt(data) \u21d2 String data.getData(filename) \u21d2 String Returns the data object with the given filename (JSON, stored in data folder). Kind : static method of data Returns : String - The data object. Param Type Description filename String The name of the data file. Example const data = util . data . getData ( \"myTest\" ); data.getSecureData(filename) \u21d2 String Returns and encrypts the data object with the given filename (JSON, stored in data folder). Will return the local file object if private key is not accessible. Kind : static method of data Returns : String - The encrypted or local data object. Param Type Description filename String The name of the data file (without suffix '.secure' or '.local'). Example const secureData = util . data . getSecureData ( \"myTest\" ); data.decrypt(data) \u21d2 String Decrypts the passed input data. Kind : static method of data Returns : String - The decrypted data. Param Type Description data String The encrypted data to decrypt. Example const decrypted = util . data . decrypt ( \"d704004c262faa8ef4bdcf34c8a94883e15524872c7bef334d26a391a1934cf47338b749d99426980ee4cc7a81deaef21439c6894ab0324cdb29b9b6332635baca442651c5d37847f52bb90b8868e037271a7d456024b39b65fdf4dc62e8d82a3d5683a72e4324c59d339742fc79749f0ee74abef916d38e306218adc48e3547a2b346962249320c962d22cb46d9998de36d8219a2496c0997d0fc389f76fb1431a9b57c317886e9c9795c0a09ad98d9fa0b7687d10814dc7973397f3f72a227a04ead4c3d1d428c096a51922ffc4d7afc3952df1c130def5c5fb3e834605cbf1454885966cc65c77046343f4c678e74931fb2dd6cac8dae17837cf674f288d6550dd7fa6b01f5b7ea68aa6bd27d79dd5d53edb5fd4b4edce824bd31b3939352ad7a71a16bab8c54025c2bb92c54e022fcd23ff08bc54a17fc50d00dc3b884cadbfdefe1e75901fdf80e7324ad02a891f2c4863fa120ca238520b79126c65a03\" ); util.file Kind : static class of util .file .upload(files, [selector]) .parsePdf(pdfStream, renderingMethod) \u21d2 String .expectPdfContainsText(pdfStream, text, renderingMethod) .expectPdfNotContainsText(pdfStream, text, renderingMethod) file.upload(files, [selector]) Uploads all the file/s by the paths given in the Array. Kind : static method of file Param Type Default Description files Array.<String> Array with path/s of file/s to be uploaded. [selector] String \"input[type='file']\" Custom selector of uploader control (in case there are more then one present). Example await util . file . upload ([ \"path/to/text1.txt\" , \"path/to/text2.txt\" ]); // uses the default uploader control Example await util . file . upload ([ \"path/to/text1.txt\" , \"path/to/text2.txt\" ], \"input[id='myUpload']\" ); // upload to file uploader with matching selector file.parsePdf(pdfStream, renderingMethod) \u21d2 String Parses the text from PDF stream. Returned text can be asserted to verify the PDF document content. Kind : static method of file Returns : String - The parsed PDF text. See : Parse PDF Param Type Description pdfStream Buffer PDF stream to be downloaded. renderingMethod function Function to customize the parsing process. Example await util . file . parsePdf ( pdfStream , customRenderingMethod ); file.expectPdfContainsText(pdfStream, text, renderingMethod) Parses the PDF and checks for given text to be contained in PDF. Kind : static method of file See : Parse pdf Param Type Description pdfStream Buffer PDF stream to be downloaded. text String The expected text. renderingMethod function Function to customize the parsing process. Example await util . file . expectPdfContainsText ( pdfStream , \"abc\" ); file.expectPdfNotContainsText(pdfStream, text, renderingMethod) Parses the PDF and checks for given text not to be contained in PDF. Kind : static method of file See : Parse pdf Param Type Description pdfStream Buffer PDF stream to be downloaded text String The text expected to be not contained in the PDF. renderingMethod function Function to customize the parsing process. Example await util . file . expectPdfNotContainsText ( pdfStream , \"abc\" ); util.formatter Kind : static class of util .formatter .sliceStringAt(input, slicePoint, length) \u21d2 String .sliceStringAfter(input, slicePoint, length) \u21d2 String .trimString(input) .extractNumberFromString(input, [index]) \u21d2 String .stringifyJSON(object) \u21d2 String .addRemoveLeadingZeros(number, length) \u21d2 String .formatDate(date, format, [locale]) \u21d2 String formatter.sliceStringAt(input, slicePoint, length) \u21d2 String Slices the given string beginning at a specific substring. Kind : static method of formatter Returns : String - The sliced string. Param Type Description input String The input string to slice. slicePoint String The substring at which the input string is being sliced. length number The required length of the returning string (starting at the index of the passed slice point). Example const sliced = util . formatter . sliceStringAt ( \"prefixNR12345postfix\" , \"NR\" , 7 ); // returns \"NR12345\" formatter.sliceStringAfter(input, slicePoint, length) \u21d2 String Slices the given string after a specific substring. Kind : static method of formatter Returns : String - The sliced string. Param Type Description input String The input string to slice. slicePoint String The substring after which the input string is being sliced. length number The required length of the returning string (starting at the index after the passed slice point). Example const sliced = util . formatter . sliceStringAfter ( \"prefixNR12345postfix\" , \"NR\" , 5 ); // returns \"12345\" formatter.trimString(input) Removes whitespace from both sides of the given string. Kind : static method of formatter Param Type Description input String The input string to trim. Example const trimmed = util . formatter . trimString ( \" value \" ); // returns \"value\" formatter.extractNumberFromString(input, [index]) \u21d2 String Extracts all numbers from a string. Kind : static method of formatter Returns : String - The extracted number. Param Type Default Description input String The input string to extract the number. [index] number 0 If there are multiple numbers in the string you can pass an index to return a specific number. Example const extracted = util . formatter . extractNumberFromString ( \"prefixNR12345postfix\" ); // returns \"12345\" Example const extracted = util . formatter . extractNumberFromString ( \"first12345 someText second 20 abc\" , 1 ); // returns \"20\" formatter.stringifyJSON(object) \u21d2 String Converts a JSON object to string. Kind : static method of formatter Returns : String - The converted JSON object. Param Type Description object Object The JSON to be converted. Example console . log ( `Printing the current selector: ${ util . formatter . stringifyJSON ( selector ) } ` ); formatter.addRemoveLeadingZeros(number, length) \u21d2 String Adds or removes leading zeros to the passed number to format it to the required length. Kind : static method of formatter Returns : String - The formatted number. Param Type Description number String The number to be formatted. length Number The required length of the number. Example const itemNumber = util . formatter . addRemoveLeadingZeros ( 10 , 5 ); formatter.formatDate(date, format, [locale]) \u21d2 String formats date. Kind : static method of formatter Returns : String - The formatted date as string. Param Type Default Description date Date The date object to be formatted. format String The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). [locale] String \"en-US\" The locale format of the date. E.g. \"en-US\", \"de-DE\", etc. Example const date = new Date ( 2020 , 0 , 17 ); const formattedDate = util . formatter . formatDate ( date , \"mm/dd/yyyy\" ); // returns \"01/17/2020\" Example const date = new Date ( 2022 , 3 , 12 ); const formattedDate = util . formatter . formatDate ( date , \"mmm dd, yyyy\" ); // returns \"Apr 03, 2022\" util.function Kind : static class of util .function .retry(fct, args, [retries], [interval], [scope]) .executeOptional(fct, args) function.retry(fct, args, [retries], [interval], [scope]) Retries the passed function n times with a specific interval until it executed successfully. Kind : static method of function Param Type Default Description fct function The function to retry. args Array An array of the arguments passed to the function. [retries] Integer 3 The number of retries. Can be set in config for all functions under \"params\" - \"stepsRetries\". [interval] Integer 5000 The interval of the retries (ms). Can be set in config for all functions under \"params\" - \"stepRetriesIntervals\". [scope] Object The function scope. Defaults is the global object. Example await util . function . retry ( ui5 . userInteraction . fill , [ selector , value ], 4 , 10000 ); Example await util . function . retry ( async () => { await ui5 . userInteraction . fill ( selector , \"ABC\" ); }, [], 2 , 30000 ); function.executeOptional(fct, args) Executes the given function optionally. If it fails, a promise will be returned anyway. Kind : static method of function Param Type Description fct function The function to execute. args Array An array of the arguments passed to the function. Example await util . function . executeOptional ( ui5 . userInteraction . fill , [ selector , value ]); Example await util . function . executeOptional ( async () => { await ui5 . userInteraction . fill ( selector , \"ABC\" ); }, []); util.system Kind : static class of util system.getOS() \u21d2 String Returns the current operating system. Kind : static method of system Returns : String - AIX | Android | MacOS | FreeBSD | Linux | OpenBSD | Windows | SunOS Example const os = await util . system . getOS (); ui5 Global namespace for UI5 modules. Kind : global constant ui5 .assertion .expectAttributeToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectAttributeToContain(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectTextToBe(selector, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectValueToBe(selector, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectValueToBeDefined(selector, [index], [timeout]) .expectToBeNotEnabled(selector, [index], [timeout], [loadPropertyTimeout]) .expectToBeEnabled(selector, [index], [timeout], [loadPropertyTimeout]) .expectValidationError(selector, [index], [timeout], [loadPropertyTimeout]) .expectValidationSuccess(selector, [index], [timeout], [loadPropertyTimeout]) .expectBindingPathToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectBindingContextPathToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectToBeVisible(selector, [index], [timeout], [loadPropertyTimeout]) .expectToBeVisibleInViewport(selector, [index], [timeout], [loadPropertyTimeout]) .expectToBeNotVisible(selector, [index], [timeout]) .expectMessageToastTextToBe(text, [timeout]) .confirmationDialog .clickButton(text, [timeout]) .clickOk([timeout]) .clickCancel([timeout]) .clickYes([timeout]) .clickNo([timeout]) .clickCreate([timeout]) .clickDelete([timeout]) .clickRevokeApproval([timeout]) .control .execute(callbackFunction, selectorOrElement, args) .getProperty(elem, propertyName) .getAggregationProperty(elem, propertyName) .getAssociationProperty(elem, propertyName) .getBindingContextPathProperty(elem) .getPropertyBinding(elem, propertyName) \u21d2 Array .date .pick(selector, date, [index]) .pickRange(selector, range, [index]) .fillRange(selector, range, [index]) .element .waitForAll(selector, [timeout]) .getAllDisplayed(selector, [timeout]) \u21d2 Array.<Object> .getDisplayed(selector, [index], [timeout]) \u21d2 Object .getByText(selector, value, [index], [timeout]) \u21d2 Object .getByChild(elementSelector, childSelector, [index], [timeout]) \u21d2 Object .getByParent(elementSelector, parentSelector, [index], [timeout]) \u21d2 Object .getId(selector, [index], [timeout]) \u21d2 String .getPropertyValue(selector, property, [index], [timeout]) \u21d2 String .getValue(selector, [index], [timeout]) \u21d2 String .getBindingValue(selector, bindingContext, [index], [timeout]) \u21d2 String .isVisible(selector, [index], [timeout]) \u21d2 Boolean .highlight(selector, [duration], [color]) .errorDialog .expectToBeVisible() .clickClose() .footerBar .clickButton(text, [timeout]) .clickApply([timeout]) .clickSave([timeout]) .clickCreate([timeout]) .clickCancel([timeout]) .clickCheck([timeout]) .clickOrder([timeout]) .clickPost([timeout]) .clickAdd([timeout]) .mockserver .waitForUi5ApplicationLoad(interval) .interactWithMockServer(mockServerPath, fnCallback, oParams) .attachFunctionBefore(method, mockServerPath, fnBeforeCallback, oParams) .attachFunctionAfter(method, mockServerPath, fnAfterCallback, oParams) .addNewRequest(method, mockServerPath, urlPathRegex, responseJsonPath, returnCode, isText, responseMessages, responseLocation) .removeRequest(method, mockServerPath, urlPathRegex) .addOrOverrideRequest(method, mockServerPath, urlPathRegex, responseJsonPath, returnCode, isText, responseMessages, responseLocation) .startMockServer(mockServerPath) .initMockServer(mockServerPath, mockServerOptions) .initApplication(mockServerPath) .stopMockServer(mockServerPath) .loadMockDataFile(filePath, isText) \u21d2 String .getEntitySetData(mockServerPath, entitySetName) \u21d2 Array .setEntitySetData(mockServerPath, entitySetName, entries) .navigation .navigateToApplication(intent, [preventPopups], [verify], [refresh]) .navigateToApplicationAndRetry(intent, [preventPopups], [verify], [retries], [interval]) .navigateToSystemAndApplication(system, intent, [closePopups], [verify]) .navigateToSystemAndApplicationAndRetry(system, intent, [closePopups], [verify], [retries], [interval]) .navigateToApplicationWithQueryParams(intent, queryParams, [preventPopups], [verify]) .navigateToApplicationWithQueryParamsAndRetry(intent, queryParams, [preventPopups], [verify], [retries], [interval]) .closePopups([timeout]) .expectUnsupportedNavigationPopup(navigationTarget) .navigationBar .clickBack([timeout]) .clickSapLogo([timeout]) .clickUserIcon([timeout]) .expectPageTitle(compareValue) .expectShellHeader([timeout]) .qunit .executeTests(path) .session .login(username, [password], [verify], [timeout]) .loginFiori(username, [password], [verify]) .loginSapCloud(username, [password], [verify]) .loginCustom(username, [password], usernameFieldSelector, passwordFieldSelector, logonButtonSelector, [verify]) .loginCustomViaConfig(username, password, [verify]) .logout([verify]) .switchUser(username, [password], [authenticator], [wait]) .expectLogoutText() .table .sortColumnAscending(columnName, [tableSelector]) .sortColumnDescending(columnName, [tableSelector]) .clickSettingsButton([tableSelector]) .userInteraction .click(selector, [index], [timeout]) .clickAndRetry(selector, [index], [timeout], [retries], [interval]) .clickTab(selector, [index], [timeout]) .clickListItem(selector, [index], [timeout]) .fill(selector, value, [index], [timeout]) .fillAndRetry(selector, value, [index], [timeout], [retries], [interval]) .clear(selector, [index], [timeout]) .clearAndRetry(selector, [index], [timeout], [retries], [interval]) .clearAndFill(selector, value, [index], [timeout]) .clearAndFillAndRetry(selector, value, [index], [timeout], [retries], [interval], [verify]) .clearSmartFieldInput(selector, [index], [timeout]) .clearAndFillSmartFieldInput(selector, value, [index], [timeout]) .clearAndFillSmartFieldInputAndRetry(selector, value, [index], [timeout], [retries], [interval]) .selectBox(selector, value, [index]) .selectComboBox(selector, value, [index]) .selectMultiComboBox(selector, values, [index]) .clickSelectArrow(selector, [index]) .clickSelectArrowAndRetry(selector, [index], [retries], [interval]) .mouseOverElement(selector, [index], [timeout]) .scrollToElement(selector, [index], [alignment], [timeout]) .selectAll([selector], [index], [timeout]) .openF4Help(selector, [index], [timeout], useF4Key) .searchFor(selector, [index], [timeout], useEnter) .resetSearch(selector, [index], [timeout]) .doubleClick(selector, [index], [timeout]) .rightClick(selector, [index], [timeout]) ui5.assertion Kind : static class of ui5 .assertion .expectAttributeToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectAttributeToContain(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectTextToBe(selector, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectValueToBe(selector, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectValueToBeDefined(selector, [index], [timeout]) .expectToBeNotEnabled(selector, [index], [timeout], [loadPropertyTimeout]) .expectToBeEnabled(selector, [index], [timeout], [loadPropertyTimeout]) .expectValidationError(selector, [index], [timeout], [loadPropertyTimeout]) .expectValidationSuccess(selector, [index], [timeout], [loadPropertyTimeout]) .expectBindingPathToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectBindingContextPathToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectToBeVisible(selector, [index], [timeout], [loadPropertyTimeout]) .expectToBeVisibleInViewport(selector, [index], [timeout], [loadPropertyTimeout]) .expectToBeNotVisible(selector, [index], [timeout]) .expectMessageToastTextToBe(text, [timeout]) assertion.expectAttributeToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) Expects the passed elements attribute to be the compare value. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. attribute String The attribute to be compared. compareValue String | Boolean | Number | Object The compare value. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectAttributeToBe ( selector , \"text\" , \"Hello\" ); assertion.expectAttributeToContain(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) Expects the passed elements attribute to contain the compare value. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. attribute String The attribute to be compared. compareValue String The compare value. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectAttributeToContain ( selector , \"text\" , \"abc\" ); assertion.expectTextToBe(selector, compareValue, [index], [timeout], [loadPropertyTimeout]) Expects the passed elements text attribute to be the compare value. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. compareValue String The compare value. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectTextToBe ( selector , \"Hello\" ); assertion.expectValueToBe(selector, compareValue, [index], [timeout], [loadPropertyTimeout]) Expects the passed elements value attribute to be the compare value. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. compareValue String | Number The compare value. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectValueToBe ( selector , \"123\" ); assertion.expectValueToBeDefined(selector, [index], [timeout]) Expects the passed elements value to be defined. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . assertion . expectValueToBeDefined ( selector ); assertion.expectToBeNotEnabled(selector, [index], [timeout], [loadPropertyTimeout]) Expects that the element is enabled to the user. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectToBeNotEnabled ( selector ); assertion.expectToBeEnabled(selector, [index], [timeout], [loadPropertyTimeout]) Expects that the element is enabled to the user. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectToBeEnabled ( selector ); assertion.expectValidationError(selector, [index], [timeout], [loadPropertyTimeout]) Expects the \"valueState\" of the element to be \"Error\". Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectValidationError ( selector ); assertion.expectValidationSuccess(selector, [index], [timeout], [loadPropertyTimeout]) Expects the valueState of the element to be \"None\". Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectValidationSuccess ( selector ); assertion.expectBindingPathToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) Expects the passed elements attribute binding-path to contain the compare value Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. attribute String The attribute to be compared. compareValue String | Array.<String> The compare value(s). [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectBindingPathToBe ( selector , \"text\" , \"Hello\" ); assertion.expectBindingContextPathToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) Expects the passed elements binding-context-path to be the compare value. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. attribute String The attribute to be compared. compareValue String The compare value. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectBindingContextPathToBe ( selector , \"text\" , \"Hello\" ); assertion.expectToBeVisible(selector, [index], [timeout], [loadPropertyTimeout]) Expects that the element is visible to the user. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectToBeVisible ( selector ); assertion.expectToBeVisibleInViewport(selector, [index], [timeout], [loadPropertyTimeout]) Expects that the element is visible in the viewport. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectToBeVisibleInViewport ( selector ); assertion.expectToBeNotVisible(selector, [index], [timeout]) Expects that the element is not visible to the user. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Recommendation is to lower the timeout since the element is not expected to show up. Example await ui5 . assertion . expectToBeNotVisible ( selector , 0 , 5000 ); assertion.expectMessageToastTextToBe(text, [timeout]) Expects the message toast with the passed text. Kind : static method of assertion Param Type Default Description text String The expected text. [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . assertion . expectMessageToastTextToBe ( text ); ui5.confirmationDialog Kind : static class of ui5 .confirmationDialog .clickButton(text, [timeout]) .clickOk([timeout]) .clickCancel([timeout]) .clickYes([timeout]) .clickNo([timeout]) .clickCreate([timeout]) .clickDelete([timeout]) .clickRevokeApproval([timeout]) confirmationDialog.clickButton(text, [timeout]) Clicks the button with the given text at the confirmation dialog. Kind : static method of confirmationDialog Param Type Default Description text String The text of the button. [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . confirmationDialog . clickButton ( \"Ok\" ); confirmationDialog.clickOk([timeout]) Clicks the \"OK\" button at the confirmation dialog. Kind : static method of confirmationDialog Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . confirmationDialog . clickOk (); confirmationDialog.clickCancel([timeout]) Clicks the \"Cancel\" button at the confirmation dialog. Kind : static method of confirmationDialog Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . confirmationDialog . clickCancel (); confirmationDialog.clickYes([timeout]) Clicks the \"Yes\" button at the confirmation dialog. Kind : static method of confirmationDialog Param Type Description [timeout] Number The timeout to wait (default value: 30 sec). Example await ui5 . confirmationDialog . clickYes (); confirmationDialog.clickNo([timeout]) Clicks the \"Yes\" button at the confirmation dialog. Kind : static method of confirmationDialog Param Type Description [timeout] Number The timeout to wait (default value: 30 sec). Example await ui5 . confirmationDialog . clickNo (); confirmationDialog.clickCreate([timeout]) Clicks the create button in the confirmation dialog Kind : static method of confirmationDialog Param Type Description [timeout] Number The timeout to wait (default value: 30 sec). Example await ui5 . confirmationDialog . clickCreate (); confirmationDialog.clickDelete([timeout]) Clicks the \"Delete\" button at the confirmation dialog. Kind : static method of confirmationDialog Param Type Description [timeout] Number The timeout to wait (default value: 30 sec). Example await ui5 . confirmationDialog . clickDelete (); confirmationDialog.clickRevokeApproval([timeout]) Clicks the \"Revoke Approval\" button at the confirmation dialog. Kind : static method of confirmationDialog Param Type Description [timeout] Number The timeout to wait (default value: 30 sec). Example await ui5 . confirmationDialog . clickRevokeApproval (); ui5.control Kind : static class of ui5 .control .execute(callbackFunction, selectorOrElement, args) .getProperty(elem, propertyName) .getAggregationProperty(elem, propertyName) .getAssociationProperty(elem, propertyName) .getBindingContextPathProperty(elem) .getPropertyBinding(elem, propertyName) \u21d2 Array control.execute(callbackFunction, selectorOrElement, args) Executes a native UI5 action as callback function in the browser on the given UI5 control. Kind : static method of control Param Type Description callbackFunction function The client script function to be used with the control instance. Caution: The first and last parameter is reserved for the mockserver instance and the promise resolve function - done. selectorOrElement String | Object The selector object or the dom element (retrieved from getDisplayedElement). args Object An object containing the arguments to pass to the callback function. Example const selector = { \"elementProperties\" : { \"metadata\" : \"sap.m.StandardListItem\" , \"id\" : \"*categoryList-7\" }}; const args = { \"property\" : \"text\" }; const title = await ui5 . control . execute ( function ( control , args , done ) { done ( control . getProperty ( args . property )); }, selector , args ); control.getProperty(elem, propertyName) Gets the UI5 control property of the given element. Kind : static method of control Param Type Description elem Object The element. propertyName String The property name of the control to retrieve the value from. Example const selector = { \"elementProperties\" : { \"metadata\" : \"sap.m.StandardListItem\" , \"mProperties\" : { \"title\" : [{ \"path\" : \"CategoryName\" }] }}; const elem = await ui5 . control . locator . getDisplayedElement ( selector ); const propertyName = \"title\" ; const val = await ui5 . control . getProperty ( elem , propertyName ); control.getAggregationProperty(elem, propertyName) Gets the UI5 control aggregation property of the given element. Kind : static method of control Param Type Description elem Object The element. propertyName String The aggregation property name of the control to retrieve the value from. Example const selector = { \"elementProperties\" : { \"metadata\" : \"sap.m.StandardListItem\" , \"mProperties\" : { \"items\" : [{ \"path\" : \"/Categories\" }] }}; const elem = await ui5 . control . locator . getDisplayedElement ( selector ); const propertyName = \"tooltip\" ; const val = await ui5 . control . getAggregationProperty ( elem , propertyName ); control.getAssociationProperty(elem, propertyName) Get UI control property Kind : static method of control Param Type Description elem Object The element. propertyName String The association property name of the control to retrieve the value from. Example const selector = { \"elementProperties\" : { \"metadata\" : \"sap.m.MultiComboBox\" , \"mProperties\" : {}}; const elem = await ui5 . control . locator . getDisplayedElement ( selector ); const propertyName = \"selectedItems\" ; const propertyValue = await ui5 . control . getAssociationProperty ( elem , propertyName ); control.getBindingContextPathProperty(elem) Get UI control binding context path Kind : static method of control Param Type Description elem Object The element. Example const selector = { \"elementProperties\" : { \"metadata\" : \"sap.m.StandardListItem\" , \"mProperties\" : { \"title\" : [{ \"path\" : \"CategoryName\" }] }}; const elem = await ui5 . control . locator . getDisplayedElement ( selector ); const context = await ui5 . control . getBindingContextPathProperty ( elem ); control.getPropertyBinding(elem, propertyName) \u21d2 Array Get UI control property Kind : static method of control Returns : Array - Array of bindings for the specific property Param Type Description elem Object The element. propertyName String The property name to retrieve from the control binding Example const selector = { \"elementProperties\" : { \"metadata\" : \"sap.m.StandardListItem\" , \"mProperties\" : { \"title\" : [{ \"path\" : \"CategoryName\" }] }}; const elem = await ui5 . control . locator . getDisplayedElement ( selector ); const propertyName = \"title\" ; const binding = await ui5 . control . getPropertyBinding ( elem , propertyName ); ui5.date Kind : static class of ui5 .date .pick(selector, date, [index]) .pickRange(selector, range, [index]) .fillRange(selector, range, [index]) date.pick(selector, date, [index]) Picks the passed date using the \"DatePicker\" with the given selector. Kind : static method of date Param Type Default Description selector Selector The selector describing the element. date Date The date object. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example const today = await common . date . calculate ( \"today\" ); await ui5 . date . pick ( selector , date ); date.pickRange(selector, range, [index]) Picks the passed date range using the \"DatePicker\" with the given selector. Note that this will only work within the current month! Kind : static method of date Param Type Default Description selector Selector The selector describing the element. range Array.<Object> The array of date objects containing start- and end date. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example const start = await common . date . calculate ( \"2020, 9, 20\" ); const end = await common . date . calculate ( \"2021, 1, 3\" ); const range = [ start , end ]; await ui5 . date . pickRange ( selector , range ); date.fillRange(selector, range, [index]) Enters the passed date range to the date input with the given selector by providing the start- and end date. Kind : static method of date Param Type Default Description selector Selector The selector describing the element. range Array.<Object> The array of date objects containing start- and end date. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example const start = await common . date . calculate ( \"2020, 9, 20\" , \"dd.mm.yyyy\" ); const end = await common . date . calculate ( \"2021, 1, 3\" , \"dd.mm.yyyy\" ); const range = [ start , end ]; await ui5 . date . fillRange ( selector , range ); ui5.element Kind : static class of ui5 .element .waitForAll(selector, [timeout]) .getAllDisplayed(selector, [timeout]) \u21d2 Array.<Object> .getDisplayed(selector, [index], [timeout]) \u21d2 Object .getByText(selector, value, [index], [timeout]) \u21d2 Object .getByChild(elementSelector, childSelector, [index], [timeout]) \u21d2 Object .getByParent(elementSelector, parentSelector, [index], [timeout]) \u21d2 Object .getId(selector, [index], [timeout]) \u21d2 String .getPropertyValue(selector, property, [index], [timeout]) \u21d2 String .getValue(selector, [index], [timeout]) \u21d2 String .getBindingValue(selector, bindingContext, [index], [timeout]) \u21d2 String .isVisible(selector, [index], [timeout]) \u21d2 Boolean .highlight(selector, [duration], [color]) element.waitForAll(selector, [timeout]) Waits for all elements matching the given selector. Kind : static method of element Param Type Default Description selector Object The selector describing the elements. [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . element . waitForAll ( selector ); element.getAllDisplayed(selector, [timeout]) \u21d2 Array.<Object> Returns the visible elements with the given selector. Kind : static method of element Returns : Array.<Object> - - The found elements. Param Type Default Description selector Object The selector describing the elements. [timeout] Number 30000 The timeout to wait (ms). Example const elem = await ui5 . element . getAllDisplayed ( selector ); element.getDisplayed(selector, [index], [timeout]) \u21d2 Object Returns the visible element. Kind : static method of element Returns : Object - The found element. Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elem = await ui5 . element . getDisplayed ( selector ); element.getByText(selector, value, [index], [timeout]) \u21d2 Object Returns the element with the given selector and text value. Kind : static method of element Returns : Object - The found element. Param Type Default Description selector Object The selector describing the element. value String The text value of the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elem = await ui5 . element . getByText ( selector , \"Home\" ); element.getByChild(elementSelector, childSelector, [index], [timeout]) \u21d2 Object Gets an element by its selector and child selector. Can be used as unique combination between element and child properties when multiple elements have the same properties. Note: For nested selectors, all properties except of the \"elementProperties\" are being ignored. Kind : static method of element Returns : Object - The found element. Param Type Default Description elementSelector String The selector describing the requested element. childSelector String The selector describing a child element of the requested element. [index] Number 0 The index of the element (in case the combination applies to more than one element). [timeout] Number 30000 The timeout to wait (ms). Example const elementSelector = { \"elementProperties\" : {...} }; const childSelector = { \"elementProperties\" : {...} }; const elem = await ui5 . element . getByChild ( elementSelector , childSelector ); element.getByParent(elementSelector, parentSelector, [index], [timeout]) \u21d2 Object Gets an element by its selector and parent selector. Can be used as unique combination between element and parent properties when multiple elements have the same properties. Note: For nested selectors, all properties except of the \"elementProperties\" are being ignored. Kind : static method of element Returns : Object - The found element. Param Type Default Description elementSelector String The selector describing the requested element. parentSelector String The selector describing the parent element of the requested element. [index] Number 0 The index of the element (in case the combination applies to more than one element). [timeout] Number 30000 The timeout to wait (ms). Example const elementSelector = { \"elementProperties\" : {...} }; const parentSelector = { \"elementProperties\" : {...} }; const elem = await ui5 . element . getByParent ( elementSelector , parentSelector ); element.getId(selector, [index], [timeout]) \u21d2 String Returns the id of the element with the given selector. Kind : static method of element Returns : String - The id of the element. Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elemId = await ui5 . element . getId ( selector ); element.getPropertyValue(selector, property, [index], [timeout]) \u21d2 String Returns the UI5 property value of the passed element. Kind : static method of element Returns : String - The property value of the element. Param Type Default Description selector Object The selector describing the element. property String The property of the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elemValue = await ui5 . element . getPropertyValue ( selector , \"text\" ); element.getValue(selector, [index], [timeout]) \u21d2 String Returns the inner value of the passed element. Kind : static method of element Returns : String - The value of the element. Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elemValue = await ui5 . element . getValue ( selector ); element.getBindingValue(selector, bindingContext, [index], [timeout]) \u21d2 String Returns the value of the given binding property for a specific element. Kind : static method of element Returns : String - The binding property value. Param Type Default Description selector Object The selector describing the element. bindingContext String The binding property to retrieve. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elemBindingValue = await ui5 . element . getBindingValue ( selector , \"InvoiceGrossAmount\" ); element.isVisible(selector, [index], [timeout]) \u21d2 Boolean Determines if the element is visible. Kind : static method of element Returns : Boolean - The bool value 'true' or 'false' if the element is visible or not. Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const isVisible = await ui5 . element . isVisible ( selector ); element.highlight(selector, [duration], [color]) Highlights the element with the given selector. Kind : static method of element Param Type Default Description selector Object The selector describing the element. [duration] Number 2000 The duration of the highlighting (ms). [color] String \"red\" The color of the highlighting (CSS color). Example await ui5 . element . highlight ( selector , 3000 , \"green\" ); ui5.errorDialog Kind : static class of ui5 .errorDialog .expectToBeVisible() .clickClose() errorDialog.expectToBeVisible() Expects that the error dialog is visible on the page. Kind : static method of errorDialog Example await ui5 . errorDialog . expectToBeVisible (); errorDialog.clickClose() Clicks the 'Close' button at the error dialog. Kind : static method of errorDialog Example await ui5 . errorDialog . clickClose (); ui5.footerBar Kind : static class of ui5 .footerBar .clickButton(text, [timeout]) .clickApply([timeout]) .clickSave([timeout]) .clickCreate([timeout]) .clickCancel([timeout]) .clickCheck([timeout]) .clickOrder([timeout]) .clickPost([timeout]) .clickAdd([timeout]) footerBar.clickButton(text, [timeout]) Clicks the button with the given text at the footer bar. Kind : static method of footerBar Param Type Default Description text String The text of the button. [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickButton ( \"Ok\" ); footerBar.clickApply([timeout]) Clicks the 'Apply' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickApply (); footerBar.clickSave([timeout]) Clicks the 'Save' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickSave (); footerBar.clickCreate([timeout]) Clicks the 'Create' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickCreate (); footerBar.clickCancel([timeout]) Clicks the 'Cancel' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickCancel (); footerBar.clickCheck([timeout]) Clicks the 'Check' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickCheck (); footerBar.clickOrder([timeout]) Clicks the 'Order' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickOrder (); footerBar.clickPost([timeout]) Clicks the 'Post' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickPost (); footerBar.clickAdd([timeout]) Clicks the 'Add' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickAdd (); ui5.mockserver Kind : static class of ui5 .mockserver .waitForUi5ApplicationLoad(interval) .interactWithMockServer(mockServerPath, fnCallback, oParams) .attachFunctionBefore(method, mockServerPath, fnBeforeCallback, oParams) .attachFunctionAfter(method, mockServerPath, fnAfterCallback, oParams) .addNewRequest(method, mockServerPath, urlPathRegex, responseJsonPath, returnCode, isText, responseMessages, responseLocation) .removeRequest(method, mockServerPath, urlPathRegex) .addOrOverrideRequest(method, mockServerPath, urlPathRegex, responseJsonPath, returnCode, isText, responseMessages, responseLocation) .startMockServer(mockServerPath) .initMockServer(mockServerPath, mockServerOptions) .initApplication(mockServerPath) .stopMockServer(mockServerPath) .loadMockDataFile(filePath, isText) \u21d2 String .getEntitySetData(mockServerPath, entitySetName) \u21d2 Array .setEntitySetData(mockServerPath, entitySetName, entries) mockserver.waitForUi5ApplicationLoad(interval) Waits for the UI5 framework to load and makes sure XHR request finished und busy indicators are not visible anymore. Kind : static method of mockserver Param Type Description interval Integer The intervals to use when waiting UI5 to load. Example await ui5 . mockserver . waitForUi5ApplicationLoad ( 100 ); mockserver.interactWithMockServer(mockServerPath, fnCallback, oParams) Execute client script function to enable interaction with mockserver instance [you can write code in ui5 app context] Kind : static method of mockserver Param Type Description mockServerPath String The full path to your mockserver instance fnCallback String | Object The client script function that you can use to interact with your mockserver instance. [Caution] The first and last parameter is reserved (1st param is the mockserver instance and last parameter the promise resolve function - done) oParams String Additional parameters you would like to inject in your client script function Example await ui5 . mockserver . interactWithMockServer ( \"path/to/project/localService/main/mockserver\" , fnCallback , oParams ); mockserver.attachFunctionBefore(method, mockServerPath, fnBeforeCallback, oParams) Attaches a callback function in mockserver attachBefore event to be executed Kind : static method of mockserver Param Type Description method String The attachAfter http method [GET or POST]. mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method so the mockserver instance can be consumed]. fnBeforeCallback String | Object The callback function to be used in the native attachBefore method as described (https://sapui5.hana.ondemand.com/#/api/sap.ui.core.ui5.mockserver%23methods/Summary) oParams Object Additional parameters you would like to inject in your client script function Example await ui5 . mockserver . attachFunctionBefore ( \"GET\" , \"path/to/project/localService/main/mockserver\" , fnBeforeCallback , oParams ); mockserver.attachFunctionAfter(method, mockServerPath, fnAfterCallback, oParams) Attaches a callback function in mockserver attachAfter event to be executed Kind : static method of mockserver Param Type Description method String The attachAfter http method [GET or POST]. mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method so the mockserver instance can be consumed]. fnAfterCallback String | Object The callback function to be used in the native attachAfter method as described (https://sapui5.hana.ondemand.com/#/api/sap.ui.core.ui5.mockserver%23methods/Summary) oParams Object Additional parameters you would like to inject in your client script function Example await ui5 . mockserver . attachFunctionAfter ( \"GET\" , \"path/to/project/localService/main/mockserver\" , fnAfterCallback ); mockserver.addNewRequest(method, mockServerPath, urlPathRegex, responseJsonPath, returnCode, isText, responseMessages, responseLocation) Adds new mock request Kind : static method of mockserver Param Type Description method String The http method [GET,POST..]. mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. urlPathRegex String The url path regex to filter the requests responseJsonPath String The json object or the path to your json file to be used as response [use relative path from the html page started]. returnCode Integer The http response code to simulate for this mock request. isText Boolean If true then content type is text/plain otherwise application/json. responseMessages String Mocks the gw sap-message response messages [Don't forget to stringify your json before: JSON.stringify(msg)] responseLocation String Mocks the location response messages header Example await ui5 . mockserver . addNewRequest ( \"GET\" , \"path/to/project/localService/main/mockserver\" , \"*.Headers.*\" , \"path/to/project/localService/main/mockdata/test.json\" , 200 , true , JSON . stringify ( msg )); mockserver.removeRequest(method, mockServerPath, urlPathRegex) Removes request mock [Doesn't work currently - Mockserver bug] Kind : static method of mockserver Param Type Description method String The http method [GET,POST..]. mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. urlPathRegex String The url path regex to filter the requests Example await ui5 . mockserver . removeRequest ( \"GET\" , \"path/to/project/localService/main/mockserver\" , \"*.Headers.*\" ); mockserver.addOrOverrideRequest(method, mockServerPath, urlPathRegex, responseJsonPath, returnCode, isText, responseMessages, responseLocation) Adds new or overrides an existing mock request Kind : static method of mockserver Param Type Description method String The http method [GET,POST..]. mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. urlPathRegex String The url path regex to filter the requests responseJsonPath String The json object or the path to your json file to be used as response [use relative path from the html page started]. returnCode Integer The http response code to simulate for this mock request. isText Boolean If true then content type is text/plain otherwise application/json. responseMessages String Mocks the gw sap-message response messages [Don't forget to stringify your json before: JSON.stringify(msg)] responseLocation String Mocks the location response messages header Example await ui5 . mockserver . addOrOverrideRequest ( \"GET\" , \"path/to/project/localService/main/mockserver\" , \"*.Headers.*\" , \"path/to/project/localService/main/mockdata/test.json\" , 200 , true , JSON . stringify ( msg )); mockserver.startMockServer(mockServerPath) (Re-)Starts mock server instance Kind : static method of mockserver Param Type Description mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. Example await ui5 . mockserver . startMockServer ( \"path/to/project/localService/main/mockserver\" ); mockserver.initMockServer(mockServerPath, mockServerOptions) Initializes the provide mockserver instance on the fly Kind : static method of mockserver Param Type Description mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. mockServerOptions String The mock server options Example await ui5 . mockserver . initMockServer ( \"path/to/project/localService/main/mockserver\" , mockServerOptions ); mockserver.initApplication(mockServerPath) Initializes the application [Used in the beggining of script, once the mockserver is fully initialized and request mocking is done] Kind : static method of mockserver Param Type Description mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. Example await ui5 . mockserver . initApplication ( \"path/to/project/localService/main/mockserver\" ); mockserver.stopMockServer(mockServerPath) Stops the mockserver instance Kind : static method of mockserver Param Type Description mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. Example await ui5 . mockserver . stopMockServer ( \"path/to/project/localService/main/mockserver\" ); mockserver.loadMockDataFile(filePath, isText) \u21d2 String Loads a mock data file Kind : static method of mockserver Returns : String - The json object Param Type Description filePath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. isText Boolean If true then content type is text/plain otherwise application/json. Example await ui5 . mockserver . loadMockDataFile ( \"path/to/project/mockData/myData.json\" , true ); mockserver.getEntitySetData(mockServerPath, entitySetName) \u21d2 Array Retrieves entity data Kind : static method of mockserver Returns : Array - An array of json objects Param Type Description mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. entitySetName String The entity set name Example await ui5 . mockserver . getEntitySetData ( \"path/to/project/localService/main/mockserver\" , \"Headers\" ); mockserver.setEntitySetData(mockServerPath, entitySetName, entries) Override entity data entries Kind : static method of mockserver Param Type Description mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. entitySetName String The entity name entries String The json object to be used as data to be inserted [use relative path from the html page started]. Example await ui5 . mockserver . setEntitySetData ( \"path/to/project/localService/main/mockserver\" , \"Headers\" , entries ); ui5.navigation Kind : static class of ui5 .navigation .navigateToApplication(intent, [preventPopups], [verify], [refresh]) .navigateToApplicationAndRetry(intent, [preventPopups], [verify], [retries], [interval]) .navigateToSystemAndApplication(system, intent, [closePopups], [verify]) .navigateToSystemAndApplicationAndRetry(system, intent, [closePopups], [verify], [retries], [interval]) .navigateToApplicationWithQueryParams(intent, queryParams, [preventPopups], [verify]) .navigateToApplicationWithQueryParamsAndRetry(intent, queryParams, [preventPopups], [verify], [retries], [interval]) .closePopups([timeout]) .expectUnsupportedNavigationPopup(navigationTarget) navigation.navigateToApplication(intent, [preventPopups], [verify], [refresh]) Navigates to the application via the passed intent. The intent will be added to the baseUrl maintained in the config. Kind : static method of navigation Param Type Default Description intent String The intent of the application. [preventPopups] Boolean false Specifies if random popup appearance should be prevented. [verify] Boolean false Specifies if the url should be asserted after the navigation. [refresh] Boolean false Refresh the page after navigation. Example await ui5 . navigation . navigateToApplication ( \"PurchaseOrder-manage\" ); navigation.navigateToApplicationAndRetry(intent, [preventPopups], [verify], [retries], [interval]) Navigates to the application via the passed intent, and retries in case it fails. Kind : static method of navigation Param Type Default Description intent String The intent of the app. [preventPopups] Boolean false Specifies if random popup appearance should be prevented. Might not work for specific popups. [verify] Boolean false Specifies if the url should be asserted after the navigation. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . navigation . navigateToApplicationAndRetry ( \"PurchaseOrder-manage\" ); navigation.navigateToSystemAndApplication(system, intent, [closePopups], [verify]) Navigates within the passed system to the application via the passed intent. Kind : static method of navigation Param Type Default Description system String The system url. intent String The intent of the application. [closePopups] Boolean false Specifies if random popups should be closed after the navigation. [verify] Boolean false Specifies if the url should be asserted after the navigation. Example await ui5 . navigation . navigateToSystemAndApplication ( \"yourFioriLaunchpad.domain\" , \"PurchaseOrder-manage\" ); navigation.navigateToSystemAndApplicationAndRetry(system, intent, [closePopups], [verify], [retries], [interval]) Navigates within the passed system to the application via the passed intent, and retries in case it fails. Kind : static method of navigation Param Type Default Description system String The system url. intent String The intent of the application. [closePopups] Boolean false Specifies if random popups should be closed after the navigation. [verify] Boolean false Specifies if the url should be asserted after the navigation. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . navigation . navigateToSystemAndApplicationAndRetry ( \"yourFioriLaunchpad.domain\" , \"PurchaseOrder-manage\" ); navigation.navigateToApplicationWithQueryParams(intent, queryParams, [preventPopups], [verify]) Navigates to the application with the passed queryParams via the passed intent. Kind : static method of navigation Param Type Default Description intent String The intent of the app. queryParams String [OPTIONAL] Add url query params. [preventPopups] Boolean false Specifies if random popup appearance should be prevented. [verify] Boolean false Specifies if the url should be asserted after the navigation. Example const intent = \"PurchaseOrder-manage\" const queryParams = \"?sap-language=EN&responderOn=true\" ; await ui5 . navigation . navigateToApplicationWithQueryParams ( intent , queryParams ); navigation.navigateToApplicationWithQueryParamsAndRetry(intent, queryParams, [preventPopups], [verify], [retries], [interval]) Navigates to the application via the passed intent, and retries in case it fails. Kind : static method of navigation Param Type Default Description intent String The intent of the app. queryParams String [OPTIONAL] Add url query params. [preventPopups] Boolean false Specifies if random popup appearance should be prevented. [verify] Boolean false Specifies if the url should be asserted after the navigation. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example const intent = \"PurchaseOrder-manage\" const queryParams = \"?sap-language=EN&responderOn=true\" ; await ui5 . navigation . navigateToApplicationWithQueryParamsAndRetry ( intent , queryParams ); navigation.closePopups([timeout]) Closes all popups if they occur after navigating to a specific page. Kind : static method of navigation Param Type Default Description [timeout] Integer 15000 The timeout to wait. Example await ui5 . navigation . closePopups (); navigation.expectUnsupportedNavigationPopup(navigationTarget) Expects navigation to an app that is not supported. This can be the case for Mocked tests when the application does not exist or when the app is not included in a role. Kind : static method of navigation Param Type Description navigationTarget String The selector describing the element. Example await ui5 . navigation . expectUnsupportedNavigationPopup ( \"#SupplierInvoice-display?FiscalYear=1234&SupplierInvoice=1234567890\" ); ui5.navigationBar Kind : static class of ui5 .navigationBar .clickBack([timeout]) .clickSapLogo([timeout]) .clickUserIcon([timeout]) .expectPageTitle(compareValue) .expectShellHeader([timeout]) navigationBar.clickBack([timeout]) Navigates one layer back. Kind : static method of navigationBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . navigationBar . clickBack (); navigationBar.clickSapLogo([timeout]) Clicks at the SAP Logo. Kind : static method of navigationBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . navigationBar . clickSapLogo (); navigationBar.clickUserIcon([timeout]) Clicks at the Account Icon. Kind : static method of navigationBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . navigationBar . clickUserIcon (); navigationBar.expectPageTitle(compareValue) Expects the page title of the current page to be the compare value. Kind : static method of navigationBar Param Type Description compareValue String The compare value. Example await ui5 . navigationBar . expectPageTitle ( \"Home\" ); navigationBar.expectShellHeader([timeout]) Expects the shell header to be visible Kind : static method of navigationBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . navigationBar . expectShellHeader (); ui5.qunit Kind : static class of ui5 qunit.executeTests(path) Executes QUnit & OPA5 tests. Qmate acts like a runner. Kind : static method of qunit Param Type Description path String Relative path to the QUnit/OPA5 html file. Example await ui5 . qunit . executeTests ( \"path/to/qunit.html\" ); ui5.session Kind : static class of ui5 .session .login(username, [password], [verify], [timeout]) .loginFiori(username, [password], [verify]) .loginSapCloud(username, [password], [verify]) .loginCustom(username, [password], usernameFieldSelector, passwordFieldSelector, logonButtonSelector, [verify]) .loginCustomViaConfig(username, password, [verify]) .logout([verify]) .switchUser(username, [password], [authenticator], [wait]) .expectLogoutText() session.login(username, [password], [verify], [timeout]) Login with specific username and password. This function works for both fiori and sap-cloud login. Kind : static method of session Param Type Default Description username String The username. [password] String \"Welcome1!\" The password. [verify] Boolean false Specifies if the function will check the shell header after logging in. [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . session . login ( \"PURCHASER\" ); Example await ui5 . session . login ( \"JOHN_DOE\" , \"abc123!\" , true ); session.loginFiori(username, [password], [verify]) Login with fioriForm and specific username and password. Kind : static method of session Param Type Default Description username String The username. [password] String \"Welcome1!\" The password. [verify] Boolean false Specifies if the function will check the shell header after logging in. Example await ui5 . session . loginFiori ( \"john\" , \"abc123!\" ); session.loginSapCloud(username, [password], [verify]) Login with sapCloud form and specific username and password. Kind : static method of session Param Type Default Description username String The username. [password] String \"Welcome1!\" The password. [verify] Boolean false Specifies if the function will check the shell header after logging in. Example await ui5 . session . loginSapCloud ( \"john\" , \"abc123!\" ); session.loginCustom(username, [password], usernameFieldSelector, passwordFieldSelector, logonButtonSelector, [verify]) Login with custom form and specific username and password. Kind : static method of session Param Type Default Description username String The username. [password] String \"Welcome1!\" The password. usernameFieldSelector String The CSS selector of the username field. passwordFieldSelector String The CSS selector of the password field. logonButtonSelector String The CSS selector of the login button. [verify] Boolean false Specifies if the function will check the shell header after logging in. Example await ui5 . session . loginCustom ( \"JOHN_DOE\" , \"abc123!\" , \"#username\" , # password , \"#logon\" ); session.loginCustomViaConfig(username, password, [verify]) Login with specific username and password. The selectors will be taken from the config. Kind : static method of session Param Type Default Description username String The username. Can be specified in spec or config. If specified in both credentials will be taken from config. password String \"Welcome1!\" The password. Can be specified in spec or config. If specified in both credentials will be taken from config. [verify] Boolean false Specifies if the function will check the shell header after logging in. Example // config - SAMPLE 1 auth : { formType : 'plain' , usernameFieldSelector : \"#USERNAME_BLOCK input\" , passwordFieldSelector : \"#PASSWORD_BLOCK input\" , logonButtonSelector : \"#LOGIN_LINK\" }, // spec await ui5 . session . loginCustomViaConfig ( \"JOHN_DOE\" , \"abc123!\" ); // config - SAMPLE 2 auth : { formType : \"plain\" , username : \"PURCH_EXT\" , password : \"Welcome1!\" , usernameFieldSelector : \"#USERNAME_BLOCK input\" , passwordFieldSelector : \"#PASSWORD_BLOCK input\" , logonButtonSelector : \"#LOGIN_LINK\" }, // spec await ui5 . session . loginCustomViaConfig (); session.logout([verify]) Logs the user out. Kind : static method of session Param Type Default Description [verify] Boolean \"true\" Specifies if the function will check the logout text after logging out. Set this to false if the system does not show the text after logging out. Example await ui5 . session . logout (); session.switchUser(username, [password], [authenticator], [wait]) switches the user according to the passed username and password. Kind : static method of session Param Type Default Description username String The username. [password] String \"Welcome1!\" The password. [authenticator] Object The login form type. Set to null to use generic login. [wait] Number 10000 The waiting time between logout and login (ms). Example await ui5 . session . switchUser ( \"PURCHASER\" ); Example const authenticator = ui5 . authenticators . fioriForm ; await ui5 . session . switchUser ( \"PURCHASER\" , \"Welcome1!\" , authenticator , 30000 ); session.expectLogoutText() Expects the logout text after logout to be \"You have been logged off. This is essential for chaining scripts, so that no static browser sleep in the spec itself is required anymore. Kind : static method of session Example await ui5 . session . expectLogoutText (); ui5.table Kind : static class of ui5 .table .sortColumnAscending(columnName, [tableSelector]) .sortColumnDescending(columnName, [tableSelector]) .clickSettingsButton([tableSelector]) table.sortColumnAscending(columnName, [tableSelector]) Sorts the given column \"Ascending\". Kind : static method of table Param Type Description columnName String The name of the column to sort. [tableSelector] Object The selector describing the table element (in case there are more then one). Example await ui5 . table . sortColumnAscending ( \"Supplier\" ); Example const glAccountItemsTable = { \"elementProperties\" : { \"viewName\" : \"ui.s2p.mm.supplinvoice.manage.s1.view.S1\" , \"metadata\" : \"sap.m.Table\" , \"id\" : \"*idS2P.MM.MSI.TableGLAccountItems\" } }; await ui5 . table . sortColumnAscending ( \"Amount\" , glAccountItemsTable ); table.sortColumnDescending(columnName, [tableSelector]) Sorts the given column \"Descending\". Kind : static method of table Param Type Description columnName String The name of the column to sort. [tableSelector] Object The selector describing the table element (in case there are more then one). Example await ui5 . table . sortColumnDescending ( \"Supplier\" ); Example const glAccountItemsTable = { \"elementProperties\" : { \"viewName\" : \"ui.s2p.mm.supplinvoice.manage.s1.view.S1\" , \"metadata\" : \"sap.m.Table\" , \"id\" : \"*idS2P.MM.MSI.TableGLAccountItems\" } }; await ui5 . table . sortColumnDescending ( \"Amount\" , glAccountItemsTable ); table.clickSettingsButton([tableSelector]) Opens the user Settings. Kind : static method of table Param Type Description [tableSelector] Object The selector describing the table element (in case there are more then one). Example await ui5 . table . clickSettingsButton (); Example const glAccountItemsTable = { \"elementProperties\" : { \"viewName\" : \"ui.s2p.mm.supplinvoice.manage.s1.view.S1\" , \"metadata\" : \"sap.m.Table\" , \"id\" : \"*idS2P.MM.MSI.TableGLAccountItems\" } }; await ui5 . table . clickSettingsButton ( glAccountItemsTable ); ui5.userInteraction Kind : static class of ui5 .userInteraction .click(selector, [index], [timeout]) .clickAndRetry(selector, [index], [timeout], [retries], [interval]) .clickTab(selector, [index], [timeout]) .clickListItem(selector, [index], [timeout]) .fill(selector, value, [index], [timeout]) .fillAndRetry(selector, value, [index], [timeout], [retries], [interval]) .clear(selector, [index], [timeout]) .clearAndRetry(selector, [index], [timeout], [retries], [interval]) .clearAndFill(selector, value, [index], [timeout]) .clearAndFillAndRetry(selector, value, [index], [timeout], [retries], [interval], [verify]) .clearSmartFieldInput(selector, [index], [timeout]) .clearAndFillSmartFieldInput(selector, value, [index], [timeout]) .clearAndFillSmartFieldInputAndRetry(selector, value, [index], [timeout], [retries], [interval]) .selectBox(selector, value, [index]) .selectComboBox(selector, value, [index]) .selectMultiComboBox(selector, values, [index]) .clickSelectArrow(selector, [index]) .clickSelectArrowAndRetry(selector, [index], [retries], [interval]) .mouseOverElement(selector, [index], [timeout]) .scrollToElement(selector, [index], [alignment], [timeout]) .selectAll([selector], [index], [timeout]) .openF4Help(selector, [index], [timeout], useF4Key) .searchFor(selector, [index], [timeout], useEnter) .resetSearch(selector, [index], [timeout]) .doubleClick(selector, [index], [timeout]) .rightClick(selector, [index], [timeout]) userInteraction.click(selector, [index], [timeout]) Clicks on the element with the given selector. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . click ( selector ); userInteraction.clickAndRetry(selector, [index], [timeout], [retries], [interval]) Clicks on the element with the given selector and retries the action in case of a failure. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . userInteraction . clickAndRetry ( selector ); userInteraction.clickTab(selector, [index], [timeout]) Clicks on the tab with the given selector and checks if the tab got selected successfully. The function retries the click for maximal 3 times if the selection of the tab (blue underline) was not successful. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . clickTab ( selector ); userInteraction.clickListItem(selector, [index], [timeout]) Clicks or opens the list item with the given selector (e.g. ColumnListItem, StandardListItem). In some cases the default click function is not working correctly (clicks an element within the list item). Therefore we recommend to use this function to open a specific list item. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . clickListItem ( selector ); userInteraction.fill(selector, value, [index], [timeout]) Fills the input field with the given selector. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to fill. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . fill ( selector , \"My Value\" ); userInteraction.fillAndRetry(selector, value, [index], [timeout], [retries], [interval]) Fills the input field with the given selector and retries the action in case of a failure. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to fill. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . userInteraction . fillAndRetry ( selector , \"My Value\" ); userInteraction.clear(selector, [index], [timeout]) Clears the input with the given selector. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . clear ( selector ); userInteraction.clearAndRetry(selector, [index], [timeout], [retries], [interval]) Clears the input with the given selector and retries the action in case of a failure Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . userInteraction . clearAndRetry ( selector ); userInteraction.clearAndFill(selector, value, [index], [timeout]) Clears the input field with the given selector and fills the given value. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to fill. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . clearAndFill ( selector , \"My Value\" ); userInteraction.clearAndFillAndRetry(selector, value, [index], [timeout], [retries], [interval], [verify]) Clears the input field with the given selector and fills the given value. Retries the action in case of a failure. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to fill. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. [verify] Boolean true Specifies if the filled value should be verified. Example await ui5 . userInteraction . clearAndFillAndRetry ( selector , \"My Value\" ); userInteraction.clearSmartFieldInput(selector, [index], [timeout]) Clears the smart filed with the given selector. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . clearSmartFieldInput ( selector ); userInteraction.clearAndFillSmartFieldInput(selector, value, [index], [timeout]) Clears the smart filed with the given selector and fills the given value. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to fill. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . clearAndFillSmartFieldInput ( selector , \"My Value\" ); userInteraction.clearAndFillSmartFieldInputAndRetry(selector, value, [index], [timeout], [retries], [interval]) Clears the smart filed with the given selector and fills the given value and retries the action in case of a failure. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to fill. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . userInteraction . clearAndFillSmartFieldInputAndRetry ( selector , \"My Value\" ); userInteraction.selectBox(selector, value, [index]) Selects the passed value of the Select box. Please note that the function will only work for the default select Box. In special cases, please use the clickSelectArrow function. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to select. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example await ui5 . userInteraction . selectBox ( selector , \"Germany\" ); userInteraction.selectComboBox(selector, value, [index]) Selects the passed value from the ComboBox with the given selector. Please note that the function will only work for the default ComboBox. In special cases you need to use the 'clickSelectArrow' function. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to select. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example await ui5 . userInteraction . selectComboBox ( selector , \"Germany\" ); userInteraction.selectMultiComboBox(selector, values, [index]) Selects the passed values of the MultiComboBox with the given selector. Please note that the function will only work for the default MultiComboBox. In special cases, please use the clickSelectArrow function. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. values Array The values to select. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example await ui5 . userInteraction . selectMultiComboBox ( selector , [ \"Option 1\" , \"Option 2\" ]); userInteraction.clickSelectArrow(selector, [index]) Clicks the arrow icon at the passed selector (select box). Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example await ui5 . userInteraction . clickSelectArrow ( selector ); userInteraction.clickSelectArrowAndRetry(selector, [index], [retries], [interval]) Clicks the arrow icon at the passed selector (select box), and retries in case it fails. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . userInteraction . clickSelectArrowAndRetry ( selector ); userInteraction.mouseOverElement(selector, [index], [timeout]) Moves the cursor/focus to the element with the given selector. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . mouseOverElement ( selector ); userInteraction.scrollToElement(selector, [index], [alignment], [timeout]) Scrolls to the element with the given selector to get it into view. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [alignment] String \"center\" Defines vertical/horizontal alignment. One of \"start\", \"center\", \"end\", or \"nearest\". Affects the alignToTop parameter of scrollIntoView function. By default, it takes 'up' [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . scrollToElement ( selector ); Example await ui5 . userInteraction . scrollToElement ( selector , 0 , \"start\" , 5000 ); userInteraction.selectAll([selector], [index], [timeout]) Performs \"select all\" (ctrl + a) at the element with the given selector. Kind : static method of userInteraction Param Type Default Description [selector] Object The selector describing the element. [index] Number 0 The index of the selector, in case there are more than one elements visible at the same time. [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . selectAll ( selector ); userInteraction.openF4Help(selector, [index], [timeout], useF4Key) Opens the F4-help of the element with the given selector. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). useF4Key Boolean Specifies if the help is opened by pressing the F4-key or via the button. The default value is true (triggered by pressing the F4-key). Set \"useF4Key\" to false, to trigger the search by clicking the button. Example await ui5 . userInteraction . openF4Help ( selector , 0 , 30000 , false ); userInteraction.searchFor(selector, [index], [timeout], useEnter) Searches for the passed value and executes the search. In case that the search is already filled, it will reset the field first. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). useEnter Boolean Specifies if the search is triggered by pressing the Enter-key or via the search button. The default value is true (triggered by pressing the Enter-key). Set \"useEnter\" to false, to trigger the search by clicking the search button. Example await ui5 . userInteraction . searchFor ( selector , \"My Value\" , 0 , 30000 , false ); userInteraction.resetSearch(selector, [index], [timeout]) Resets the search field. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . resetSearch ( selector ); userInteraction.doubleClick(selector, [index], [timeout]) Double Clicks on the passed element. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . doubleClick ( selector ); userInteraction.rightClick(selector, [index], [timeout]) Right Clicks on the passed element. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elem = await nonUi5 . element . getById ( \"button01\" ); await ui5 . userInteraction . rightClick ( elem ); nonUi5 Global namespace for non UI5 modules. Kind : global constant nonUi5 .assertion .expectAttributeToBe(elem, compareValue, [attribute]) .expectAttributeToContain(elem, compareValue, [attribute]) .expectValueToBe(elem, compareValue) .expectToBeVisible(element) .expectToBeNotVisible(element, [timeout]) .element .waitForAll(selector, [timeout]) .waitToBePresent(selector, [timeout]) .waitToBeVisible(selector, [timeout]) .waitToBeClickable(selector, [timeout]) .getAllDisplayed(selector, [timeout]) \u21d2 Array.<Object> .getAll(selector, [timeout]) .getByCss(selector, [index], [timeout], [includeHidden]) \u21d2 Object .getByCssContainingText(selector, [text], [index], [timeout], [includeHidden]) \u21d2 Object .getById(id, [timeout], [includeHidden]) \u21d2 Object .getByClass(elemClass, [index], [timeout], [includeHidden]) \u21d2 Object .getByName(name, [index], [timeout], [includeHidden]) \u21d2 Object .getByXPath(xpath, [index], [timeout], [includeHidden]) \u21d2 Object .getByChild(elementSelector, childSelector, [index], [timeout], [includeHidden]) \u21d2 Object .getByParent(elementSelector, parentSelector, [index], [timeout], [includeHidden]) \u21d2 Object .isVisible(element, [strict]) \u21d2 Boolean .isPresent(elem) \u21d2 Boolean .isPresentByCss(css, [index], [timeout]) \u21d2 boolean .isPresentByXPath(xpath, [index], [timeout]) \u21d2 boolean .getAttributeValue(elem, [attribute]) \u21d2 String .getValue(elem) \u21d2 String .setInnerHTML(elem) \u21d2 String .highlight(elem, [duration], [color]) ~~ .switchToIframe(selector) ~~ ~~ .switchToDefaultContent() ~~ .navigation .navigateToApplication(relativeReference, [refresh]) .userInteraction .click(element, [timeout]) .clickAndRetry(element, [timeout], [retries], [interval]) .doubleClick(element, [timeout]) .rightClick(element, [timeout]) .fill(element, value) .fillAndRetry(element, value, [retries], [interval]) .clear(element) .clearAndRetry(element, [retries], [interval]) .clearAndFill(element, value) .clearAndFillAndRetry(element, value, [retries], [interval], [verify]) .mouseOverElement(element, [xOffset], [yOffset]) .scrollToElement(elem, alignment) .dragAndDrop(element, targetElem) .moveCursorAndClick(element) .clickElementInSvg(svgElem, innerSelector) nonUi5.assertion Kind : static class of nonUi5 .assertion .expectAttributeToBe(elem, compareValue, [attribute]) .expectAttributeToContain(elem, compareValue, [attribute]) .expectValueToBe(elem, compareValue) .expectToBeVisible(element) .expectToBeNotVisible(element, [timeout]) assertion.expectAttributeToBe(elem, compareValue, [attribute]) Expects the attributes value of the passed element to be the compare value. Kind : static method of assertion Param Type Description elem Object The element. compareValue String The compare value. [attribute] String The attribute to compare. If not passed, it will compare the inner HTML content of the element. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . assertion . expectAttributeToBe ( elem , \"Save\" ); Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . assertion . expectAttributeToBe ( element , \"Save\" , \"title\" ); assertion.expectAttributeToContain(elem, compareValue, [attribute]) Expects the attributes value of the passed element to contain the compare value. Kind : static method of assertion Param Type Description elem Object The element. compareValue String The compare value. [attribute] String The attribute to compare. If not passed, it will compare the inner HTML content of the element. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . assertion . expectAttributeToContain ( element , \"Save\" , \"title\" ); assertion.expectValueToBe(elem, compareValue) Expects the attributes value of the passed element to be the compare value. Kind : static method of assertion Param Type Description elem Object The element. compareValue String The compare value. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . assertion . expectValueToBe ( elem , \"Save\" ); assertion.expectToBeVisible(element) Expects that the element is visible to the user. Kind : static method of assertion Param Type Description element Object The element. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . assertion . expectToBeVisible ( elem ); assertion.expectToBeNotVisible(element, [timeout]) Expects that the element is not visible to the user. Kind : static method of assertion Param Type Default Description element Object The element. [timeout] Number 30000 The timeout to wait (ms). Recommendation is to lower the timeout since the element is not expected to show up. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . assertion . expectToBeNotVisible ( elem , 5000 ); nonUi5.element Kind : static class of nonUi5 .element .waitForAll(selector, [timeout]) .waitToBePresent(selector, [timeout]) .waitToBeVisible(selector, [timeout]) .waitToBeClickable(selector, [timeout]) .getAllDisplayed(selector, [timeout]) \u21d2 Array.<Object> .getAll(selector, [timeout]) .getByCss(selector, [index], [timeout], [includeHidden]) \u21d2 Object .getByCssContainingText(selector, [text], [index], [timeout], [includeHidden]) \u21d2 Object .getById(id, [timeout], [includeHidden]) \u21d2 Object .getByClass(elemClass, [index], [timeout], [includeHidden]) \u21d2 Object .getByName(name, [index], [timeout], [includeHidden]) \u21d2 Object .getByXPath(xpath, [index], [timeout], [includeHidden]) \u21d2 Object .getByChild(elementSelector, childSelector, [index], [timeout], [includeHidden]) \u21d2 Object .getByParent(elementSelector, parentSelector, [index], [timeout], [includeHidden]) \u21d2 Object .isVisible(element, [strict]) \u21d2 Boolean .isPresent(elem) \u21d2 Boolean .isPresentByCss(css, [index], [timeout]) \u21d2 boolean .isPresentByXPath(xpath, [index], [timeout]) \u21d2 boolean .getAttributeValue(elem, [attribute]) \u21d2 String .getValue(elem) \u21d2 String .setInnerHTML(elem) \u21d2 String .highlight(elem, [duration], [color]) ~~ .switchToIframe(selector) ~~ ~~ .switchToDefaultContent() ~~ element.waitForAll(selector, [timeout]) Waits until all elements with the given selector are rendered. Will fail if no element is found. Kind : static method of element Param Type Default Description selector Object The CSS selector describing the element. [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . waitForAll ( \".inputField\" ); element.waitToBePresent(selector, [timeout]) Waits until the element with the given selector is present. Kind : static method of element Param Type Default Description selector Object The CSS selector describing the element. [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . waitToBePresent ( \".input01\" ); Example await nonUi5 . element . waitToBePresent ( \"#button12\" ); Example await nonUi5 . element . waitToBePresent ( \"p:first-child\" ); element.waitToBeVisible(selector, [timeout]) Waits until the element with the given selector is visible. Kind : static method of element Param Type Default Description selector Object The CSS selector describing the element. [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . waitToBeVisible ( \".input01\" ); Example await nonUi5 . element . waitToBeVisible ( \"#button12\" ); Example await nonUi5 . element . waitToBeVisible ( \"p:first-child\" ); element.waitToBeClickable(selector, [timeout]) Waits until the element with the given selector is clickable. Kind : static method of element Param Type Default Description selector Object The CSS selector describing the element. [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . waitToBeClickable ( \".input01\" ); Example await nonUi5 . element . waitToBeClickable ( \"#button12\" ); Example await nonUi5 . element . waitToBeClickable ( \"p:first-child\" ); element.getAllDisplayed(selector, [timeout]) \u21d2 Array.<Object> Gets all visible elements with the passed selector. Kind : static method of element Returns : Array.<Object> - The array of elements. Param Type Default Description selector Object The CSS selector describing the element. [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . getAllDisplayed ( \".inputField\" ); element.getAll(selector, [timeout]) Returns all elements found by the given selector despite visible or not. Kind : static method of element Param Type Default Description selector Object The CSS selector describing the element. [timeout] Number 30000 The timeout to wait (ms). Example const hiddenElements = await nonUi5 . element . getAll ( \".sapUiInvisibleText\" ); const isPresent = await nonUi5 . element . isPresent ( hiddenElements [ 0 ]); await common . assertion . expectTrue ( isPresent ); element.getByCss(selector, [index], [timeout], [includeHidden]) \u21d2 Object Gets the element with the given CSS selector. Kind : static method of element Returns : Object - The found element. Param Type Default Description selector Object The CSS selector describing the element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByCss ( \".button01\" ); element.getByCssContainingText(selector, [text], [index], [timeout], [includeHidden]) \u21d2 Object Gets the element with the given CSS selector containing the given text value. Kind : static method of element Returns : Object - The found element. Param Type Default Description selector Object The CSS selector describing the element. [text] String \"\" The containing text value of the element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByCssContainingText ( \".input01\" , \"Jack Jackson\" ); element.getById(id, [timeout], [includeHidden]) \u21d2 Object Gets the element with the given ID. Kind : static method of element Returns : Object - The found element. Param Type Default Description id String The id of the element. [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if the function will check for the elements visibility. Example const elem = await nonUi5 . element . getById ( \"button01\" ); element.getByClass(elemClass, [index], [timeout], [includeHidden]) \u21d2 Object Gets the element with the given class. Kind : static method of element Returns : Object - The found element. Param Type Default Description elemClass String The class describing the element [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByClass ( \"button01\" ); const elem = await nonUi5 . element . getByClass ( \"sapMIBar sapMTB sapMTBNewFlex sapContrastPlus\" ); element.getByName(name, [index], [timeout], [includeHidden]) \u21d2 Object Gets the element with the given name. Kind : static method of element Returns : Object - The found element. Param Type Default Description name String The name attribute of the element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByName ( \".button01\" ); element.getByXPath(xpath, [index], [timeout], [includeHidden]) \u21d2 Object Gets the element with the given XPath. Kind : static method of element Returns : Object - The found element. Param Type Default Description xpath String The XPath describing the element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByXPath ( \"//ul/li/a\" ); element.getByChild(elementSelector, childSelector, [index], [timeout], [includeHidden]) \u21d2 Object Gets an element by its selector and child selector. Can be used when multiple elements have the same properties. Kind : static method of element Returns : Object - The found element. Param Type Default Description elementSelector String The CSS selector describing the element. childSelector String The CSS selector describing the child element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByChild ( \".form01\" , \".input01\" ); element.getByParent(elementSelector, parentSelector, [index], [timeout], [includeHidden]) \u21d2 Object Gets an element by its selector and parent selector. Can be used when multiple elements have the same properties. Kind : static method of element Returns : Object - The found element. Param Type Default Description elementSelector String The CSS selector describing the element. parentSelector String The CSS selector describing the parent element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByParent ( \".form01\" , \".input01\" ); element.isVisible(element, [strict]) \u21d2 Boolean Returns a boolean if the element is visible to the user. Kind : static method of element Returns : Boolean - Returns true or false. Param Type Default Description element Object The element. [strict] Boolean true If strict mode is enabled it will only return \"true\" if the element is visible on the page and within the viewport. If disabled, it will be sufficient if the element is visible on the page but not inside the current viewport. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . element . isVisible ( elem ); element.isPresent(elem) \u21d2 Boolean Returns a boolean if the element is present at the DOM or not. It might be hidden. Kind : static method of element Returns : Boolean - Returns true or false. Param Type Description elem Object The element. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . element . isPresent ( elem ); element.isPresentByCss(css, [index], [timeout]) \u21d2 boolean Returns a boolean if the element is present at the DOM or not. Kind : static method of element Returns : boolean - Returns true or false. Param Type Default Description css String The CSS selector describing the element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . isPresentByCss ( \".button01\" ); element.isPresentByXPath(xpath, [index], [timeout]) \u21d2 boolean returns a boolean if the element is present at the DOM or not. Kind : static method of element Param Type Default Description xpath String The XPath describing the element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . isPresentByXPath ( \".//*[text()='Create']\" ); element.getAttributeValue(elem, [attribute]) \u21d2 String Returns the attributes value of the passed element. Kind : static method of element Returns : String - The attributes value of the element. Param Type Description elem Object The element. [attribute] String The attribute of the element. Leave empty to return the inner HTML value of the element. Example const elem = await nonUi5 . element . getById ( \"elem01\" ); const text = await nonUi5 . element . getAttributeValue ( elem , \"text\" ); Example const elem = await nonUi5 . element . getById ( \"elem02\" ); const innerHTML = await nonUi5 . element . getAttributeValue ( elem ); element.getValue(elem) \u21d2 String Returns the value of the passed element. Kind : static method of element Returns : String - The value of the element. Param Type Description elem Object The element. Example const elem = await nonUi5 . element . getById ( \"elem02\" ); const innerHTML = await nonUi5 . element . getValue ( elem ); element.setInnerHTML(elem) \u21d2 String Sets the innerHTML value of the given element. CAUTION: Only use this if filling the value in the normal way is not working and if it is unavoidable. Keep in mind, that a user is not able to perform such actions. Kind : static method of element Returns : String - The value to set. Param Type Description elem Object The element. Example const elem = await nonUi5 . element . getById ( \"text-editor\" ); await nonUi5 . element . setInnerHTML ( elem , \"Hello World!\" ); element.highlight(elem, [duration], [color]) Highlights the passed element. Kind : static method of element Param Type Default Description elem Object The element. [duration] Integer 2000 The duration of the highlighting (ms). [color] String \"red\" The color of the highlighting (CSS value). Example const elem = await nonUi5 . element . getById ( \"text01\" ); await nonUi5 . element . highlight ( elem ); Example const elem = await nonUi5 . element . getById ( \"text01\" ); await nonUi5 . element . highlight ( elem , 3000 , \"green\" ); ~~element.switchToIframe(selector)~~ Deprecated Switches to the passed iframe. Kind : static method of element See : switchToIframe Param Type Description selector String The CSS selector describing the iframe element. Example await nonUi5 . element . switchToIframe ( \"iframe[id='frame01']\" ); ~~element.switchToDefaultContent()~~ Deprecated Switches to the default content of the HTML page. Kind : static method of element See : switchToDefaultContent Example await nonUi5 . element . switchToDefaultContent (); nonUi5.navigation Kind : static class of nonUi5 navigation.navigateToApplication(relativeReference, [refresh]) Navigates to the application via the passed relative reference. The path will be added to the baseUrl maintained in the config. Kind : static method of navigation Param Type Default Description relativeReference String Relative reference of an application (path, query and fragment) [refresh] Boolean true Refresh the page after navigation. Example await nonUi5 . navigation . navigateToApplication ( \"categories\" ); nonUi5.userInteraction Kind : static class of nonUi5 .userInteraction .click(element, [timeout]) .clickAndRetry(element, [timeout], [retries], [interval]) .doubleClick(element, [timeout]) .rightClick(element, [timeout]) .fill(element, value) .fillAndRetry(element, value, [retries], [interval]) .clear(element) .clearAndRetry(element, [retries], [interval]) .clearAndFill(element, value) .clearAndFillAndRetry(element, value, [retries], [interval], [verify]) .mouseOverElement(element, [xOffset], [yOffset]) .scrollToElement(elem, alignment) .dragAndDrop(element, targetElem) .moveCursorAndClick(element) .clickElementInSvg(svgElem, innerSelector) userInteraction.click(element, [timeout]) Clicks on the passed element. Kind : static method of userInteraction Param Type Default Description element Object The element. [timeout] Number 30000 The timeout to wait (ms). Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . userInteraction . click ( elem ); userInteraction.clickAndRetry(element, [timeout], [retries], [interval]) Clicks on the passed element, retries in case it fails. Kind : static method of userInteraction Param Type Default Description element Object The element. [timeout] Number 30000 The timeout to wait (ms). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . userInteraction . clickAndRetry ( elem ); userInteraction.doubleClick(element, [timeout]) Double Clicks on the passed element. Kind : static method of userInteraction Param Type Default Description element Object The element. [timeout] Number 30000 The timeout to wait (ms). Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . userInteraction . doubleClick ( elem ); userInteraction.rightClick(element, [timeout]) Right Clicks on the passed element. Kind : static method of userInteraction Param Type Default Description element Object The element. [timeout] Number 30000 The timeout to wait (ms). Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . userInteraction . rightClick ( elem ); userInteraction.fill(element, value) Fills the given value into the passed input. Kind : static method of userInteraction Param Type Description element Object The element. value String The value to be filled. Example const elem = await nonUi5 . element . getById ( \"input01\" ); await nonUi5 . userInteraction . fill ( elem , \"Service 01\" ); userInteraction.fillAndRetry(element, value, [retries], [interval]) Fills the given value into the passed input, retries in case of a failure. Kind : static method of userInteraction Param Type Default Description element Object The element. value String The value to be filled. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example const elem = await nonUi5 . element . getById ( \"input01\" ); await nonUi5 . userInteraction . fillAndRetry ( elem , \"Service 01\" ); userInteraction.clear(element) Clears the passed input element. Kind : static method of userInteraction Param Type Description element Object The element. Example const elem = await nonUi5 . element . getById ( \"input01\" ); await nonUi5 . userInteraction . clear ( elem ); userInteraction.clearAndRetry(element, [retries], [interval]) Clears the passed input element, retries in case of a failure. Kind : static method of userInteraction Param Type Default Description element Object The element. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example const elem = await nonUi5 . element . getById ( \"input01\" , 10000 ); await nonUi5 . userInteraction . clearAndRetry ( elem ); userInteraction.clearAndFill(element, value) Clears and fills the passed input element. Kind : static method of userInteraction Param Type Description element Object The element. value String The value to be filled in. Example const elem = await nonUi5 . element . getById ( \"input01\" ); await nonUi5 . userInteraction . clearAndFill ( elem , \"Service 01\" ); userInteraction.clearAndFillAndRetry(element, value, [retries], [interval], [verify]) Clears and fills the passed input, retries in case it fails. Kind : static method of userInteraction Param Type Default Description element Object The element. value String The value to be filled in. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. [verify] Boolean true Specifies if the filled value should be verified. Example const elem = await nonUi5 . element . getById ( \"input01\" ); await nonUi5 . userInteraction . clearAndFillAndRetry ( elem , \"Service 01\" ); userInteraction.mouseOverElement(element, [xOffset], [yOffset]) Moves the cursor/focus to the passed element. Kind : static method of userInteraction Param Type Description element Object The selector describing the element. [xOffset] Number X offset to move to, relative to the top-left corner of the element. If not specified, the mouse will move to the middle of the element. [yOffset] Number Y offset to move to, relative to the top-left corner of the element. If not specified, the mouse will move to the middle of the element. Example const elem = await nonUi5 . element . getById ( \"dropdown42\" ); await nonUi5 . userInteraction . mouseOverElement ( elem ); userInteraction.scrollToElement(elem, alignment) Scrolls to the passed element to get it into view. Kind : static method of userInteraction Param Type Default Description elem Object The element. alignment String \"center\" Defines vertical/horizontal alignment. One of \"start\", \"center\", \"end\", or \"nearest\". Affects the alignToTop parameter of scrollIntoView function. By default, it takes 'up' Example const elem = await nonUi5 . userInteraction . getElementById ( \"footer01\" ); await nonUi5 . userInteraction . scrollToElement ( elem ); userInteraction.dragAndDrop(element, targetElem) Drags and drops the given element to the given target element. Kind : static method of userInteraction Param Type Description element Object The element to drag. targetElem Object The target element to drop the element. Example const elem = await nonUi5 . element . getById ( \"drag01\" ); Example const targetElem = await nonUi5 . element . getById ( \"drop02\" ); await nonUi5 . userInteraction . dragAndDrop ( elem , targetElem ); userInteraction.moveCursorAndClick(element) Moves the cursor to the target element and clicks on it. Can be used for charts. Kind : static method of userInteraction Param Type Description element Object The element to be clicked. Example const elem = await nonUi5 . element . getById ( \"chartPartToClick\" ); await nonUi5 . userInteraction . moveCursorAndClick ( elem ); userInteraction.clickElementInSvg(svgElem, innerSelector) Clicks on an inner element within a SVG element. Kind : static method of userInteraction Param Type Description svgElem Object The SVG element. innerSelector String The CSS selector describing the inner element to be clicked. Example const svgElem = await nonUi5 . element . getByCss ( \"svg\" ); const innerSelector = \"circle:nth-child(6)\" ; await nonUi5 . userInteraction . clickElementInSvg ( svgElem , innerSelector ); service Global namespace for service modules. Kind : global constant service .odata .init(url, username, password, [loggingEnabled], [params]) \u21d2 Object .get(service, entitySet, keys) .getEntitySet(service, entitySet, [filterString], [selectionFields], [queryParams]) \u21d2 Array .isFeatureToggleActivated(service, featureName) .post(service, entitySet, payload) .merge(service, entitySet, payload) .delete(service, entitySet, options) .callFunctionImport(service, functionImportName, options) .getOutputManagementPdfStream(outputConf, url) .readPdfFromDirectUrl(url) .rest .init([customConfig]) \u21d2 Object .get(uri, [options]) \u21d2 Object .post(uri, payload) \u21d2 Object .delete(uri, options) \u21d2 Object .patch(uri, options) \u21d2 Object service.odata Kind : static class of service .odata .init(url, username, password, [loggingEnabled], [params]) \u21d2 Object .get(service, entitySet, keys) .getEntitySet(service, entitySet, [filterString], [selectionFields], [queryParams]) \u21d2 Array .isFeatureToggleActivated(service, featureName) .post(service, entitySet, payload) .merge(service, entitySet, payload) .delete(service, entitySet, options) .callFunctionImport(service, functionImportName, options) .getOutputManagementPdfStream(outputConf, url) .readPdfFromDirectUrl(url) odata.init(url, username, password, [loggingEnabled], [params]) \u21d2 Object Initializes The service to work with. XCSRF-Token will be automatically fetched and stored in the service instance. Cookies will also automatically assembled and stored in the service instance. Kind : static method of odata Returns : Object - The initialized service object. Param Type Default Description url url The base url of the service username username The username. password password The password of the username. [loggingEnabled] boolean false The boolean param to control whether user wants to see logs during build run [params] Object {} JSON object with key-value pairs of parameter names and corresponding values by default we send { \"client\": \"715\", \"documentation\": [\"heading\", \"quickinfo\"], \"language\": \"EN\" } These can be overridden by sending params as JSON object with additional params as shown in example Example const url = \"https://hbr-715.wdf.sap.corp/sap/opu/odata/sap/API_PURCHASEORDER_PROCESS_SRV/\" ; const params = { \"saml2\" : \"disabled\" , \"language\" : \"de\" } srv = await service . odata . init ( url , user , password , false , params ); odata.get(service, entitySet, keys) makes a GET request. Kind : static method of odata Param Type Description service service Instance of the service entitySet entitySet The entitySet you want to GET from. keys keys The required keys for the GET-request. Example const url = \"https://qs9-715.wdf.sap.corp/sap/opu/odata/sap/API_PURCHASEORDER_PROCESS_SRV/\" ; srv = await service . odata . init ( url , user , password ); odata.getEntitySet(service, entitySet, [filterString], [selectionFields], [queryParams]) \u21d2 Array GET's the EntitySet collection. Kind : static method of odata Returns : Array - - Result set array Param Type Description service service Instance of the service entitySet entitySet The entitySet you want to GET from. [filterString] String The filters to be applied on get query [selectionFields] String comma separated list of fields to be selected [queryParams] Object JSON object of key value pairs of custom query parameters. Example const url = \"https://qs9-715.wdf.sap.corp/sap/opu/odata/sap/API_PURCHASEORDER_PROCESS_SRV/\" ; srv = await service . odata . init ( url , user , password ); let filterString = \"Status eq '01'\" ; let res = await service . odata . getEntitySet ( service , \"A_PurchaseOrder\" , filterString ); let select = \"CentralPurchaseContract,PurchasingProcessingStatus\" ; let res = await service . odata . getEntitySet ( service , \"A_PurchaseOrder\" , filterString , select ); let queryParams = { \"$top\" : 5 , \"$skip\" : 10 , }; let res = await service . odata . getEntitySet ( service , \"A_PurchaseOrder\" , filterString , select , queryParams ); odata.isFeatureToggleActivated(service, featureName) checks if a feature toggle is switched on or off Kind : static method of odata Param Type Description service service Instance of the service featureName featureName The name of the feature you want know the status of. Example const url = browser . params . systemUrl + \"/sap/opu/odata/SAP/CA_FM_FEATURE_TOGGLE_STATUS_SRV/\" ; service = await service . odata . init ( url , user , password ); let isFeatureActive = await service . odata . isFeatureToggleActivated ( service , \"MM_PUR_PO_BATCHES_IN_MANAGE_PO\" ); odata.post(service, entitySet, payload) makes a POST request. Kind : static method of odata Param Type Description service service Instance of the service entitySet entitySet The entitySet you want to POST against. payload payload The payload for the POST-request. Example let keys = { \"PurchaseOrder\" : \"4500007108\" , \"DraftUUID\" : \"00000000-0000-0000-0000-000000000000\" , \"IsActiveEntity\" : \"true\" }; let res = await service . odata . get ( service , \"A_PurchaseOrder\" , keys ); odata.merge(service, entitySet, payload) makes a MERGE request. Kind : static method of odata Param Type Description service service Instance of the service entitySet entitySet The entitySet you want to MERGE in. payload payload The payload for the MERGE-request. Example let res = await service . odata . merge ( service , \"A_PurchaseOrderScheduleLine\" , { \"PurchasingDocument\" : \"4500007108\" , \"PurchasingDocumentItem\" : \"10\" , \"ScheduleLine\" : \"1\" , \"ScheduleLineDeliveryDate\" : new Date () }; let res = await service . odata . get ( service , \"A_PurchaseOrder\" , keys ); odata.delete(service, entitySet, options) makes a DELETE request. Kind : static method of odata Param Type Description service service Instance of the service entitySet entitySet The entitySet you want to DELETE. options options The options for the DELETE-request. Example let options = { \"PurchaseOrder\" : \"\" , \"DraftUUID\" : draftUUID , \"IsActiveEntity\" : false }; await service . odata . delete ( service , \"C_PurchaseOrderTP\" , options ); odata.callFunctionImport(service, functionImportName, options) makes a function import request on an OData service. Kind : static method of odata Param Type Description service service Instance of the service functionImportName entitySet Name of Function Import options options parameters for function import Example const options = { CentralRequestForQuotation : \"7500000026\" , Supplier : \"100006\" }; const res = await service . odata . callFunctionImport ( service , functionImportName , options ); odata.getOutputManagementPdfStream(outputConf, url) returns a stream of output management pdf file. Kind : static method of odata Param Type Description outputConf outputConf Configuration for the output management pdf. url url system url username username for login password password for login Example const outputConf = { ApplObjectType : \"REQUEST_FOR_QUOTATION\" , ApplObjectId : \"7000002653\" , ItemId : \"1\" }; const pdfStream = await service . odata . getOutputManagementPdfStream ( outputConf , url , user , password ); odata.readPdfFromDirectUrl(url) returns a stream of pdf file which is part of attachment. Kind : static method of odata Param Type Description url url system url username [OPTIONAL] username for login password [OPTIONAL] password for login Example const url = \"https://domain.com/getPdfFile\" ; const pdfStream = await service . odata . readPdfFromDirectUrl ( url , \"username\" , \"Password\" ); service.rest Kind : static class of service .rest .init([customConfig]) \u21d2 Object .get(uri, [options]) \u21d2 Object .post(uri, payload) \u21d2 Object .delete(uri, options) \u21d2 Object .patch(uri, options) \u21d2 Object rest.init([customConfig]) \u21d2 Object Returns an axios instance for custom axios handling. Kind : static method of rest Returns : Object - The axios instance. Param Type Default Description [customConfig] Object {} Custom config for axios. If not specified axios defaults will be taken. Example const customConfig = { baseURL : 'https://some-domain.com/api/' , timeout : 1000 , headers : { 'X-Custom-Header' : 'foobar' } const axios = service . rest . init ( customConfig ); rest.get(uri, [options]) \u21d2 Object makes a GET request. Kind : static method of rest Returns : Object - The response of the GET request. Param Type Default Description uri String The uri to the data source you want to GET. [options] Object {} The options you want to specify for GET. Example const uri = https : //api.predic8.de/shop/products/\"; let res = await service . rest . get ( uri ); rest.post(uri, payload) \u21d2 Object makes a POST request. Kind : static method of rest Returns : Object - The response of the POST request. Param Type Description uri String The uri to the data source you want to POST against. payload Object The data you want to POST against your entity set. Example let res = await service . rest . delete ( ` ${ browser . config . baseUrl } /posts/99` ); rest.delete(uri, options) \u21d2 Object makes a DELETE request. Kind : static method of rest Returns : Object - The response of the DELETE request. Param Type Description uri String The uri to the data source you want to DELETE. options Object The options you want to specify for DELETE. Example let res = await service . rest . delete ( ` ${ browser . config . baseUrl } /posts/99` ); rest.patch(uri, options) \u21d2 Object makes a PATCH request. Kind : static method of rest Returns : Object - The response of the PATCH request. Param Type Description uri String The uri to the data source you want to PATCH. options Object The options you want to specify for PATCH. Example let res = await service . rest . patch ( ` ${ browser . config . baseUrl } /posts/99` );","title":"\u2630 Reuse API"},{"location":"doc/#constants","text":"common Global namespace for common modules. util Global namespace for util modules. ui5 Global namespace for UI5 modules. nonUi5 Global namespace for non UI5 modules. service Global namespace for service modules.","title":"Constants"},{"location":"doc/#common","text":"Global namespace for common modules. Kind : global constant common .assertion .expectEqual(value1, value2) .expectUnequal(value1, value2) .expectTrue(value) .expectFalse(value) .expectDefined(value) .expectUndefined(value) .expectUrlToBe() .date .getToday([format]) \u21d2 String .getTomorrow([format]) \u21d2 String .getNextMonth([format]) \u21d2 String .getPreviousMonth([format]) \u21d2 String .getNextYear([format]) \u21d2 String .getPreviousYear([format]) \u21d2 String .getSpecific(date, [format]) \u21d2 String .calculate([date], [format]) \u21d2 String .navigation .navigateToUrl(url) .navigateToUrlAndRetry(url, [retries], [interval]) .userInteraction .fillActive(value) .fillActiveAndRetry(value, [retries], [interval]) .clearAndFillActive(value) .clearAndFillActiveAndRetry(value, [retries], [interval]) .pressKey(keys) .pressEnter() .pressTab() .pressF4() .pressBackspace() .pressEscape() .pressArrowLeft() .pressArrowRight()","title":"common"},{"location":"doc/#commonassertion","text":"Kind : static class of common .assertion .expectEqual(value1, value2) .expectUnequal(value1, value2) .expectTrue(value) .expectFalse(value) .expectDefined(value) .expectUndefined(value) .expectUrlToBe()","title":"common.assertion"},{"location":"doc/#assertionexpectequalvalue1-value2","text":"Expects the passed values to be equal. Kind : static method of assertion Param Type Description value1 Any Value (1) to be equal to value (2) value2 Any Value (2) to be equal to value (1) Example common . assertion . expectEqual ( value1 , value2 );","title":"assertion.expectEqual(value1, value2)"},{"location":"doc/#assertionexpectunequalvalue1-value2","text":"Expects the passed values to be unequal. Kind : static method of assertion Param Type Description value1 Any Value (1) to be unequal to value (2) value2 Any Value (2) to be unequal to value (1) Example common . assertion . expectUnequal ( value1 , value2 );","title":"assertion.expectUnequal(value1, value2)"},{"location":"doc/#assertionexpecttruevalue","text":"Expects the passed value to be true. Kind : static method of assertion Param Type Description value Any Value to be equal to true Example common . assertion . expectTrue ( value );","title":"assertion.expectTrue(value)"},{"location":"doc/#assertionexpectfalsevalue","text":"Expects the passed value to be false. Kind : static method of assertion Param Type Description value Boolean The value to be false. Example common . assertion . expectFalse ( false );","title":"assertion.expectFalse(value)"},{"location":"doc/#assertionexpectdefinedvalue","text":"Expects the passed values is defined. Kind : static method of assertion Param Type Description value Any Value to be defined (not undefined) Example common . assertion . expectDefined ( value );","title":"assertion.expectDefined(value)"},{"location":"doc/#assertionexpectundefinedvalue","text":"Expects the passed values is undefined. Kind : static method of assertion Param Type Description value Any Value to be undefined Example common . assertion . expectUndefined ( value );","title":"assertion.expectUndefined(value)"},{"location":"doc/#assertionexpecturltobe","text":"Expects the url to be the passed value. Kind : static method of assertion Example await common . assertion . expectUrlToBe ( \"www.sap.com\" );","title":"assertion.expectUrlToBe()"},{"location":"doc/#commondate","text":"Kind : static class of common .date .getToday([format]) \u21d2 String .getTomorrow([format]) \u21d2 String .getNextMonth([format]) \u21d2 String .getPreviousMonth([format]) \u21d2 String .getNextYear([format]) \u21d2 String .getPreviousYear([format]) \u21d2 String .getSpecific(date, [format]) \u21d2 String .calculate([date], [format]) \u21d2 String","title":"common.date"},{"location":"doc/#dategettodayformat-string","text":"Returns the current day in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getToday ( \"mm/dd/yyyy\" );","title":"date.getToday([format]) \u21d2 String"},{"location":"doc/#dategettomorrowformat-string","text":"Returns tomorrows date in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getTomorrow ( \"mm/dd/yyyy\" );","title":"date.getTomorrow([format]) \u21d2 String"},{"location":"doc/#dategetnextmonthformat-string","text":"Returns the current day one month later in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getNextMonth ( \"mm/dd/yyyy\" );","title":"date.getNextMonth([format]) \u21d2 String"},{"location":"doc/#dategetpreviousmonthformat-string","text":"Returns the current day one month before in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getPreviousMonth ( \"mm/dd/yyyy\" );","title":"date.getPreviousMonth([format]) \u21d2 String"},{"location":"doc/#dategetnextyearformat-string","text":"Returns the current day one year later in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getNextYear ( \"mm/dd/yyyy\" );","title":"date.getNextYear([format]) \u21d2 String"},{"location":"doc/#dategetpreviousyearformat-string","text":"Returns the current day one year before in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getPreviousYear ( \"mm/dd/yyyy\" );","title":"date.getPreviousYear([format]) \u21d2 String"},{"location":"doc/#dategetspecificdate-format-string","text":"Returns a specific date in the given format. Kind : static method of date Returns : String - The date in the given format. Param Type Default Description date String A specific date string. [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). Example const date = await common . date . getSpecific ( \"2020, 0, 17\" , \"mm/dd/yyyy\" );","title":"date.getSpecific(date, [format]) \u21d2 String"},{"location":"doc/#datecalculatedate-format-string","text":"Calculates the date based on the input parameter and returns it in the given format. Kind : static method of date Returns : String - The calculated date in the given format. Param Type Default Description [date] String \"today\" Supported values: today, tomorrow, nextMonth, previousMonth, nextYear, previousYear [format] String \"object\" The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"datetime\", \"object\"). Example const date = await common . date . calculate ( \"today\" , \"mm/dd/yyy\" );","title":"date.calculate([date], [format]) \u21d2 String"},{"location":"doc/#commonnavigation","text":"Kind : static class of common .navigation .navigateToUrl(url) .navigateToUrlAndRetry(url, [retries], [interval])","title":"common.navigation"},{"location":"doc/#navigationnavigatetourlurl","text":"Navigates to the passed url. Kind : static method of navigation Param Type Description url String The url. Example await common . navigation . navigateToUrl ( \"www.sap.com\" );","title":"navigation.navigateToUrl(url)"},{"location":"doc/#navigationnavigatetourlandretryurl-retries-interval","text":"Navigates to the passed url and retries the function in case of a failure. Kind : static method of navigation Param Type Default Description url String The url to navigate to. [retries] Integer 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Integer 5000 The interval of the retries (ms), can be set in config for all functions under params stepRetriesIntervals. Example await common . navigation . navigateToUrlAndRetry ( \"www.sap.com\" );","title":"navigation.navigateToUrlAndRetry(url, [retries], [interval])"},{"location":"doc/#commonuserinteraction","text":"Kind : static class of common .userInteraction .fillActive(value) .fillActiveAndRetry(value, [retries], [interval]) .clearAndFillActive(value) .clearAndFillActiveAndRetry(value, [retries], [interval]) .pressKey(keys) .pressEnter() .pressTab() .pressF4() .pressBackspace() .pressEscape() .pressArrowLeft() .pressArrowRight()","title":"common.userInteraction"},{"location":"doc/#userinteractionfillactivevalue","text":"Fills the active input with the given value. Kind : static method of userInteraction Param Type Description value String The value with witch the input should be filled. Example await common . userInteraction . fillActive ( \"My Value\" );","title":"userInteraction.fillActive(value)"},{"location":"doc/#userinteractionfillactiveandretryvalue-retries-interval","text":"Enters the given value to the active input field and retries the action in case it fails. Kind : static method of userInteraction Param Type Default Description value String The value with witch the input should be filled. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await common . userInteraction . fillActiveAndRetry ( \"My Value\" );","title":"userInteraction.fillActiveAndRetry(value, [retries], [interval])"},{"location":"doc/#userinteractionclearandfillactivevalue","text":"Clears and fills the active input. Kind : static method of userInteraction Param Type Description value String The value to fill. Example await common . userInteraction . clearAndFillActive ( \"My Value\" );","title":"userInteraction.clearAndFillActive(value)"},{"location":"doc/#userinteractionclearandfillactiveandretryvalue-retries-interval","text":"CClears and fills the active input. Retries the action in case of a failure. Kind : static method of userInteraction Param Type Default Description value String The value to fill. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await common . userInteraction . clearAndFillActiveAndRetry ( \"My Value\" );","title":"userInteraction.clearAndFillActiveAndRetry(value, [retries], [interval])"},{"location":"doc/#userinteractionpresskeykeys","text":"Performs the specified keypress. Possible values: https://w3c.github.io/webdriver/#keyboard-actions Kind : static method of userInteraction Param Type Description keys String | Array.<String> The key or combination of keys to execute. Example await common . userInteraction . pressKey ( \"Enter\" ); Example await common . userInteraction . pressKey ( \"\\uE004\" ); Example await common . userInteraction . pressKey ([ \"\\uE009\" , \"Alt\" ]);","title":"userInteraction.pressKey(keys)"},{"location":"doc/#userinteractionpressenter","text":"Performs the Enter keypress. Kind : static method of userInteraction Example await common . userInteraction . pressEnter ();","title":"userInteraction.pressEnter()"},{"location":"doc/#userinteractionpresstab","text":"Performs the Tab keypress. Kind : static method of userInteraction Example await common . userInteraction . pressTab ();","title":"userInteraction.pressTab()"},{"location":"doc/#userinteractionpressf4","text":"Performs the F4 keypress. Kind : static method of userInteraction Example await common . userInteraction . pressF4 ();","title":"userInteraction.pressF4()"},{"location":"doc/#userinteractionpressbackspace","text":"Performs the Backspace keypress. Kind : static method of userInteraction Example await common . userInteraction . pressBackspace ();","title":"userInteraction.pressBackspace()"},{"location":"doc/#userinteractionpressescape","text":"Performs the Escape keypress. Kind : static method of userInteraction Example await common . userInteraction . pressEscape ();","title":"userInteraction.pressEscape()"},{"location":"doc/#userinteractionpressarrowleft","text":"Performs the Arrow Left keypress. Kind : static method of userInteraction Example await common . userInteraction . pressArrowLeft ();","title":"userInteraction.pressArrowLeft()"},{"location":"doc/#userinteractionpressarrowright","text":"Performs the Arrow Right keypress. Kind : static method of userInteraction Example await common . userInteraction . pressArrowRight ();","title":"userInteraction.pressArrowRight()"},{"location":"doc/#util","text":"Global namespace for util modules. Kind : global constant util .browser .getBaseUrl() \u21d2 String .setBaseUrl(baseUrl:) .logCurrentUrl() .getCurrentUrl() .resetFocus() .sleep([duration]) .collectCoverage() .sleepAndCollectCoverage([duration]) .refresh() .clearBrowser([clearLocal], [clearSession], [clearCookies]) .getBrowserName() \u21d2 String .getUI5Version([timeout]) .logUI5Version() .executeScript(command) \u21d2 Any .switchToNewWindow(titleOrUrl, [timeout]) .switchToWindow(handle) .getCurrentWindow() \u21d2 Object .switchToIframe(selector) .switchToDefaultContent() .back() .console .log(message, [textColor], [backgroundColor], [brightness]) .error(message) .warn(message) .success(message) .info(message) .data .getData(filename) \u21d2 String .getSecureData(filename) \u21d2 String .decrypt(data) \u21d2 String .file .upload(files, [selector]) .parsePdf(pdfStream, renderingMethod) \u21d2 String .expectPdfContainsText(pdfStream, text, renderingMethod) .expectPdfNotContainsText(pdfStream, text, renderingMethod) .formatter .sliceStringAt(input, slicePoint, length) \u21d2 String .sliceStringAfter(input, slicePoint, length) \u21d2 String .trimString(input) .extractNumberFromString(input, [index]) \u21d2 String .stringifyJSON(object) \u21d2 String .addRemoveLeadingZeros(number, length) \u21d2 String .formatDate(date, format, [locale]) \u21d2 String .function .retry(fct, args, [retries], [interval], [scope]) .executeOptional(fct, args) .system .getOS() \u21d2 String","title":"util"},{"location":"doc/#utilbrowser","text":"Kind : static class of util .browser .getBaseUrl() \u21d2 String .setBaseUrl(baseUrl:) .logCurrentUrl() .getCurrentUrl() .resetFocus() .sleep([duration]) .collectCoverage() .sleepAndCollectCoverage([duration]) .refresh() .clearBrowser([clearLocal], [clearSession], [clearCookies]) .getBrowserName() \u21d2 String .getUI5Version([timeout]) .logUI5Version() .executeScript(command) \u21d2 Any .switchToNewWindow(titleOrUrl, [timeout]) .switchToWindow(handle) .getCurrentWindow() \u21d2 Object .switchToIframe(selector) .switchToDefaultContent() .back()","title":"util.browser"},{"location":"doc/#browsergetbaseurl-string","text":"Retrieves the baseUrl from the configuration file. Kind : static method of browser Returns : String - The baseUrl. Example const baseUrl = util . browser . getBaseUrl ();","title":"browser.getBaseUrl() \u21d2 String"},{"location":"doc/#browsersetbaseurlbaseurl","text":"Sets or overwrites the baseUrl in the configuration file. Kind : static method of browser Param Type Description baseUrl: String base URL to set Example await util . browser . setBaseUrl ( \"https://www.sap.com\" );","title":"browser.setBaseUrl(baseUrl:)"},{"location":"doc/#browserlogcurrenturl","text":"Displays the current URL in the console. Kind : static method of browser Example await util . browser . logCurrentUrl ();","title":"browser.logCurrentUrl()"},{"location":"doc/#browsergetcurrenturl","text":"Returns the current URL Kind : static method of browser Example await util . browser . getCurrentUrl ();","title":"browser.getCurrentUrl()"},{"location":"doc/#browserresetfocus","text":"Resets the focus in case it set for a specific element. Kind : static method of browser Example await util . browser . resetFocus ();","title":"browser.resetFocus()"},{"location":"doc/#browsersleepduration","text":"Sleeps (pauses execution) for the passed duration. Kind : static method of browser Param Type Default Description [duration] Number 1000 The time to pause (ms). Example await util . browser . sleep ( 30000 );","title":"browser.sleep([duration])"},{"location":"doc/#browsercollectcoverage","text":"Trigger collection of coverage by coverage service. Kind : static method of browser Example await util . browser . collectCoverage ();","title":"browser.collectCoverage()"},{"location":"doc/#browsersleepandcollectcoverageduration","text":"Trigger collection of coverage by coverage service. Kind : static method of browser Param Type Default Description [duration] Number 1000 The time to pause (ms). Example await util . browser . sleepAndCollectCoverage ( 3000 );","title":"browser.sleepAndCollectCoverage([duration])"},{"location":"doc/#browserrefresh","text":"Refreshes the page. Kind : static method of browser Example await util . browser . refresh ();","title":"browser.refresh()"},{"location":"doc/#browserclearbrowserclearlocal-clearsession-clearcookies","text":"Clears the local and session cache and deletes all browser cookies. Kind : static method of browser Param Type Default Description [clearLocal] Boolean true Specifies if the local cache will be cleared. [clearSession] Boolean true Specifies if the session cache will be cleared. [clearCookies] Boolean true Specifies if the cookies will be cleared. Example await util . browser . clearBrowser ();","title":"browser.clearBrowser([clearLocal], [clearSession], [clearCookies])"},{"location":"doc/#browsergetbrowsername-string","text":"Retrieves the name of the current browser. Kind : static method of browser Returns : String - The browser name. Example const browserName = util . browser . getBrowserName ();","title":"browser.getBrowserName() \u21d2 String"},{"location":"doc/#browsergetui5versiontimeout","text":"Gets the UI5 version and creation date for UI5 based applications. Kind : static method of browser Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await util . browser . getUI5Version ();","title":"browser.getUI5Version([timeout])"},{"location":"doc/#browserlogui5version","text":"Logs the UI5 version and creation date for UI5 based applications to the console. Kind : static method of browser Example await util . browser . logUI5Version ();","title":"browser.logUI5Version()"},{"location":"doc/#browserexecutescriptcommand-any","text":"Executes the specified JavaScript command. Kind : static method of browser Returns : Any - The result from the executed function. Param Type Description command String The command to execute. Example await util . browser . executeScript ( command );","title":"browser.executeScript(command) \u21d2 Any"},{"location":"doc/#browserswitchtonewwindowtitleorurl-timeout","text":"Switches to the window or tab with the given title. Kind : static method of browser Param Type Default Description titleOrUrl String | RegExp Window title or url of the expected window or tab (can be either a string or part of it as regular expression). [timeout] Number 10000 The timeout to wait (ms). Example await util . browser . switchToNewWindow ( \"SAP - Home\" ); Example await util . browser . switchToNewWindow ( /Home/ ); Example await util . browser . switchToNewWindow ( \"www.sap.com\" );","title":"browser.switchToNewWindow(titleOrUrl, [timeout])"},{"location":"doc/#browserswitchtowindowhandle","text":"Switches to the passed window. Kind : static method of browser Param Type Description handle Object The window handle. Example await util . browser . switchToWindow ( originalWindowHandle );","title":"browser.switchToWindow(handle)"},{"location":"doc/#browsergetcurrentwindow-object","text":"Returns the current window handle. Kind : static method of browser Returns : Object - The window handle. Example const originalWindowHandle = await util . browser . getCurrentWindow ();","title":"browser.getCurrentWindow() \u21d2 Object"},{"location":"doc/#browserswitchtoiframeselector","text":"Switches to the passed iframe. Kind : static method of browser Param Type Description selector String The CSS selector describing the iframe element. Example await util . browser . switchToIframe ( \"iframe[id='frame01']\" );","title":"browser.switchToIframe(selector)"},{"location":"doc/#browserswitchtodefaultcontent","text":"Switches to the default content of the HTML page. Kind : static method of browser Example await util . browser . switchToDefaultContent ();","title":"browser.switchToDefaultContent()"},{"location":"doc/#browserback","text":"Go one step back in browser history. Kind : static method of browser Example await util . browser . back ();","title":"browser.back()"},{"location":"doc/#utilconsole","text":"Kind : static class of util .console .log(message, [textColor], [backgroundColor], [brightness]) .error(message) .warn(message) .success(message) .info(message)","title":"util.console"},{"location":"doc/#consolelogmessage-textcolor-backgroundcolor-brightness","text":"Logs a message to the console in the given color. Kind : static method of console Param Type Description message String The message to log. [textColor] String The color of the text: \"black, white\", \"red\", \"yellow\", \"green\", \"blue\", \"cyan\", \"magenta\". [backgroundColor] String The color of the background: \"black, white\", \"red\", \"yellow\", \"green\", \"blue\", \"cyan\", \"magenta\". [brightness] String Adjusts the brightness of the color: \"bright\", \"dim\". Leave empty for default. Example util . console . log ( \"The document has been saved.\" , \"green\" );","title":"console.log(message, [textColor], [backgroundColor], [brightness])"},{"location":"doc/#consoleerrormessage","text":"Logs a error message to the console in red. Kind : static method of console Param Type Description message String The message to log. Example util . console . error ( \"Error: Please investigate.\" );","title":"console.error(message)"},{"location":"doc/#consolewarnmessage","text":"Logs a warning message to the console in yellow. Kind : static method of console Param Type Description message String The message to log. Example util . console . warn ( \"Optional step not executed.\" );","title":"console.warn(message)"},{"location":"doc/#consolesuccessmessage","text":"Logs a success message to the console in green. Kind : static method of console Param Type Description message String The message to log. Example util . console . success ( \"The document has been saved.\" );","title":"console.success(message)"},{"location":"doc/#consoleinfomessage","text":"Logs a info message to the console in cyan. Kind : static method of console Param Type Description message String The message to log. Example util . console . success ( \"The document has been saved.\" );","title":"console.info(message)"},{"location":"doc/#utildata","text":"Kind : static class of util .data .getData(filename) \u21d2 String .getSecureData(filename) \u21d2 String .decrypt(data) \u21d2 String","title":"util.data"},{"location":"doc/#datagetdatafilename-string","text":"Returns the data object with the given filename (JSON, stored in data folder). Kind : static method of data Returns : String - The data object. Param Type Description filename String The name of the data file. Example const data = util . data . getData ( \"myTest\" );","title":"data.getData(filename) \u21d2 String"},{"location":"doc/#datagetsecuredatafilename-string","text":"Returns and encrypts the data object with the given filename (JSON, stored in data folder). Will return the local file object if private key is not accessible. Kind : static method of data Returns : String - The encrypted or local data object. Param Type Description filename String The name of the data file (without suffix '.secure' or '.local'). Example const secureData = util . data . getSecureData ( \"myTest\" );","title":"data.getSecureData(filename) \u21d2 String"},{"location":"doc/#datadecryptdata-string","text":"Decrypts the passed input data. Kind : static method of data Returns : String - The decrypted data. Param Type Description data String The encrypted data to decrypt. Example const decrypted = util . data . decrypt ( \"d704004c262faa8ef4bdcf34c8a94883e15524872c7bef334d26a391a1934cf47338b749d99426980ee4cc7a81deaef21439c6894ab0324cdb29b9b6332635baca442651c5d37847f52bb90b8868e037271a7d456024b39b65fdf4dc62e8d82a3d5683a72e4324c59d339742fc79749f0ee74abef916d38e306218adc48e3547a2b346962249320c962d22cb46d9998de36d8219a2496c0997d0fc389f76fb1431a9b57c317886e9c9795c0a09ad98d9fa0b7687d10814dc7973397f3f72a227a04ead4c3d1d428c096a51922ffc4d7afc3952df1c130def5c5fb3e834605cbf1454885966cc65c77046343f4c678e74931fb2dd6cac8dae17837cf674f288d6550dd7fa6b01f5b7ea68aa6bd27d79dd5d53edb5fd4b4edce824bd31b3939352ad7a71a16bab8c54025c2bb92c54e022fcd23ff08bc54a17fc50d00dc3b884cadbfdefe1e75901fdf80e7324ad02a891f2c4863fa120ca238520b79126c65a03\" );","title":"data.decrypt(data) \u21d2 String"},{"location":"doc/#utilfile","text":"Kind : static class of util .file .upload(files, [selector]) .parsePdf(pdfStream, renderingMethod) \u21d2 String .expectPdfContainsText(pdfStream, text, renderingMethod) .expectPdfNotContainsText(pdfStream, text, renderingMethod)","title":"util.file"},{"location":"doc/#fileuploadfiles-selector","text":"Uploads all the file/s by the paths given in the Array. Kind : static method of file Param Type Default Description files Array.<String> Array with path/s of file/s to be uploaded. [selector] String \"input[type='file']\" Custom selector of uploader control (in case there are more then one present). Example await util . file . upload ([ \"path/to/text1.txt\" , \"path/to/text2.txt\" ]); // uses the default uploader control Example await util . file . upload ([ \"path/to/text1.txt\" , \"path/to/text2.txt\" ], \"input[id='myUpload']\" ); // upload to file uploader with matching selector","title":"file.upload(files, [selector])"},{"location":"doc/#fileparsepdfpdfstream-renderingmethod-string","text":"Parses the text from PDF stream. Returned text can be asserted to verify the PDF document content. Kind : static method of file Returns : String - The parsed PDF text. See : Parse PDF Param Type Description pdfStream Buffer PDF stream to be downloaded. renderingMethod function Function to customize the parsing process. Example await util . file . parsePdf ( pdfStream , customRenderingMethod );","title":"file.parsePdf(pdfStream, renderingMethod) \u21d2 String"},{"location":"doc/#fileexpectpdfcontainstextpdfstream-text-renderingmethod","text":"Parses the PDF and checks for given text to be contained in PDF. Kind : static method of file See : Parse pdf Param Type Description pdfStream Buffer PDF stream to be downloaded. text String The expected text. renderingMethod function Function to customize the parsing process. Example await util . file . expectPdfContainsText ( pdfStream , \"abc\" );","title":"file.expectPdfContainsText(pdfStream, text, renderingMethod)"},{"location":"doc/#fileexpectpdfnotcontainstextpdfstream-text-renderingmethod","text":"Parses the PDF and checks for given text not to be contained in PDF. Kind : static method of file See : Parse pdf Param Type Description pdfStream Buffer PDF stream to be downloaded text String The text expected to be not contained in the PDF. renderingMethod function Function to customize the parsing process. Example await util . file . expectPdfNotContainsText ( pdfStream , \"abc\" );","title":"file.expectPdfNotContainsText(pdfStream, text, renderingMethod)"},{"location":"doc/#utilformatter","text":"Kind : static class of util .formatter .sliceStringAt(input, slicePoint, length) \u21d2 String .sliceStringAfter(input, slicePoint, length) \u21d2 String .trimString(input) .extractNumberFromString(input, [index]) \u21d2 String .stringifyJSON(object) \u21d2 String .addRemoveLeadingZeros(number, length) \u21d2 String .formatDate(date, format, [locale]) \u21d2 String","title":"util.formatter"},{"location":"doc/#formatterslicestringatinput-slicepoint-length-string","text":"Slices the given string beginning at a specific substring. Kind : static method of formatter Returns : String - The sliced string. Param Type Description input String The input string to slice. slicePoint String The substring at which the input string is being sliced. length number The required length of the returning string (starting at the index of the passed slice point). Example const sliced = util . formatter . sliceStringAt ( \"prefixNR12345postfix\" , \"NR\" , 7 ); // returns \"NR12345\"","title":"formatter.sliceStringAt(input, slicePoint, length) \u21d2 String"},{"location":"doc/#formatterslicestringafterinput-slicepoint-length-string","text":"Slices the given string after a specific substring. Kind : static method of formatter Returns : String - The sliced string. Param Type Description input String The input string to slice. slicePoint String The substring after which the input string is being sliced. length number The required length of the returning string (starting at the index after the passed slice point). Example const sliced = util . formatter . sliceStringAfter ( \"prefixNR12345postfix\" , \"NR\" , 5 ); // returns \"12345\"","title":"formatter.sliceStringAfter(input, slicePoint, length) \u21d2 String"},{"location":"doc/#formattertrimstringinput","text":"Removes whitespace from both sides of the given string. Kind : static method of formatter Param Type Description input String The input string to trim. Example const trimmed = util . formatter . trimString ( \" value \" ); // returns \"value\"","title":"formatter.trimString(input)"},{"location":"doc/#formatterextractnumberfromstringinput-index-string","text":"Extracts all numbers from a string. Kind : static method of formatter Returns : String - The extracted number. Param Type Default Description input String The input string to extract the number. [index] number 0 If there are multiple numbers in the string you can pass an index to return a specific number. Example const extracted = util . formatter . extractNumberFromString ( \"prefixNR12345postfix\" ); // returns \"12345\" Example const extracted = util . formatter . extractNumberFromString ( \"first12345 someText second 20 abc\" , 1 ); // returns \"20\"","title":"formatter.extractNumberFromString(input, [index]) \u21d2 String"},{"location":"doc/#formatterstringifyjsonobject-string","text":"Converts a JSON object to string. Kind : static method of formatter Returns : String - The converted JSON object. Param Type Description object Object The JSON to be converted. Example console . log ( `Printing the current selector: ${ util . formatter . stringifyJSON ( selector ) } ` );","title":"formatter.stringifyJSON(object) \u21d2 String"},{"location":"doc/#formatteraddremoveleadingzerosnumber-length-string","text":"Adds or removes leading zeros to the passed number to format it to the required length. Kind : static method of formatter Returns : String - The formatted number. Param Type Description number String The number to be formatted. length Number The required length of the number. Example const itemNumber = util . formatter . addRemoveLeadingZeros ( 10 , 5 );","title":"formatter.addRemoveLeadingZeros(number, length) \u21d2 String"},{"location":"doc/#formatterformatdatedate-format-locale-string","text":"formats date. Kind : static method of formatter Returns : String - The formatted date as string. Param Type Default Description date Date The date object to be formatted. format String The expected format (\"mm/dd/yyyy\", \"dd.mm.yyyy\", \"dd/mm/yyyy\", \"yyyymmdd\", \"yyyy/mm/dd\", \"mmm dd, yyyy\", \"datetime\", \"object\"). [locale] String \"en-US\" The locale format of the date. E.g. \"en-US\", \"de-DE\", etc. Example const date = new Date ( 2020 , 0 , 17 ); const formattedDate = util . formatter . formatDate ( date , \"mm/dd/yyyy\" ); // returns \"01/17/2020\" Example const date = new Date ( 2022 , 3 , 12 ); const formattedDate = util . formatter . formatDate ( date , \"mmm dd, yyyy\" ); // returns \"Apr 03, 2022\"","title":"formatter.formatDate(date, format, [locale]) \u21d2 String"},{"location":"doc/#utilfunction","text":"Kind : static class of util .function .retry(fct, args, [retries], [interval], [scope]) .executeOptional(fct, args)","title":"util.function"},{"location":"doc/#functionretryfct-args-retries-interval-scope","text":"Retries the passed function n times with a specific interval until it executed successfully. Kind : static method of function Param Type Default Description fct function The function to retry. args Array An array of the arguments passed to the function. [retries] Integer 3 The number of retries. Can be set in config for all functions under \"params\" - \"stepsRetries\". [interval] Integer 5000 The interval of the retries (ms). Can be set in config for all functions under \"params\" - \"stepRetriesIntervals\". [scope] Object The function scope. Defaults is the global object. Example await util . function . retry ( ui5 . userInteraction . fill , [ selector , value ], 4 , 10000 ); Example await util . function . retry ( async () => { await ui5 . userInteraction . fill ( selector , \"ABC\" ); }, [], 2 , 30000 );","title":"function.retry(fct, args, [retries], [interval], [scope])"},{"location":"doc/#functionexecuteoptionalfct-args","text":"Executes the given function optionally. If it fails, a promise will be returned anyway. Kind : static method of function Param Type Description fct function The function to execute. args Array An array of the arguments passed to the function. Example await util . function . executeOptional ( ui5 . userInteraction . fill , [ selector , value ]); Example await util . function . executeOptional ( async () => { await ui5 . userInteraction . fill ( selector , \"ABC\" ); }, []);","title":"function.executeOptional(fct, args)"},{"location":"doc/#utilsystem","text":"Kind : static class of util","title":"util.system"},{"location":"doc/#systemgetos-string","text":"Returns the current operating system. Kind : static method of system Returns : String - AIX | Android | MacOS | FreeBSD | Linux | OpenBSD | Windows | SunOS Example const os = await util . system . getOS ();","title":"system.getOS() \u21d2 String"},{"location":"doc/#ui5","text":"Global namespace for UI5 modules. Kind : global constant ui5 .assertion .expectAttributeToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectAttributeToContain(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectTextToBe(selector, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectValueToBe(selector, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectValueToBeDefined(selector, [index], [timeout]) .expectToBeNotEnabled(selector, [index], [timeout], [loadPropertyTimeout]) .expectToBeEnabled(selector, [index], [timeout], [loadPropertyTimeout]) .expectValidationError(selector, [index], [timeout], [loadPropertyTimeout]) .expectValidationSuccess(selector, [index], [timeout], [loadPropertyTimeout]) .expectBindingPathToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectBindingContextPathToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectToBeVisible(selector, [index], [timeout], [loadPropertyTimeout]) .expectToBeVisibleInViewport(selector, [index], [timeout], [loadPropertyTimeout]) .expectToBeNotVisible(selector, [index], [timeout]) .expectMessageToastTextToBe(text, [timeout]) .confirmationDialog .clickButton(text, [timeout]) .clickOk([timeout]) .clickCancel([timeout]) .clickYes([timeout]) .clickNo([timeout]) .clickCreate([timeout]) .clickDelete([timeout]) .clickRevokeApproval([timeout]) .control .execute(callbackFunction, selectorOrElement, args) .getProperty(elem, propertyName) .getAggregationProperty(elem, propertyName) .getAssociationProperty(elem, propertyName) .getBindingContextPathProperty(elem) .getPropertyBinding(elem, propertyName) \u21d2 Array .date .pick(selector, date, [index]) .pickRange(selector, range, [index]) .fillRange(selector, range, [index]) .element .waitForAll(selector, [timeout]) .getAllDisplayed(selector, [timeout]) \u21d2 Array.<Object> .getDisplayed(selector, [index], [timeout]) \u21d2 Object .getByText(selector, value, [index], [timeout]) \u21d2 Object .getByChild(elementSelector, childSelector, [index], [timeout]) \u21d2 Object .getByParent(elementSelector, parentSelector, [index], [timeout]) \u21d2 Object .getId(selector, [index], [timeout]) \u21d2 String .getPropertyValue(selector, property, [index], [timeout]) \u21d2 String .getValue(selector, [index], [timeout]) \u21d2 String .getBindingValue(selector, bindingContext, [index], [timeout]) \u21d2 String .isVisible(selector, [index], [timeout]) \u21d2 Boolean .highlight(selector, [duration], [color]) .errorDialog .expectToBeVisible() .clickClose() .footerBar .clickButton(text, [timeout]) .clickApply([timeout]) .clickSave([timeout]) .clickCreate([timeout]) .clickCancel([timeout]) .clickCheck([timeout]) .clickOrder([timeout]) .clickPost([timeout]) .clickAdd([timeout]) .mockserver .waitForUi5ApplicationLoad(interval) .interactWithMockServer(mockServerPath, fnCallback, oParams) .attachFunctionBefore(method, mockServerPath, fnBeforeCallback, oParams) .attachFunctionAfter(method, mockServerPath, fnAfterCallback, oParams) .addNewRequest(method, mockServerPath, urlPathRegex, responseJsonPath, returnCode, isText, responseMessages, responseLocation) .removeRequest(method, mockServerPath, urlPathRegex) .addOrOverrideRequest(method, mockServerPath, urlPathRegex, responseJsonPath, returnCode, isText, responseMessages, responseLocation) .startMockServer(mockServerPath) .initMockServer(mockServerPath, mockServerOptions) .initApplication(mockServerPath) .stopMockServer(mockServerPath) .loadMockDataFile(filePath, isText) \u21d2 String .getEntitySetData(mockServerPath, entitySetName) \u21d2 Array .setEntitySetData(mockServerPath, entitySetName, entries) .navigation .navigateToApplication(intent, [preventPopups], [verify], [refresh]) .navigateToApplicationAndRetry(intent, [preventPopups], [verify], [retries], [interval]) .navigateToSystemAndApplication(system, intent, [closePopups], [verify]) .navigateToSystemAndApplicationAndRetry(system, intent, [closePopups], [verify], [retries], [interval]) .navigateToApplicationWithQueryParams(intent, queryParams, [preventPopups], [verify]) .navigateToApplicationWithQueryParamsAndRetry(intent, queryParams, [preventPopups], [verify], [retries], [interval]) .closePopups([timeout]) .expectUnsupportedNavigationPopup(navigationTarget) .navigationBar .clickBack([timeout]) .clickSapLogo([timeout]) .clickUserIcon([timeout]) .expectPageTitle(compareValue) .expectShellHeader([timeout]) .qunit .executeTests(path) .session .login(username, [password], [verify], [timeout]) .loginFiori(username, [password], [verify]) .loginSapCloud(username, [password], [verify]) .loginCustom(username, [password], usernameFieldSelector, passwordFieldSelector, logonButtonSelector, [verify]) .loginCustomViaConfig(username, password, [verify]) .logout([verify]) .switchUser(username, [password], [authenticator], [wait]) .expectLogoutText() .table .sortColumnAscending(columnName, [tableSelector]) .sortColumnDescending(columnName, [tableSelector]) .clickSettingsButton([tableSelector]) .userInteraction .click(selector, [index], [timeout]) .clickAndRetry(selector, [index], [timeout], [retries], [interval]) .clickTab(selector, [index], [timeout]) .clickListItem(selector, [index], [timeout]) .fill(selector, value, [index], [timeout]) .fillAndRetry(selector, value, [index], [timeout], [retries], [interval]) .clear(selector, [index], [timeout]) .clearAndRetry(selector, [index], [timeout], [retries], [interval]) .clearAndFill(selector, value, [index], [timeout]) .clearAndFillAndRetry(selector, value, [index], [timeout], [retries], [interval], [verify]) .clearSmartFieldInput(selector, [index], [timeout]) .clearAndFillSmartFieldInput(selector, value, [index], [timeout]) .clearAndFillSmartFieldInputAndRetry(selector, value, [index], [timeout], [retries], [interval]) .selectBox(selector, value, [index]) .selectComboBox(selector, value, [index]) .selectMultiComboBox(selector, values, [index]) .clickSelectArrow(selector, [index]) .clickSelectArrowAndRetry(selector, [index], [retries], [interval]) .mouseOverElement(selector, [index], [timeout]) .scrollToElement(selector, [index], [alignment], [timeout]) .selectAll([selector], [index], [timeout]) .openF4Help(selector, [index], [timeout], useF4Key) .searchFor(selector, [index], [timeout], useEnter) .resetSearch(selector, [index], [timeout]) .doubleClick(selector, [index], [timeout]) .rightClick(selector, [index], [timeout])","title":"ui5"},{"location":"doc/#ui5assertion","text":"Kind : static class of ui5 .assertion .expectAttributeToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectAttributeToContain(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectTextToBe(selector, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectValueToBe(selector, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectValueToBeDefined(selector, [index], [timeout]) .expectToBeNotEnabled(selector, [index], [timeout], [loadPropertyTimeout]) .expectToBeEnabled(selector, [index], [timeout], [loadPropertyTimeout]) .expectValidationError(selector, [index], [timeout], [loadPropertyTimeout]) .expectValidationSuccess(selector, [index], [timeout], [loadPropertyTimeout]) .expectBindingPathToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectBindingContextPathToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout]) .expectToBeVisible(selector, [index], [timeout], [loadPropertyTimeout]) .expectToBeVisibleInViewport(selector, [index], [timeout], [loadPropertyTimeout]) .expectToBeNotVisible(selector, [index], [timeout]) .expectMessageToastTextToBe(text, [timeout])","title":"ui5.assertion"},{"location":"doc/#assertionexpectattributetobeselector-attribute-comparevalue-index-timeout-loadpropertytimeout","text":"Expects the passed elements attribute to be the compare value. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. attribute String The attribute to be compared. compareValue String | Boolean | Number | Object The compare value. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectAttributeToBe ( selector , \"text\" , \"Hello\" );","title":"assertion.expectAttributeToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout])"},{"location":"doc/#assertionexpectattributetocontainselector-attribute-comparevalue-index-timeout-loadpropertytimeout","text":"Expects the passed elements attribute to contain the compare value. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. attribute String The attribute to be compared. compareValue String The compare value. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectAttributeToContain ( selector , \"text\" , \"abc\" );","title":"assertion.expectAttributeToContain(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout])"},{"location":"doc/#assertionexpecttexttobeselector-comparevalue-index-timeout-loadpropertytimeout","text":"Expects the passed elements text attribute to be the compare value. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. compareValue String The compare value. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectTextToBe ( selector , \"Hello\" );","title":"assertion.expectTextToBe(selector, compareValue, [index], [timeout], [loadPropertyTimeout])"},{"location":"doc/#assertionexpectvaluetobeselector-comparevalue-index-timeout-loadpropertytimeout","text":"Expects the passed elements value attribute to be the compare value. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. compareValue String | Number The compare value. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectValueToBe ( selector , \"123\" );","title":"assertion.expectValueToBe(selector, compareValue, [index], [timeout], [loadPropertyTimeout])"},{"location":"doc/#assertionexpectvaluetobedefinedselector-index-timeout","text":"Expects the passed elements value to be defined. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . assertion . expectValueToBeDefined ( selector );","title":"assertion.expectValueToBeDefined(selector, [index], [timeout])"},{"location":"doc/#assertionexpecttobenotenabledselector-index-timeout-loadpropertytimeout","text":"Expects that the element is enabled to the user. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectToBeNotEnabled ( selector );","title":"assertion.expectToBeNotEnabled(selector, [index], [timeout], [loadPropertyTimeout])"},{"location":"doc/#assertionexpecttobeenabledselector-index-timeout-loadpropertytimeout","text":"Expects that the element is enabled to the user. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectToBeEnabled ( selector );","title":"assertion.expectToBeEnabled(selector, [index], [timeout], [loadPropertyTimeout])"},{"location":"doc/#assertionexpectvalidationerrorselector-index-timeout-loadpropertytimeout","text":"Expects the \"valueState\" of the element to be \"Error\". Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectValidationError ( selector );","title":"assertion.expectValidationError(selector, [index], [timeout], [loadPropertyTimeout])"},{"location":"doc/#assertionexpectvalidationsuccessselector-index-timeout-loadpropertytimeout","text":"Expects the valueState of the element to be \"None\". Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectValidationSuccess ( selector );","title":"assertion.expectValidationSuccess(selector, [index], [timeout], [loadPropertyTimeout])"},{"location":"doc/#assertionexpectbindingpathtobeselector-attribute-comparevalue-index-timeout-loadpropertytimeout","text":"Expects the passed elements attribute binding-path to contain the compare value Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. attribute String The attribute to be compared. compareValue String | Array.<String> The compare value(s). [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectBindingPathToBe ( selector , \"text\" , \"Hello\" );","title":"assertion.expectBindingPathToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout])"},{"location":"doc/#assertionexpectbindingcontextpathtobeselector-attribute-comparevalue-index-timeout-loadpropertytimeout","text":"Expects the passed elements binding-context-path to be the compare value. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. attribute String The attribute to be compared. compareValue String The compare value. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectBindingContextPathToBe ( selector , \"text\" , \"Hello\" );","title":"assertion.expectBindingContextPathToBe(selector, attribute, compareValue, [index], [timeout], [loadPropertyTimeout])"},{"location":"doc/#assertionexpecttobevisibleselector-index-timeout-loadpropertytimeout","text":"Expects that the element is visible to the user. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectToBeVisible ( selector );","title":"assertion.expectToBeVisible(selector, [index], [timeout], [loadPropertyTimeout])"},{"location":"doc/#assertionexpecttobevisibleinviewportselector-index-timeout-loadpropertytimeout","text":"Expects that the element is visible in the viewport. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [loadPropertyTimeout] Number 10000 The timeout to wait for a specific property to have the given compare value. Example await ui5 . assertion . expectToBeVisibleInViewport ( selector );","title":"assertion.expectToBeVisibleInViewport(selector, [index], [timeout], [loadPropertyTimeout])"},{"location":"doc/#assertionexpecttobenotvisibleselector-index-timeout","text":"Expects that the element is not visible to the user. Kind : static method of assertion Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Recommendation is to lower the timeout since the element is not expected to show up. Example await ui5 . assertion . expectToBeNotVisible ( selector , 0 , 5000 );","title":"assertion.expectToBeNotVisible(selector, [index], [timeout])"},{"location":"doc/#assertionexpectmessagetoasttexttobetext-timeout","text":"Expects the message toast with the passed text. Kind : static method of assertion Param Type Default Description text String The expected text. [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . assertion . expectMessageToastTextToBe ( text );","title":"assertion.expectMessageToastTextToBe(text, [timeout])"},{"location":"doc/#ui5confirmationdialog","text":"Kind : static class of ui5 .confirmationDialog .clickButton(text, [timeout]) .clickOk([timeout]) .clickCancel([timeout]) .clickYes([timeout]) .clickNo([timeout]) .clickCreate([timeout]) .clickDelete([timeout]) .clickRevokeApproval([timeout])","title":"ui5.confirmationDialog"},{"location":"doc/#confirmationdialogclickbuttontext-timeout","text":"Clicks the button with the given text at the confirmation dialog. Kind : static method of confirmationDialog Param Type Default Description text String The text of the button. [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . confirmationDialog . clickButton ( \"Ok\" );","title":"confirmationDialog.clickButton(text, [timeout])"},{"location":"doc/#confirmationdialogclickoktimeout","text":"Clicks the \"OK\" button at the confirmation dialog. Kind : static method of confirmationDialog Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . confirmationDialog . clickOk ();","title":"confirmationDialog.clickOk([timeout])"},{"location":"doc/#confirmationdialogclickcanceltimeout","text":"Clicks the \"Cancel\" button at the confirmation dialog. Kind : static method of confirmationDialog Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . confirmationDialog . clickCancel ();","title":"confirmationDialog.clickCancel([timeout])"},{"location":"doc/#confirmationdialogclickyestimeout","text":"Clicks the \"Yes\" button at the confirmation dialog. Kind : static method of confirmationDialog Param Type Description [timeout] Number The timeout to wait (default value: 30 sec). Example await ui5 . confirmationDialog . clickYes ();","title":"confirmationDialog.clickYes([timeout])"},{"location":"doc/#confirmationdialogclicknotimeout","text":"Clicks the \"Yes\" button at the confirmation dialog. Kind : static method of confirmationDialog Param Type Description [timeout] Number The timeout to wait (default value: 30 sec). Example await ui5 . confirmationDialog . clickNo ();","title":"confirmationDialog.clickNo([timeout])"},{"location":"doc/#confirmationdialogclickcreatetimeout","text":"Clicks the create button in the confirmation dialog Kind : static method of confirmationDialog Param Type Description [timeout] Number The timeout to wait (default value: 30 sec). Example await ui5 . confirmationDialog . clickCreate ();","title":"confirmationDialog.clickCreate([timeout])"},{"location":"doc/#confirmationdialogclickdeletetimeout","text":"Clicks the \"Delete\" button at the confirmation dialog. Kind : static method of confirmationDialog Param Type Description [timeout] Number The timeout to wait (default value: 30 sec). Example await ui5 . confirmationDialog . clickDelete ();","title":"confirmationDialog.clickDelete([timeout])"},{"location":"doc/#confirmationdialogclickrevokeapprovaltimeout","text":"Clicks the \"Revoke Approval\" button at the confirmation dialog. Kind : static method of confirmationDialog Param Type Description [timeout] Number The timeout to wait (default value: 30 sec). Example await ui5 . confirmationDialog . clickRevokeApproval ();","title":"confirmationDialog.clickRevokeApproval([timeout])"},{"location":"doc/#ui5control","text":"Kind : static class of ui5 .control .execute(callbackFunction, selectorOrElement, args) .getProperty(elem, propertyName) .getAggregationProperty(elem, propertyName) .getAssociationProperty(elem, propertyName) .getBindingContextPathProperty(elem) .getPropertyBinding(elem, propertyName) \u21d2 Array","title":"ui5.control"},{"location":"doc/#controlexecutecallbackfunction-selectororelement-args","text":"Executes a native UI5 action as callback function in the browser on the given UI5 control. Kind : static method of control Param Type Description callbackFunction function The client script function to be used with the control instance. Caution: The first and last parameter is reserved for the mockserver instance and the promise resolve function - done. selectorOrElement String | Object The selector object or the dom element (retrieved from getDisplayedElement). args Object An object containing the arguments to pass to the callback function. Example const selector = { \"elementProperties\" : { \"metadata\" : \"sap.m.StandardListItem\" , \"id\" : \"*categoryList-7\" }}; const args = { \"property\" : \"text\" }; const title = await ui5 . control . execute ( function ( control , args , done ) { done ( control . getProperty ( args . property )); }, selector , args );","title":"control.execute(callbackFunction, selectorOrElement, args)"},{"location":"doc/#controlgetpropertyelem-propertyname","text":"Gets the UI5 control property of the given element. Kind : static method of control Param Type Description elem Object The element. propertyName String The property name of the control to retrieve the value from. Example const selector = { \"elementProperties\" : { \"metadata\" : \"sap.m.StandardListItem\" , \"mProperties\" : { \"title\" : [{ \"path\" : \"CategoryName\" }] }}; const elem = await ui5 . control . locator . getDisplayedElement ( selector ); const propertyName = \"title\" ; const val = await ui5 . control . getProperty ( elem , propertyName );","title":"control.getProperty(elem, propertyName)"},{"location":"doc/#controlgetaggregationpropertyelem-propertyname","text":"Gets the UI5 control aggregation property of the given element. Kind : static method of control Param Type Description elem Object The element. propertyName String The aggregation property name of the control to retrieve the value from. Example const selector = { \"elementProperties\" : { \"metadata\" : \"sap.m.StandardListItem\" , \"mProperties\" : { \"items\" : [{ \"path\" : \"/Categories\" }] }}; const elem = await ui5 . control . locator . getDisplayedElement ( selector ); const propertyName = \"tooltip\" ; const val = await ui5 . control . getAggregationProperty ( elem , propertyName );","title":"control.getAggregationProperty(elem, propertyName)"},{"location":"doc/#controlgetassociationpropertyelem-propertyname","text":"Get UI control property Kind : static method of control Param Type Description elem Object The element. propertyName String The association property name of the control to retrieve the value from. Example const selector = { \"elementProperties\" : { \"metadata\" : \"sap.m.MultiComboBox\" , \"mProperties\" : {}}; const elem = await ui5 . control . locator . getDisplayedElement ( selector ); const propertyName = \"selectedItems\" ; const propertyValue = await ui5 . control . getAssociationProperty ( elem , propertyName );","title":"control.getAssociationProperty(elem, propertyName)"},{"location":"doc/#controlgetbindingcontextpathpropertyelem","text":"Get UI control binding context path Kind : static method of control Param Type Description elem Object The element. Example const selector = { \"elementProperties\" : { \"metadata\" : \"sap.m.StandardListItem\" , \"mProperties\" : { \"title\" : [{ \"path\" : \"CategoryName\" }] }}; const elem = await ui5 . control . locator . getDisplayedElement ( selector ); const context = await ui5 . control . getBindingContextPathProperty ( elem );","title":"control.getBindingContextPathProperty(elem)"},{"location":"doc/#controlgetpropertybindingelem-propertyname-array","text":"Get UI control property Kind : static method of control Returns : Array - Array of bindings for the specific property Param Type Description elem Object The element. propertyName String The property name to retrieve from the control binding Example const selector = { \"elementProperties\" : { \"metadata\" : \"sap.m.StandardListItem\" , \"mProperties\" : { \"title\" : [{ \"path\" : \"CategoryName\" }] }}; const elem = await ui5 . control . locator . getDisplayedElement ( selector ); const propertyName = \"title\" ; const binding = await ui5 . control . getPropertyBinding ( elem , propertyName );","title":"control.getPropertyBinding(elem, propertyName) \u21d2 Array"},{"location":"doc/#ui5date","text":"Kind : static class of ui5 .date .pick(selector, date, [index]) .pickRange(selector, range, [index]) .fillRange(selector, range, [index])","title":"ui5.date"},{"location":"doc/#datepickselector-date-index","text":"Picks the passed date using the \"DatePicker\" with the given selector. Kind : static method of date Param Type Default Description selector Selector The selector describing the element. date Date The date object. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example const today = await common . date . calculate ( \"today\" ); await ui5 . date . pick ( selector , date );","title":"date.pick(selector, date, [index])"},{"location":"doc/#datepickrangeselector-range-index","text":"Picks the passed date range using the \"DatePicker\" with the given selector. Note that this will only work within the current month! Kind : static method of date Param Type Default Description selector Selector The selector describing the element. range Array.<Object> The array of date objects containing start- and end date. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example const start = await common . date . calculate ( \"2020, 9, 20\" ); const end = await common . date . calculate ( \"2021, 1, 3\" ); const range = [ start , end ]; await ui5 . date . pickRange ( selector , range );","title":"date.pickRange(selector, range, [index])"},{"location":"doc/#datefillrangeselector-range-index","text":"Enters the passed date range to the date input with the given selector by providing the start- and end date. Kind : static method of date Param Type Default Description selector Selector The selector describing the element. range Array.<Object> The array of date objects containing start- and end date. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example const start = await common . date . calculate ( \"2020, 9, 20\" , \"dd.mm.yyyy\" ); const end = await common . date . calculate ( \"2021, 1, 3\" , \"dd.mm.yyyy\" ); const range = [ start , end ]; await ui5 . date . fillRange ( selector , range );","title":"date.fillRange(selector, range, [index])"},{"location":"doc/#ui5element","text":"Kind : static class of ui5 .element .waitForAll(selector, [timeout]) .getAllDisplayed(selector, [timeout]) \u21d2 Array.<Object> .getDisplayed(selector, [index], [timeout]) \u21d2 Object .getByText(selector, value, [index], [timeout]) \u21d2 Object .getByChild(elementSelector, childSelector, [index], [timeout]) \u21d2 Object .getByParent(elementSelector, parentSelector, [index], [timeout]) \u21d2 Object .getId(selector, [index], [timeout]) \u21d2 String .getPropertyValue(selector, property, [index], [timeout]) \u21d2 String .getValue(selector, [index], [timeout]) \u21d2 String .getBindingValue(selector, bindingContext, [index], [timeout]) \u21d2 String .isVisible(selector, [index], [timeout]) \u21d2 Boolean .highlight(selector, [duration], [color])","title":"ui5.element"},{"location":"doc/#elementwaitforallselector-timeout","text":"Waits for all elements matching the given selector. Kind : static method of element Param Type Default Description selector Object The selector describing the elements. [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . element . waitForAll ( selector );","title":"element.waitForAll(selector, [timeout])"},{"location":"doc/#elementgetalldisplayedselector-timeout-arrayobject","text":"Returns the visible elements with the given selector. Kind : static method of element Returns : Array.<Object> - - The found elements. Param Type Default Description selector Object The selector describing the elements. [timeout] Number 30000 The timeout to wait (ms). Example const elem = await ui5 . element . getAllDisplayed ( selector );","title":"element.getAllDisplayed(selector, [timeout]) \u21d2 Array.&lt;Object&gt;"},{"location":"doc/#elementgetdisplayedselector-index-timeout-object","text":"Returns the visible element. Kind : static method of element Returns : Object - The found element. Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elem = await ui5 . element . getDisplayed ( selector );","title":"element.getDisplayed(selector, [index], [timeout]) \u21d2 Object"},{"location":"doc/#elementgetbytextselector-value-index-timeout-object","text":"Returns the element with the given selector and text value. Kind : static method of element Returns : Object - The found element. Param Type Default Description selector Object The selector describing the element. value String The text value of the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elem = await ui5 . element . getByText ( selector , \"Home\" );","title":"element.getByText(selector, value, [index], [timeout]) \u21d2 Object"},{"location":"doc/#elementgetbychildelementselector-childselector-index-timeout-object","text":"Gets an element by its selector and child selector. Can be used as unique combination between element and child properties when multiple elements have the same properties. Note: For nested selectors, all properties except of the \"elementProperties\" are being ignored. Kind : static method of element Returns : Object - The found element. Param Type Default Description elementSelector String The selector describing the requested element. childSelector String The selector describing a child element of the requested element. [index] Number 0 The index of the element (in case the combination applies to more than one element). [timeout] Number 30000 The timeout to wait (ms). Example const elementSelector = { \"elementProperties\" : {...} }; const childSelector = { \"elementProperties\" : {...} }; const elem = await ui5 . element . getByChild ( elementSelector , childSelector );","title":"element.getByChild(elementSelector, childSelector, [index], [timeout]) \u21d2 Object"},{"location":"doc/#elementgetbyparentelementselector-parentselector-index-timeout-object","text":"Gets an element by its selector and parent selector. Can be used as unique combination between element and parent properties when multiple elements have the same properties. Note: For nested selectors, all properties except of the \"elementProperties\" are being ignored. Kind : static method of element Returns : Object - The found element. Param Type Default Description elementSelector String The selector describing the requested element. parentSelector String The selector describing the parent element of the requested element. [index] Number 0 The index of the element (in case the combination applies to more than one element). [timeout] Number 30000 The timeout to wait (ms). Example const elementSelector = { \"elementProperties\" : {...} }; const parentSelector = { \"elementProperties\" : {...} }; const elem = await ui5 . element . getByParent ( elementSelector , parentSelector );","title":"element.getByParent(elementSelector, parentSelector, [index], [timeout]) \u21d2 Object"},{"location":"doc/#elementgetidselector-index-timeout-string","text":"Returns the id of the element with the given selector. Kind : static method of element Returns : String - The id of the element. Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elemId = await ui5 . element . getId ( selector );","title":"element.getId(selector, [index], [timeout]) \u21d2 String"},{"location":"doc/#elementgetpropertyvalueselector-property-index-timeout-string","text":"Returns the UI5 property value of the passed element. Kind : static method of element Returns : String - The property value of the element. Param Type Default Description selector Object The selector describing the element. property String The property of the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elemValue = await ui5 . element . getPropertyValue ( selector , \"text\" );","title":"element.getPropertyValue(selector, property, [index], [timeout]) \u21d2 String"},{"location":"doc/#elementgetvalueselector-index-timeout-string","text":"Returns the inner value of the passed element. Kind : static method of element Returns : String - The value of the element. Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elemValue = await ui5 . element . getValue ( selector );","title":"element.getValue(selector, [index], [timeout]) \u21d2 String"},{"location":"doc/#elementgetbindingvalueselector-bindingcontext-index-timeout-string","text":"Returns the value of the given binding property for a specific element. Kind : static method of element Returns : String - The binding property value. Param Type Default Description selector Object The selector describing the element. bindingContext String The binding property to retrieve. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elemBindingValue = await ui5 . element . getBindingValue ( selector , \"InvoiceGrossAmount\" );","title":"element.getBindingValue(selector, bindingContext, [index], [timeout]) \u21d2 String"},{"location":"doc/#elementisvisibleselector-index-timeout-boolean","text":"Determines if the element is visible. Kind : static method of element Returns : Boolean - The bool value 'true' or 'false' if the element is visible or not. Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const isVisible = await ui5 . element . isVisible ( selector );","title":"element.isVisible(selector, [index], [timeout]) \u21d2 Boolean"},{"location":"doc/#elementhighlightselector-duration-color","text":"Highlights the element with the given selector. Kind : static method of element Param Type Default Description selector Object The selector describing the element. [duration] Number 2000 The duration of the highlighting (ms). [color] String \"red\" The color of the highlighting (CSS color). Example await ui5 . element . highlight ( selector , 3000 , \"green\" );","title":"element.highlight(selector, [duration], [color])"},{"location":"doc/#ui5errordialog","text":"Kind : static class of ui5 .errorDialog .expectToBeVisible() .clickClose()","title":"ui5.errorDialog"},{"location":"doc/#errordialogexpecttobevisible","text":"Expects that the error dialog is visible on the page. Kind : static method of errorDialog Example await ui5 . errorDialog . expectToBeVisible ();","title":"errorDialog.expectToBeVisible()"},{"location":"doc/#errordialogclickclose","text":"Clicks the 'Close' button at the error dialog. Kind : static method of errorDialog Example await ui5 . errorDialog . clickClose ();","title":"errorDialog.clickClose()"},{"location":"doc/#ui5footerbar","text":"Kind : static class of ui5 .footerBar .clickButton(text, [timeout]) .clickApply([timeout]) .clickSave([timeout]) .clickCreate([timeout]) .clickCancel([timeout]) .clickCheck([timeout]) .clickOrder([timeout]) .clickPost([timeout]) .clickAdd([timeout])","title":"ui5.footerBar"},{"location":"doc/#footerbarclickbuttontext-timeout","text":"Clicks the button with the given text at the footer bar. Kind : static method of footerBar Param Type Default Description text String The text of the button. [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickButton ( \"Ok\" );","title":"footerBar.clickButton(text, [timeout])"},{"location":"doc/#footerbarclickapplytimeout","text":"Clicks the 'Apply' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickApply ();","title":"footerBar.clickApply([timeout])"},{"location":"doc/#footerbarclicksavetimeout","text":"Clicks the 'Save' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickSave ();","title":"footerBar.clickSave([timeout])"},{"location":"doc/#footerbarclickcreatetimeout","text":"Clicks the 'Create' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickCreate ();","title":"footerBar.clickCreate([timeout])"},{"location":"doc/#footerbarclickcanceltimeout","text":"Clicks the 'Cancel' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickCancel ();","title":"footerBar.clickCancel([timeout])"},{"location":"doc/#footerbarclickchecktimeout","text":"Clicks the 'Check' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickCheck ();","title":"footerBar.clickCheck([timeout])"},{"location":"doc/#footerbarclickordertimeout","text":"Clicks the 'Order' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickOrder ();","title":"footerBar.clickOrder([timeout])"},{"location":"doc/#footerbarclickposttimeout","text":"Clicks the 'Post' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickPost ();","title":"footerBar.clickPost([timeout])"},{"location":"doc/#footerbarclickaddtimeout","text":"Clicks the 'Add' button at the footer toolbar. Kind : static method of footerBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . footerBar . clickAdd ();","title":"footerBar.clickAdd([timeout])"},{"location":"doc/#ui5mockserver","text":"Kind : static class of ui5 .mockserver .waitForUi5ApplicationLoad(interval) .interactWithMockServer(mockServerPath, fnCallback, oParams) .attachFunctionBefore(method, mockServerPath, fnBeforeCallback, oParams) .attachFunctionAfter(method, mockServerPath, fnAfterCallback, oParams) .addNewRequest(method, mockServerPath, urlPathRegex, responseJsonPath, returnCode, isText, responseMessages, responseLocation) .removeRequest(method, mockServerPath, urlPathRegex) .addOrOverrideRequest(method, mockServerPath, urlPathRegex, responseJsonPath, returnCode, isText, responseMessages, responseLocation) .startMockServer(mockServerPath) .initMockServer(mockServerPath, mockServerOptions) .initApplication(mockServerPath) .stopMockServer(mockServerPath) .loadMockDataFile(filePath, isText) \u21d2 String .getEntitySetData(mockServerPath, entitySetName) \u21d2 Array .setEntitySetData(mockServerPath, entitySetName, entries)","title":"ui5.mockserver"},{"location":"doc/#mockserverwaitforui5applicationloadinterval","text":"Waits for the UI5 framework to load and makes sure XHR request finished und busy indicators are not visible anymore. Kind : static method of mockserver Param Type Description interval Integer The intervals to use when waiting UI5 to load. Example await ui5 . mockserver . waitForUi5ApplicationLoad ( 100 );","title":"mockserver.waitForUi5ApplicationLoad(interval)"},{"location":"doc/#mockserverinteractwithmockservermockserverpath-fncallback-oparams","text":"Execute client script function to enable interaction with mockserver instance [you can write code in ui5 app context] Kind : static method of mockserver Param Type Description mockServerPath String The full path to your mockserver instance fnCallback String | Object The client script function that you can use to interact with your mockserver instance. [Caution] The first and last parameter is reserved (1st param is the mockserver instance and last parameter the promise resolve function - done) oParams String Additional parameters you would like to inject in your client script function Example await ui5 . mockserver . interactWithMockServer ( \"path/to/project/localService/main/mockserver\" , fnCallback , oParams );","title":"mockserver.interactWithMockServer(mockServerPath, fnCallback, oParams)"},{"location":"doc/#mockserverattachfunctionbeforemethod-mockserverpath-fnbeforecallback-oparams","text":"Attaches a callback function in mockserver attachBefore event to be executed Kind : static method of mockserver Param Type Description method String The attachAfter http method [GET or POST]. mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method so the mockserver instance can be consumed]. fnBeforeCallback String | Object The callback function to be used in the native attachBefore method as described (https://sapui5.hana.ondemand.com/#/api/sap.ui.core.ui5.mockserver%23methods/Summary) oParams Object Additional parameters you would like to inject in your client script function Example await ui5 . mockserver . attachFunctionBefore ( \"GET\" , \"path/to/project/localService/main/mockserver\" , fnBeforeCallback , oParams );","title":"mockserver.attachFunctionBefore(method, mockServerPath, fnBeforeCallback, oParams)"},{"location":"doc/#mockserverattachfunctionaftermethod-mockserverpath-fnaftercallback-oparams","text":"Attaches a callback function in mockserver attachAfter event to be executed Kind : static method of mockserver Param Type Description method String The attachAfter http method [GET or POST]. mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method so the mockserver instance can be consumed]. fnAfterCallback String | Object The callback function to be used in the native attachAfter method as described (https://sapui5.hana.ondemand.com/#/api/sap.ui.core.ui5.mockserver%23methods/Summary) oParams Object Additional parameters you would like to inject in your client script function Example await ui5 . mockserver . attachFunctionAfter ( \"GET\" , \"path/to/project/localService/main/mockserver\" , fnAfterCallback );","title":"mockserver.attachFunctionAfter(method, mockServerPath, fnAfterCallback, oParams)"},{"location":"doc/#mockserveraddnewrequestmethod-mockserverpath-urlpathregex-responsejsonpath-returncode-istext-responsemessages-responselocation","text":"Adds new mock request Kind : static method of mockserver Param Type Description method String The http method [GET,POST..]. mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. urlPathRegex String The url path regex to filter the requests responseJsonPath String The json object or the path to your json file to be used as response [use relative path from the html page started]. returnCode Integer The http response code to simulate for this mock request. isText Boolean If true then content type is text/plain otherwise application/json. responseMessages String Mocks the gw sap-message response messages [Don't forget to stringify your json before: JSON.stringify(msg)] responseLocation String Mocks the location response messages header Example await ui5 . mockserver . addNewRequest ( \"GET\" , \"path/to/project/localService/main/mockserver\" , \"*.Headers.*\" , \"path/to/project/localService/main/mockdata/test.json\" , 200 , true , JSON . stringify ( msg ));","title":"mockserver.addNewRequest(method, mockServerPath, urlPathRegex, responseJsonPath, returnCode, isText, responseMessages, responseLocation)"},{"location":"doc/#mockserverremoverequestmethod-mockserverpath-urlpathregex","text":"Removes request mock [Doesn't work currently - Mockserver bug] Kind : static method of mockserver Param Type Description method String The http method [GET,POST..]. mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. urlPathRegex String The url path regex to filter the requests Example await ui5 . mockserver . removeRequest ( \"GET\" , \"path/to/project/localService/main/mockserver\" , \"*.Headers.*\" );","title":"mockserver.removeRequest(method, mockServerPath, urlPathRegex)"},{"location":"doc/#mockserveraddoroverriderequestmethod-mockserverpath-urlpathregex-responsejsonpath-returncode-istext-responsemessages-responselocation","text":"Adds new or overrides an existing mock request Kind : static method of mockserver Param Type Description method String The http method [GET,POST..]. mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. urlPathRegex String The url path regex to filter the requests responseJsonPath String The json object or the path to your json file to be used as response [use relative path from the html page started]. returnCode Integer The http response code to simulate for this mock request. isText Boolean If true then content type is text/plain otherwise application/json. responseMessages String Mocks the gw sap-message response messages [Don't forget to stringify your json before: JSON.stringify(msg)] responseLocation String Mocks the location response messages header Example await ui5 . mockserver . addOrOverrideRequest ( \"GET\" , \"path/to/project/localService/main/mockserver\" , \"*.Headers.*\" , \"path/to/project/localService/main/mockdata/test.json\" , 200 , true , JSON . stringify ( msg ));","title":"mockserver.addOrOverrideRequest(method, mockServerPath, urlPathRegex, responseJsonPath, returnCode, isText, responseMessages, responseLocation)"},{"location":"doc/#mockserverstartmockservermockserverpath","text":"(Re-)Starts mock server instance Kind : static method of mockserver Param Type Description mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. Example await ui5 . mockserver . startMockServer ( \"path/to/project/localService/main/mockserver\" );","title":"mockserver.startMockServer(mockServerPath)"},{"location":"doc/#mockserverinitmockservermockserverpath-mockserveroptions","text":"Initializes the provide mockserver instance on the fly Kind : static method of mockserver Param Type Description mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. mockServerOptions String The mock server options Example await ui5 . mockserver . initMockServer ( \"path/to/project/localService/main/mockserver\" , mockServerOptions );","title":"mockserver.initMockServer(mockServerPath, mockServerOptions)"},{"location":"doc/#mockserverinitapplicationmockserverpath","text":"Initializes the application [Used in the beggining of script, once the mockserver is fully initialized and request mocking is done] Kind : static method of mockserver Param Type Description mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. Example await ui5 . mockserver . initApplication ( \"path/to/project/localService/main/mockserver\" );","title":"mockserver.initApplication(mockServerPath)"},{"location":"doc/#mockserverstopmockservermockserverpath","text":"Stops the mockserver instance Kind : static method of mockserver Param Type Description mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. Example await ui5 . mockserver . stopMockServer ( \"path/to/project/localService/main/mockserver\" );","title":"mockserver.stopMockServer(mockServerPath)"},{"location":"doc/#mockserverloadmockdatafilefilepath-istext-string","text":"Loads a mock data file Kind : static method of mockserver Returns : String - The json object Param Type Description filePath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. isText Boolean If true then content type is text/plain otherwise application/json. Example await ui5 . mockserver . loadMockDataFile ( \"path/to/project/mockData/myData.json\" , true );","title":"mockserver.loadMockDataFile(filePath, isText) \u21d2 String"},{"location":"doc/#mockservergetentitysetdatamockserverpath-entitysetname-array","text":"Retrieves entity data Kind : static method of mockserver Returns : Array - An array of json objects Param Type Description mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. entitySetName String The entity set name Example await ui5 . mockserver . getEntitySetData ( \"path/to/project/localService/main/mockserver\" , \"Headers\" );","title":"mockserver.getEntitySetData(mockServerPath, entitySetName) \u21d2 Array"},{"location":"doc/#mockserversetentitysetdatamockserverpath-entitysetname-entries","text":"Override entity data entries Kind : static method of mockserver Param Type Description mockServerPath String The full path to your mockserver file [make sure you implemented getMockServer method in this file to return the mockserver instance]. entitySetName String The entity name entries String The json object to be used as data to be inserted [use relative path from the html page started]. Example await ui5 . mockserver . setEntitySetData ( \"path/to/project/localService/main/mockserver\" , \"Headers\" , entries );","title":"mockserver.setEntitySetData(mockServerPath, entitySetName, entries)"},{"location":"doc/#ui5navigation","text":"Kind : static class of ui5 .navigation .navigateToApplication(intent, [preventPopups], [verify], [refresh]) .navigateToApplicationAndRetry(intent, [preventPopups], [verify], [retries], [interval]) .navigateToSystemAndApplication(system, intent, [closePopups], [verify]) .navigateToSystemAndApplicationAndRetry(system, intent, [closePopups], [verify], [retries], [interval]) .navigateToApplicationWithQueryParams(intent, queryParams, [preventPopups], [verify]) .navigateToApplicationWithQueryParamsAndRetry(intent, queryParams, [preventPopups], [verify], [retries], [interval]) .closePopups([timeout]) .expectUnsupportedNavigationPopup(navigationTarget)","title":"ui5.navigation"},{"location":"doc/#navigationnavigatetoapplicationintent-preventpopups-verify-refresh","text":"Navigates to the application via the passed intent. The intent will be added to the baseUrl maintained in the config. Kind : static method of navigation Param Type Default Description intent String The intent of the application. [preventPopups] Boolean false Specifies if random popup appearance should be prevented. [verify] Boolean false Specifies if the url should be asserted after the navigation. [refresh] Boolean false Refresh the page after navigation. Example await ui5 . navigation . navigateToApplication ( \"PurchaseOrder-manage\" );","title":"navigation.navigateToApplication(intent, [preventPopups], [verify], [refresh])"},{"location":"doc/#navigationnavigatetoapplicationandretryintent-preventpopups-verify-retries-interval","text":"Navigates to the application via the passed intent, and retries in case it fails. Kind : static method of navigation Param Type Default Description intent String The intent of the app. [preventPopups] Boolean false Specifies if random popup appearance should be prevented. Might not work for specific popups. [verify] Boolean false Specifies if the url should be asserted after the navigation. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . navigation . navigateToApplicationAndRetry ( \"PurchaseOrder-manage\" );","title":"navigation.navigateToApplicationAndRetry(intent, [preventPopups], [verify], [retries], [interval])"},{"location":"doc/#navigationnavigatetosystemandapplicationsystem-intent-closepopups-verify","text":"Navigates within the passed system to the application via the passed intent. Kind : static method of navigation Param Type Default Description system String The system url. intent String The intent of the application. [closePopups] Boolean false Specifies if random popups should be closed after the navigation. [verify] Boolean false Specifies if the url should be asserted after the navigation. Example await ui5 . navigation . navigateToSystemAndApplication ( \"yourFioriLaunchpad.domain\" , \"PurchaseOrder-manage\" );","title":"navigation.navigateToSystemAndApplication(system, intent, [closePopups], [verify])"},{"location":"doc/#navigationnavigatetosystemandapplicationandretrysystem-intent-closepopups-verify-retries-interval","text":"Navigates within the passed system to the application via the passed intent, and retries in case it fails. Kind : static method of navigation Param Type Default Description system String The system url. intent String The intent of the application. [closePopups] Boolean false Specifies if random popups should be closed after the navigation. [verify] Boolean false Specifies if the url should be asserted after the navigation. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . navigation . navigateToSystemAndApplicationAndRetry ( \"yourFioriLaunchpad.domain\" , \"PurchaseOrder-manage\" );","title":"navigation.navigateToSystemAndApplicationAndRetry(system, intent, [closePopups], [verify], [retries], [interval])"},{"location":"doc/#navigationnavigatetoapplicationwithqueryparamsintent-queryparams-preventpopups-verify","text":"Navigates to the application with the passed queryParams via the passed intent. Kind : static method of navigation Param Type Default Description intent String The intent of the app. queryParams String [OPTIONAL] Add url query params. [preventPopups] Boolean false Specifies if random popup appearance should be prevented. [verify] Boolean false Specifies if the url should be asserted after the navigation. Example const intent = \"PurchaseOrder-manage\" const queryParams = \"?sap-language=EN&responderOn=true\" ; await ui5 . navigation . navigateToApplicationWithQueryParams ( intent , queryParams );","title":"navigation.navigateToApplicationWithQueryParams(intent, queryParams, [preventPopups], [verify])"},{"location":"doc/#navigationnavigatetoapplicationwithqueryparamsandretryintent-queryparams-preventpopups-verify-retries-interval","text":"Navigates to the application via the passed intent, and retries in case it fails. Kind : static method of navigation Param Type Default Description intent String The intent of the app. queryParams String [OPTIONAL] Add url query params. [preventPopups] Boolean false Specifies if random popup appearance should be prevented. [verify] Boolean false Specifies if the url should be asserted after the navigation. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example const intent = \"PurchaseOrder-manage\" const queryParams = \"?sap-language=EN&responderOn=true\" ; await ui5 . navigation . navigateToApplicationWithQueryParamsAndRetry ( intent , queryParams );","title":"navigation.navigateToApplicationWithQueryParamsAndRetry(intent, queryParams, [preventPopups], [verify], [retries], [interval])"},{"location":"doc/#navigationclosepopupstimeout","text":"Closes all popups if they occur after navigating to a specific page. Kind : static method of navigation Param Type Default Description [timeout] Integer 15000 The timeout to wait. Example await ui5 . navigation . closePopups ();","title":"navigation.closePopups([timeout])"},{"location":"doc/#navigationexpectunsupportednavigationpopupnavigationtarget","text":"Expects navigation to an app that is not supported. This can be the case for Mocked tests when the application does not exist or when the app is not included in a role. Kind : static method of navigation Param Type Description navigationTarget String The selector describing the element. Example await ui5 . navigation . expectUnsupportedNavigationPopup ( \"#SupplierInvoice-display?FiscalYear=1234&SupplierInvoice=1234567890\" );","title":"navigation.expectUnsupportedNavigationPopup(navigationTarget)"},{"location":"doc/#ui5navigationbar","text":"Kind : static class of ui5 .navigationBar .clickBack([timeout]) .clickSapLogo([timeout]) .clickUserIcon([timeout]) .expectPageTitle(compareValue) .expectShellHeader([timeout])","title":"ui5.navigationBar"},{"location":"doc/#navigationbarclickbacktimeout","text":"Navigates one layer back. Kind : static method of navigationBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . navigationBar . clickBack ();","title":"navigationBar.clickBack([timeout])"},{"location":"doc/#navigationbarclicksaplogotimeout","text":"Clicks at the SAP Logo. Kind : static method of navigationBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . navigationBar . clickSapLogo ();","title":"navigationBar.clickSapLogo([timeout])"},{"location":"doc/#navigationbarclickusericontimeout","text":"Clicks at the Account Icon. Kind : static method of navigationBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . navigationBar . clickUserIcon ();","title":"navigationBar.clickUserIcon([timeout])"},{"location":"doc/#navigationbarexpectpagetitlecomparevalue","text":"Expects the page title of the current page to be the compare value. Kind : static method of navigationBar Param Type Description compareValue String The compare value. Example await ui5 . navigationBar . expectPageTitle ( \"Home\" );","title":"navigationBar.expectPageTitle(compareValue)"},{"location":"doc/#navigationbarexpectshellheadertimeout","text":"Expects the shell header to be visible Kind : static method of navigationBar Param Type Default Description [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . navigationBar . expectShellHeader ();","title":"navigationBar.expectShellHeader([timeout])"},{"location":"doc/#ui5qunit","text":"Kind : static class of ui5","title":"ui5.qunit"},{"location":"doc/#qunitexecutetestspath","text":"Executes QUnit & OPA5 tests. Qmate acts like a runner. Kind : static method of qunit Param Type Description path String Relative path to the QUnit/OPA5 html file. Example await ui5 . qunit . executeTests ( \"path/to/qunit.html\" );","title":"qunit.executeTests(path)"},{"location":"doc/#ui5session","text":"Kind : static class of ui5 .session .login(username, [password], [verify], [timeout]) .loginFiori(username, [password], [verify]) .loginSapCloud(username, [password], [verify]) .loginCustom(username, [password], usernameFieldSelector, passwordFieldSelector, logonButtonSelector, [verify]) .loginCustomViaConfig(username, password, [verify]) .logout([verify]) .switchUser(username, [password], [authenticator], [wait]) .expectLogoutText()","title":"ui5.session"},{"location":"doc/#sessionloginusername-password-verify-timeout","text":"Login with specific username and password. This function works for both fiori and sap-cloud login. Kind : static method of session Param Type Default Description username String The username. [password] String \"Welcome1!\" The password. [verify] Boolean false Specifies if the function will check the shell header after logging in. [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . session . login ( \"PURCHASER\" ); Example await ui5 . session . login ( \"JOHN_DOE\" , \"abc123!\" , true );","title":"session.login(username, [password], [verify], [timeout])"},{"location":"doc/#sessionloginfioriusername-password-verify","text":"Login with fioriForm and specific username and password. Kind : static method of session Param Type Default Description username String The username. [password] String \"Welcome1!\" The password. [verify] Boolean false Specifies if the function will check the shell header after logging in. Example await ui5 . session . loginFiori ( \"john\" , \"abc123!\" );","title":"session.loginFiori(username, [password], [verify])"},{"location":"doc/#sessionloginsapcloudusername-password-verify","text":"Login with sapCloud form and specific username and password. Kind : static method of session Param Type Default Description username String The username. [password] String \"Welcome1!\" The password. [verify] Boolean false Specifies if the function will check the shell header after logging in. Example await ui5 . session . loginSapCloud ( \"john\" , \"abc123!\" );","title":"session.loginSapCloud(username, [password], [verify])"},{"location":"doc/#sessionlogincustomusername-password-usernamefieldselector-passwordfieldselector-logonbuttonselector-verify","text":"Login with custom form and specific username and password. Kind : static method of session Param Type Default Description username String The username. [password] String \"Welcome1!\" The password. usernameFieldSelector String The CSS selector of the username field. passwordFieldSelector String The CSS selector of the password field. logonButtonSelector String The CSS selector of the login button. [verify] Boolean false Specifies if the function will check the shell header after logging in. Example await ui5 . session . loginCustom ( \"JOHN_DOE\" , \"abc123!\" , \"#username\" , # password , \"#logon\" );","title":"session.loginCustom(username, [password], usernameFieldSelector, passwordFieldSelector, logonButtonSelector, [verify])"},{"location":"doc/#sessionlogincustomviaconfigusername-password-verify","text":"Login with specific username and password. The selectors will be taken from the config. Kind : static method of session Param Type Default Description username String The username. Can be specified in spec or config. If specified in both credentials will be taken from config. password String \"Welcome1!\" The password. Can be specified in spec or config. If specified in both credentials will be taken from config. [verify] Boolean false Specifies if the function will check the shell header after logging in. Example // config - SAMPLE 1 auth : { formType : 'plain' , usernameFieldSelector : \"#USERNAME_BLOCK input\" , passwordFieldSelector : \"#PASSWORD_BLOCK input\" , logonButtonSelector : \"#LOGIN_LINK\" }, // spec await ui5 . session . loginCustomViaConfig ( \"JOHN_DOE\" , \"abc123!\" ); // config - SAMPLE 2 auth : { formType : \"plain\" , username : \"PURCH_EXT\" , password : \"Welcome1!\" , usernameFieldSelector : \"#USERNAME_BLOCK input\" , passwordFieldSelector : \"#PASSWORD_BLOCK input\" , logonButtonSelector : \"#LOGIN_LINK\" }, // spec await ui5 . session . loginCustomViaConfig ();","title":"session.loginCustomViaConfig(username, password, [verify])"},{"location":"doc/#sessionlogoutverify","text":"Logs the user out. Kind : static method of session Param Type Default Description [verify] Boolean \"true\" Specifies if the function will check the logout text after logging out. Set this to false if the system does not show the text after logging out. Example await ui5 . session . logout ();","title":"session.logout([verify])"},{"location":"doc/#sessionswitchuserusername-password-authenticator-wait","text":"switches the user according to the passed username and password. Kind : static method of session Param Type Default Description username String The username. [password] String \"Welcome1!\" The password. [authenticator] Object The login form type. Set to null to use generic login. [wait] Number 10000 The waiting time between logout and login (ms). Example await ui5 . session . switchUser ( \"PURCHASER\" ); Example const authenticator = ui5 . authenticators . fioriForm ; await ui5 . session . switchUser ( \"PURCHASER\" , \"Welcome1!\" , authenticator , 30000 );","title":"session.switchUser(username, [password], [authenticator], [wait])"},{"location":"doc/#sessionexpectlogouttext","text":"Expects the logout text after logout to be \"You have been logged off. This is essential for chaining scripts, so that no static browser sleep in the spec itself is required anymore. Kind : static method of session Example await ui5 . session . expectLogoutText ();","title":"session.expectLogoutText()"},{"location":"doc/#ui5table","text":"Kind : static class of ui5 .table .sortColumnAscending(columnName, [tableSelector]) .sortColumnDescending(columnName, [tableSelector]) .clickSettingsButton([tableSelector])","title":"ui5.table"},{"location":"doc/#tablesortcolumnascendingcolumnname-tableselector","text":"Sorts the given column \"Ascending\". Kind : static method of table Param Type Description columnName String The name of the column to sort. [tableSelector] Object The selector describing the table element (in case there are more then one). Example await ui5 . table . sortColumnAscending ( \"Supplier\" ); Example const glAccountItemsTable = { \"elementProperties\" : { \"viewName\" : \"ui.s2p.mm.supplinvoice.manage.s1.view.S1\" , \"metadata\" : \"sap.m.Table\" , \"id\" : \"*idS2P.MM.MSI.TableGLAccountItems\" } }; await ui5 . table . sortColumnAscending ( \"Amount\" , glAccountItemsTable );","title":"table.sortColumnAscending(columnName, [tableSelector])"},{"location":"doc/#tablesortcolumndescendingcolumnname-tableselector","text":"Sorts the given column \"Descending\". Kind : static method of table Param Type Description columnName String The name of the column to sort. [tableSelector] Object The selector describing the table element (in case there are more then one). Example await ui5 . table . sortColumnDescending ( \"Supplier\" ); Example const glAccountItemsTable = { \"elementProperties\" : { \"viewName\" : \"ui.s2p.mm.supplinvoice.manage.s1.view.S1\" , \"metadata\" : \"sap.m.Table\" , \"id\" : \"*idS2P.MM.MSI.TableGLAccountItems\" } }; await ui5 . table . sortColumnDescending ( \"Amount\" , glAccountItemsTable );","title":"table.sortColumnDescending(columnName, [tableSelector])"},{"location":"doc/#tableclicksettingsbuttontableselector","text":"Opens the user Settings. Kind : static method of table Param Type Description [tableSelector] Object The selector describing the table element (in case there are more then one). Example await ui5 . table . clickSettingsButton (); Example const glAccountItemsTable = { \"elementProperties\" : { \"viewName\" : \"ui.s2p.mm.supplinvoice.manage.s1.view.S1\" , \"metadata\" : \"sap.m.Table\" , \"id\" : \"*idS2P.MM.MSI.TableGLAccountItems\" } }; await ui5 . table . clickSettingsButton ( glAccountItemsTable );","title":"table.clickSettingsButton([tableSelector])"},{"location":"doc/#ui5userinteraction","text":"Kind : static class of ui5 .userInteraction .click(selector, [index], [timeout]) .clickAndRetry(selector, [index], [timeout], [retries], [interval]) .clickTab(selector, [index], [timeout]) .clickListItem(selector, [index], [timeout]) .fill(selector, value, [index], [timeout]) .fillAndRetry(selector, value, [index], [timeout], [retries], [interval]) .clear(selector, [index], [timeout]) .clearAndRetry(selector, [index], [timeout], [retries], [interval]) .clearAndFill(selector, value, [index], [timeout]) .clearAndFillAndRetry(selector, value, [index], [timeout], [retries], [interval], [verify]) .clearSmartFieldInput(selector, [index], [timeout]) .clearAndFillSmartFieldInput(selector, value, [index], [timeout]) .clearAndFillSmartFieldInputAndRetry(selector, value, [index], [timeout], [retries], [interval]) .selectBox(selector, value, [index]) .selectComboBox(selector, value, [index]) .selectMultiComboBox(selector, values, [index]) .clickSelectArrow(selector, [index]) .clickSelectArrowAndRetry(selector, [index], [retries], [interval]) .mouseOverElement(selector, [index], [timeout]) .scrollToElement(selector, [index], [alignment], [timeout]) .selectAll([selector], [index], [timeout]) .openF4Help(selector, [index], [timeout], useF4Key) .searchFor(selector, [index], [timeout], useEnter) .resetSearch(selector, [index], [timeout]) .doubleClick(selector, [index], [timeout]) .rightClick(selector, [index], [timeout])","title":"ui5.userInteraction"},{"location":"doc/#userinteractionclickselector-index-timeout","text":"Clicks on the element with the given selector. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . click ( selector );","title":"userInteraction.click(selector, [index], [timeout])"},{"location":"doc/#userinteractionclickandretryselector-index-timeout-retries-interval","text":"Clicks on the element with the given selector and retries the action in case of a failure. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . userInteraction . clickAndRetry ( selector );","title":"userInteraction.clickAndRetry(selector, [index], [timeout], [retries], [interval])"},{"location":"doc/#userinteractionclicktabselector-index-timeout","text":"Clicks on the tab with the given selector and checks if the tab got selected successfully. The function retries the click for maximal 3 times if the selection of the tab (blue underline) was not successful. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . clickTab ( selector );","title":"userInteraction.clickTab(selector, [index], [timeout])"},{"location":"doc/#userinteractionclicklistitemselector-index-timeout","text":"Clicks or opens the list item with the given selector (e.g. ColumnListItem, StandardListItem). In some cases the default click function is not working correctly (clicks an element within the list item). Therefore we recommend to use this function to open a specific list item. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . clickListItem ( selector );","title":"userInteraction.clickListItem(selector, [index], [timeout])"},{"location":"doc/#userinteractionfillselector-value-index-timeout","text":"Fills the input field with the given selector. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to fill. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . fill ( selector , \"My Value\" );","title":"userInteraction.fill(selector, value, [index], [timeout])"},{"location":"doc/#userinteractionfillandretryselector-value-index-timeout-retries-interval","text":"Fills the input field with the given selector and retries the action in case of a failure. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to fill. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . userInteraction . fillAndRetry ( selector , \"My Value\" );","title":"userInteraction.fillAndRetry(selector, value, [index], [timeout], [retries], [interval])"},{"location":"doc/#userinteractionclearselector-index-timeout","text":"Clears the input with the given selector. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . clear ( selector );","title":"userInteraction.clear(selector, [index], [timeout])"},{"location":"doc/#userinteractionclearandretryselector-index-timeout-retries-interval","text":"Clears the input with the given selector and retries the action in case of a failure Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . userInteraction . clearAndRetry ( selector );","title":"userInteraction.clearAndRetry(selector, [index], [timeout], [retries], [interval])"},{"location":"doc/#userinteractionclearandfillselector-value-index-timeout","text":"Clears the input field with the given selector and fills the given value. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to fill. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . clearAndFill ( selector , \"My Value\" );","title":"userInteraction.clearAndFill(selector, value, [index], [timeout])"},{"location":"doc/#userinteractionclearandfillandretryselector-value-index-timeout-retries-interval-verify","text":"Clears the input field with the given selector and fills the given value. Retries the action in case of a failure. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to fill. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. [verify] Boolean true Specifies if the filled value should be verified. Example await ui5 . userInteraction . clearAndFillAndRetry ( selector , \"My Value\" );","title":"userInteraction.clearAndFillAndRetry(selector, value, [index], [timeout], [retries], [interval], [verify])"},{"location":"doc/#userinteractionclearsmartfieldinputselector-index-timeout","text":"Clears the smart filed with the given selector. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . clearSmartFieldInput ( selector );","title":"userInteraction.clearSmartFieldInput(selector, [index], [timeout])"},{"location":"doc/#userinteractionclearandfillsmartfieldinputselector-value-index-timeout","text":"Clears the smart filed with the given selector and fills the given value. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to fill. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . clearAndFillSmartFieldInput ( selector , \"My Value\" );","title":"userInteraction.clearAndFillSmartFieldInput(selector, value, [index], [timeout])"},{"location":"doc/#userinteractionclearandfillsmartfieldinputandretryselector-value-index-timeout-retries-interval","text":"Clears the smart filed with the given selector and fills the given value and retries the action in case of a failure. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to fill. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . userInteraction . clearAndFillSmartFieldInputAndRetry ( selector , \"My Value\" );","title":"userInteraction.clearAndFillSmartFieldInputAndRetry(selector, value, [index], [timeout], [retries], [interval])"},{"location":"doc/#userinteractionselectboxselector-value-index","text":"Selects the passed value of the Select box. Please note that the function will only work for the default select Box. In special cases, please use the clickSelectArrow function. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to select. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example await ui5 . userInteraction . selectBox ( selector , \"Germany\" );","title":"userInteraction.selectBox(selector, value, [index])"},{"location":"doc/#userinteractionselectcomboboxselector-value-index","text":"Selects the passed value from the ComboBox with the given selector. Please note that the function will only work for the default ComboBox. In special cases you need to use the 'clickSelectArrow' function. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. value String The value to select. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example await ui5 . userInteraction . selectComboBox ( selector , \"Germany\" );","title":"userInteraction.selectComboBox(selector, value, [index])"},{"location":"doc/#userinteractionselectmulticomboboxselector-values-index","text":"Selects the passed values of the MultiComboBox with the given selector. Please note that the function will only work for the default MultiComboBox. In special cases, please use the clickSelectArrow function. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. values Array The values to select. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example await ui5 . userInteraction . selectMultiComboBox ( selector , [ \"Option 1\" , \"Option 2\" ]);","title":"userInteraction.selectMultiComboBox(selector, values, [index])"},{"location":"doc/#userinteractionclickselectarrowselector-index","text":"Clicks the arrow icon at the passed selector (select box). Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). Example await ui5 . userInteraction . clickSelectArrow ( selector );","title":"userInteraction.clickSelectArrow(selector, [index])"},{"location":"doc/#userinteractionclickselectarrowandretryselector-index-retries-interval","text":"Clicks the arrow icon at the passed selector (select box), and retries in case it fails. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example await ui5 . userInteraction . clickSelectArrowAndRetry ( selector );","title":"userInteraction.clickSelectArrowAndRetry(selector, [index], [retries], [interval])"},{"location":"doc/#userinteractionmouseoverelementselector-index-timeout","text":"Moves the cursor/focus to the element with the given selector. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . mouseOverElement ( selector );","title":"userInteraction.mouseOverElement(selector, [index], [timeout])"},{"location":"doc/#userinteractionscrolltoelementselector-index-alignment-timeout","text":"Scrolls to the element with the given selector to get it into view. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [alignment] String \"center\" Defines vertical/horizontal alignment. One of \"start\", \"center\", \"end\", or \"nearest\". Affects the alignToTop parameter of scrollIntoView function. By default, it takes 'up' [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . scrollToElement ( selector ); Example await ui5 . userInteraction . scrollToElement ( selector , 0 , \"start\" , 5000 );","title":"userInteraction.scrollToElement(selector, [index], [alignment], [timeout])"},{"location":"doc/#userinteractionselectallselector-index-timeout","text":"Performs \"select all\" (ctrl + a) at the element with the given selector. Kind : static method of userInteraction Param Type Default Description [selector] Object The selector describing the element. [index] Number 0 The index of the selector, in case there are more than one elements visible at the same time. [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . selectAll ( selector );","title":"userInteraction.selectAll([selector], [index], [timeout])"},{"location":"doc/#userinteractionopenf4helpselector-index-timeout-usef4key","text":"Opens the F4-help of the element with the given selector. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). useF4Key Boolean Specifies if the help is opened by pressing the F4-key or via the button. The default value is true (triggered by pressing the F4-key). Set \"useF4Key\" to false, to trigger the search by clicking the button. Example await ui5 . userInteraction . openF4Help ( selector , 0 , 30000 , false );","title":"userInteraction.openF4Help(selector, [index], [timeout], useF4Key)"},{"location":"doc/#userinteractionsearchforselector-index-timeout-useenter","text":"Searches for the passed value and executes the search. In case that the search is already filled, it will reset the field first. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). useEnter Boolean Specifies if the search is triggered by pressing the Enter-key or via the search button. The default value is true (triggered by pressing the Enter-key). Set \"useEnter\" to false, to trigger the search by clicking the search button. Example await ui5 . userInteraction . searchFor ( selector , \"My Value\" , 0 , 30000 , false );","title":"userInteraction.searchFor(selector, [index], [timeout], useEnter)"},{"location":"doc/#userinteractionresetsearchselector-index-timeout","text":"Resets the search field. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . resetSearch ( selector );","title":"userInteraction.resetSearch(selector, [index], [timeout])"},{"location":"doc/#userinteractiondoubleclickselector-index-timeout","text":"Double Clicks on the passed element. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await ui5 . userInteraction . doubleClick ( selector );","title":"userInteraction.doubleClick(selector, [index], [timeout])"},{"location":"doc/#userinteractionrightclickselector-index-timeout","text":"Right Clicks on the passed element. Kind : static method of userInteraction Param Type Default Description selector Object The selector describing the element. [index] Number 0 The index of the selector (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example const elem = await nonUi5 . element . getById ( \"button01\" ); await ui5 . userInteraction . rightClick ( elem );","title":"userInteraction.rightClick(selector, [index], [timeout])"},{"location":"doc/#nonui5","text":"Global namespace for non UI5 modules. Kind : global constant nonUi5 .assertion .expectAttributeToBe(elem, compareValue, [attribute]) .expectAttributeToContain(elem, compareValue, [attribute]) .expectValueToBe(elem, compareValue) .expectToBeVisible(element) .expectToBeNotVisible(element, [timeout]) .element .waitForAll(selector, [timeout]) .waitToBePresent(selector, [timeout]) .waitToBeVisible(selector, [timeout]) .waitToBeClickable(selector, [timeout]) .getAllDisplayed(selector, [timeout]) \u21d2 Array.<Object> .getAll(selector, [timeout]) .getByCss(selector, [index], [timeout], [includeHidden]) \u21d2 Object .getByCssContainingText(selector, [text], [index], [timeout], [includeHidden]) \u21d2 Object .getById(id, [timeout], [includeHidden]) \u21d2 Object .getByClass(elemClass, [index], [timeout], [includeHidden]) \u21d2 Object .getByName(name, [index], [timeout], [includeHidden]) \u21d2 Object .getByXPath(xpath, [index], [timeout], [includeHidden]) \u21d2 Object .getByChild(elementSelector, childSelector, [index], [timeout], [includeHidden]) \u21d2 Object .getByParent(elementSelector, parentSelector, [index], [timeout], [includeHidden]) \u21d2 Object .isVisible(element, [strict]) \u21d2 Boolean .isPresent(elem) \u21d2 Boolean .isPresentByCss(css, [index], [timeout]) \u21d2 boolean .isPresentByXPath(xpath, [index], [timeout]) \u21d2 boolean .getAttributeValue(elem, [attribute]) \u21d2 String .getValue(elem) \u21d2 String .setInnerHTML(elem) \u21d2 String .highlight(elem, [duration], [color]) ~~ .switchToIframe(selector) ~~ ~~ .switchToDefaultContent() ~~ .navigation .navigateToApplication(relativeReference, [refresh]) .userInteraction .click(element, [timeout]) .clickAndRetry(element, [timeout], [retries], [interval]) .doubleClick(element, [timeout]) .rightClick(element, [timeout]) .fill(element, value) .fillAndRetry(element, value, [retries], [interval]) .clear(element) .clearAndRetry(element, [retries], [interval]) .clearAndFill(element, value) .clearAndFillAndRetry(element, value, [retries], [interval], [verify]) .mouseOverElement(element, [xOffset], [yOffset]) .scrollToElement(elem, alignment) .dragAndDrop(element, targetElem) .moveCursorAndClick(element) .clickElementInSvg(svgElem, innerSelector)","title":"nonUi5"},{"location":"doc/#nonui5assertion","text":"Kind : static class of nonUi5 .assertion .expectAttributeToBe(elem, compareValue, [attribute]) .expectAttributeToContain(elem, compareValue, [attribute]) .expectValueToBe(elem, compareValue) .expectToBeVisible(element) .expectToBeNotVisible(element, [timeout])","title":"nonUi5.assertion"},{"location":"doc/#assertionexpectattributetobeelem-comparevalue-attribute","text":"Expects the attributes value of the passed element to be the compare value. Kind : static method of assertion Param Type Description elem Object The element. compareValue String The compare value. [attribute] String The attribute to compare. If not passed, it will compare the inner HTML content of the element. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . assertion . expectAttributeToBe ( elem , \"Save\" ); Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . assertion . expectAttributeToBe ( element , \"Save\" , \"title\" );","title":"assertion.expectAttributeToBe(elem, compareValue, [attribute])"},{"location":"doc/#assertionexpectattributetocontainelem-comparevalue-attribute","text":"Expects the attributes value of the passed element to contain the compare value. Kind : static method of assertion Param Type Description elem Object The element. compareValue String The compare value. [attribute] String The attribute to compare. If not passed, it will compare the inner HTML content of the element. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . assertion . expectAttributeToContain ( element , \"Save\" , \"title\" );","title":"assertion.expectAttributeToContain(elem, compareValue, [attribute])"},{"location":"doc/#assertionexpectvaluetobeelem-comparevalue","text":"Expects the attributes value of the passed element to be the compare value. Kind : static method of assertion Param Type Description elem Object The element. compareValue String The compare value. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . assertion . expectValueToBe ( elem , \"Save\" );","title":"assertion.expectValueToBe(elem, compareValue)"},{"location":"doc/#assertionexpecttobevisibleelement","text":"Expects that the element is visible to the user. Kind : static method of assertion Param Type Description element Object The element. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . assertion . expectToBeVisible ( elem );","title":"assertion.expectToBeVisible(element)"},{"location":"doc/#assertionexpecttobenotvisibleelement-timeout","text":"Expects that the element is not visible to the user. Kind : static method of assertion Param Type Default Description element Object The element. [timeout] Number 30000 The timeout to wait (ms). Recommendation is to lower the timeout since the element is not expected to show up. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . assertion . expectToBeNotVisible ( elem , 5000 );","title":"assertion.expectToBeNotVisible(element, [timeout])"},{"location":"doc/#nonui5element","text":"Kind : static class of nonUi5 .element .waitForAll(selector, [timeout]) .waitToBePresent(selector, [timeout]) .waitToBeVisible(selector, [timeout]) .waitToBeClickable(selector, [timeout]) .getAllDisplayed(selector, [timeout]) \u21d2 Array.<Object> .getAll(selector, [timeout]) .getByCss(selector, [index], [timeout], [includeHidden]) \u21d2 Object .getByCssContainingText(selector, [text], [index], [timeout], [includeHidden]) \u21d2 Object .getById(id, [timeout], [includeHidden]) \u21d2 Object .getByClass(elemClass, [index], [timeout], [includeHidden]) \u21d2 Object .getByName(name, [index], [timeout], [includeHidden]) \u21d2 Object .getByXPath(xpath, [index], [timeout], [includeHidden]) \u21d2 Object .getByChild(elementSelector, childSelector, [index], [timeout], [includeHidden]) \u21d2 Object .getByParent(elementSelector, parentSelector, [index], [timeout], [includeHidden]) \u21d2 Object .isVisible(element, [strict]) \u21d2 Boolean .isPresent(elem) \u21d2 Boolean .isPresentByCss(css, [index], [timeout]) \u21d2 boolean .isPresentByXPath(xpath, [index], [timeout]) \u21d2 boolean .getAttributeValue(elem, [attribute]) \u21d2 String .getValue(elem) \u21d2 String .setInnerHTML(elem) \u21d2 String .highlight(elem, [duration], [color]) ~~ .switchToIframe(selector) ~~ ~~ .switchToDefaultContent() ~~","title":"nonUi5.element"},{"location":"doc/#elementwaitforallselector-timeout_1","text":"Waits until all elements with the given selector are rendered. Will fail if no element is found. Kind : static method of element Param Type Default Description selector Object The CSS selector describing the element. [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . waitForAll ( \".inputField\" );","title":"element.waitForAll(selector, [timeout])"},{"location":"doc/#elementwaittobepresentselector-timeout","text":"Waits until the element with the given selector is present. Kind : static method of element Param Type Default Description selector Object The CSS selector describing the element. [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . waitToBePresent ( \".input01\" ); Example await nonUi5 . element . waitToBePresent ( \"#button12\" ); Example await nonUi5 . element . waitToBePresent ( \"p:first-child\" );","title":"element.waitToBePresent(selector, [timeout])"},{"location":"doc/#elementwaittobevisibleselector-timeout","text":"Waits until the element with the given selector is visible. Kind : static method of element Param Type Default Description selector Object The CSS selector describing the element. [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . waitToBeVisible ( \".input01\" ); Example await nonUi5 . element . waitToBeVisible ( \"#button12\" ); Example await nonUi5 . element . waitToBeVisible ( \"p:first-child\" );","title":"element.waitToBeVisible(selector, [timeout])"},{"location":"doc/#elementwaittobeclickableselector-timeout","text":"Waits until the element with the given selector is clickable. Kind : static method of element Param Type Default Description selector Object The CSS selector describing the element. [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . waitToBeClickable ( \".input01\" ); Example await nonUi5 . element . waitToBeClickable ( \"#button12\" ); Example await nonUi5 . element . waitToBeClickable ( \"p:first-child\" );","title":"element.waitToBeClickable(selector, [timeout])"},{"location":"doc/#elementgetalldisplayedselector-timeout-arrayobject_1","text":"Gets all visible elements with the passed selector. Kind : static method of element Returns : Array.<Object> - The array of elements. Param Type Default Description selector Object The CSS selector describing the element. [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . getAllDisplayed ( \".inputField\" );","title":"element.getAllDisplayed(selector, [timeout]) \u21d2 Array.&lt;Object&gt;"},{"location":"doc/#elementgetallselector-timeout","text":"Returns all elements found by the given selector despite visible or not. Kind : static method of element Param Type Default Description selector Object The CSS selector describing the element. [timeout] Number 30000 The timeout to wait (ms). Example const hiddenElements = await nonUi5 . element . getAll ( \".sapUiInvisibleText\" ); const isPresent = await nonUi5 . element . isPresent ( hiddenElements [ 0 ]); await common . assertion . expectTrue ( isPresent );","title":"element.getAll(selector, [timeout])"},{"location":"doc/#elementgetbycssselector-index-timeout-includehidden-object","text":"Gets the element with the given CSS selector. Kind : static method of element Returns : Object - The found element. Param Type Default Description selector Object The CSS selector describing the element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByCss ( \".button01\" );","title":"element.getByCss(selector, [index], [timeout], [includeHidden]) \u21d2 Object"},{"location":"doc/#elementgetbycsscontainingtextselector-text-index-timeout-includehidden-object","text":"Gets the element with the given CSS selector containing the given text value. Kind : static method of element Returns : Object - The found element. Param Type Default Description selector Object The CSS selector describing the element. [text] String \"\" The containing text value of the element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByCssContainingText ( \".input01\" , \"Jack Jackson\" );","title":"element.getByCssContainingText(selector, [text], [index], [timeout], [includeHidden]) \u21d2 Object"},{"location":"doc/#elementgetbyidid-timeout-includehidden-object","text":"Gets the element with the given ID. Kind : static method of element Returns : Object - The found element. Param Type Default Description id String The id of the element. [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if the function will check for the elements visibility. Example const elem = await nonUi5 . element . getById ( \"button01\" );","title":"element.getById(id, [timeout], [includeHidden]) \u21d2 Object"},{"location":"doc/#elementgetbyclasselemclass-index-timeout-includehidden-object","text":"Gets the element with the given class. Kind : static method of element Returns : Object - The found element. Param Type Default Description elemClass String The class describing the element [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByClass ( \"button01\" ); const elem = await nonUi5 . element . getByClass ( \"sapMIBar sapMTB sapMTBNewFlex sapContrastPlus\" );","title":"element.getByClass(elemClass, [index], [timeout], [includeHidden]) \u21d2 Object"},{"location":"doc/#elementgetbynamename-index-timeout-includehidden-object","text":"Gets the element with the given name. Kind : static method of element Returns : Object - The found element. Param Type Default Description name String The name attribute of the element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByName ( \".button01\" );","title":"element.getByName(name, [index], [timeout], [includeHidden]) \u21d2 Object"},{"location":"doc/#elementgetbyxpathxpath-index-timeout-includehidden-object","text":"Gets the element with the given XPath. Kind : static method of element Returns : Object - The found element. Param Type Default Description xpath String The XPath describing the element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByXPath ( \"//ul/li/a\" );","title":"element.getByXPath(xpath, [index], [timeout], [includeHidden]) \u21d2 Object"},{"location":"doc/#elementgetbychildelementselector-childselector-index-timeout-includehidden-object","text":"Gets an element by its selector and child selector. Can be used when multiple elements have the same properties. Kind : static method of element Returns : Object - The found element. Param Type Default Description elementSelector String The CSS selector describing the element. childSelector String The CSS selector describing the child element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByChild ( \".form01\" , \".input01\" );","title":"element.getByChild(elementSelector, childSelector, [index], [timeout], [includeHidden]) \u21d2 Object"},{"location":"doc/#elementgetbyparentelementselector-parentselector-index-timeout-includehidden-object","text":"Gets an element by its selector and parent selector. Can be used when multiple elements have the same properties. Kind : static method of element Returns : Object - The found element. Param Type Default Description elementSelector String The CSS selector describing the element. parentSelector String The CSS selector describing the parent element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). [includeHidden] Boolean false Specifies if hidden elements are also considered. By default it checks only for visible ones. Example const elem = await nonUi5 . element . getByParent ( \".form01\" , \".input01\" );","title":"element.getByParent(elementSelector, parentSelector, [index], [timeout], [includeHidden]) \u21d2 Object"},{"location":"doc/#elementisvisibleelement-strict-boolean","text":"Returns a boolean if the element is visible to the user. Kind : static method of element Returns : Boolean - Returns true or false. Param Type Default Description element Object The element. [strict] Boolean true If strict mode is enabled it will only return \"true\" if the element is visible on the page and within the viewport. If disabled, it will be sufficient if the element is visible on the page but not inside the current viewport. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . element . isVisible ( elem );","title":"element.isVisible(element, [strict]) \u21d2 Boolean"},{"location":"doc/#elementispresentelem-boolean","text":"Returns a boolean if the element is present at the DOM or not. It might be hidden. Kind : static method of element Returns : Boolean - Returns true or false. Param Type Description elem Object The element. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . element . isPresent ( elem );","title":"element.isPresent(elem) \u21d2 Boolean"},{"location":"doc/#elementispresentbycsscss-index-timeout-boolean","text":"Returns a boolean if the element is present at the DOM or not. Kind : static method of element Returns : boolean - Returns true or false. Param Type Default Description css String The CSS selector describing the element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . isPresentByCss ( \".button01\" );","title":"element.isPresentByCss(css, [index], [timeout]) \u21d2 boolean"},{"location":"doc/#elementispresentbyxpathxpath-index-timeout-boolean","text":"returns a boolean if the element is present at the DOM or not. Kind : static method of element Param Type Default Description xpath String The XPath describing the element. [index] Number 0 The index of the element (in case there are more than one elements visible at the same time). [timeout] Number 30000 The timeout to wait (ms). Example await nonUi5 . element . isPresentByXPath ( \".//*[text()='Create']\" );","title":"element.isPresentByXPath(xpath, [index], [timeout]) \u21d2 boolean"},{"location":"doc/#elementgetattributevalueelem-attribute-string","text":"Returns the attributes value of the passed element. Kind : static method of element Returns : String - The attributes value of the element. Param Type Description elem Object The element. [attribute] String The attribute of the element. Leave empty to return the inner HTML value of the element. Example const elem = await nonUi5 . element . getById ( \"elem01\" ); const text = await nonUi5 . element . getAttributeValue ( elem , \"text\" ); Example const elem = await nonUi5 . element . getById ( \"elem02\" ); const innerHTML = await nonUi5 . element . getAttributeValue ( elem );","title":"element.getAttributeValue(elem, [attribute]) \u21d2 String"},{"location":"doc/#elementgetvalueelem-string","text":"Returns the value of the passed element. Kind : static method of element Returns : String - The value of the element. Param Type Description elem Object The element. Example const elem = await nonUi5 . element . getById ( \"elem02\" ); const innerHTML = await nonUi5 . element . getValue ( elem );","title":"element.getValue(elem) \u21d2 String"},{"location":"doc/#elementsetinnerhtmlelem-string","text":"Sets the innerHTML value of the given element. CAUTION: Only use this if filling the value in the normal way is not working and if it is unavoidable. Keep in mind, that a user is not able to perform such actions. Kind : static method of element Returns : String - The value to set. Param Type Description elem Object The element. Example const elem = await nonUi5 . element . getById ( \"text-editor\" ); await nonUi5 . element . setInnerHTML ( elem , \"Hello World!\" );","title":"element.setInnerHTML(elem) \u21d2 String"},{"location":"doc/#elementhighlightelem-duration-color","text":"Highlights the passed element. Kind : static method of element Param Type Default Description elem Object The element. [duration] Integer 2000 The duration of the highlighting (ms). [color] String \"red\" The color of the highlighting (CSS value). Example const elem = await nonUi5 . element . getById ( \"text01\" ); await nonUi5 . element . highlight ( elem ); Example const elem = await nonUi5 . element . getById ( \"text01\" ); await nonUi5 . element . highlight ( elem , 3000 , \"green\" );","title":"element.highlight(elem, [duration], [color])"},{"location":"doc/#elementswitchtoiframeselector","text":"Deprecated Switches to the passed iframe. Kind : static method of element See : switchToIframe Param Type Description selector String The CSS selector describing the iframe element. Example await nonUi5 . element . switchToIframe ( \"iframe[id='frame01']\" );","title":"~~element.switchToIframe(selector)~~"},{"location":"doc/#elementswitchtodefaultcontent","text":"Deprecated Switches to the default content of the HTML page. Kind : static method of element See : switchToDefaultContent Example await nonUi5 . element . switchToDefaultContent ();","title":"~~element.switchToDefaultContent()~~"},{"location":"doc/#nonui5navigation","text":"Kind : static class of nonUi5","title":"nonUi5.navigation"},{"location":"doc/#navigationnavigatetoapplicationrelativereference-refresh","text":"Navigates to the application via the passed relative reference. The path will be added to the baseUrl maintained in the config. Kind : static method of navigation Param Type Default Description relativeReference String Relative reference of an application (path, query and fragment) [refresh] Boolean true Refresh the page after navigation. Example await nonUi5 . navigation . navigateToApplication ( \"categories\" );","title":"navigation.navigateToApplication(relativeReference, [refresh])"},{"location":"doc/#nonui5userinteraction","text":"Kind : static class of nonUi5 .userInteraction .click(element, [timeout]) .clickAndRetry(element, [timeout], [retries], [interval]) .doubleClick(element, [timeout]) .rightClick(element, [timeout]) .fill(element, value) .fillAndRetry(element, value, [retries], [interval]) .clear(element) .clearAndRetry(element, [retries], [interval]) .clearAndFill(element, value) .clearAndFillAndRetry(element, value, [retries], [interval], [verify]) .mouseOverElement(element, [xOffset], [yOffset]) .scrollToElement(elem, alignment) .dragAndDrop(element, targetElem) .moveCursorAndClick(element) .clickElementInSvg(svgElem, innerSelector)","title":"nonUi5.userInteraction"},{"location":"doc/#userinteractionclickelement-timeout","text":"Clicks on the passed element. Kind : static method of userInteraction Param Type Default Description element Object The element. [timeout] Number 30000 The timeout to wait (ms). Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . userInteraction . click ( elem );","title":"userInteraction.click(element, [timeout])"},{"location":"doc/#userinteractionclickandretryelement-timeout-retries-interval","text":"Clicks on the passed element, retries in case it fails. Kind : static method of userInteraction Param Type Default Description element Object The element. [timeout] Number 30000 The timeout to wait (ms). [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . userInteraction . clickAndRetry ( elem );","title":"userInteraction.clickAndRetry(element, [timeout], [retries], [interval])"},{"location":"doc/#userinteractiondoubleclickelement-timeout","text":"Double Clicks on the passed element. Kind : static method of userInteraction Param Type Default Description element Object The element. [timeout] Number 30000 The timeout to wait (ms). Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . userInteraction . doubleClick ( elem );","title":"userInteraction.doubleClick(element, [timeout])"},{"location":"doc/#userinteractionrightclickelement-timeout","text":"Right Clicks on the passed element. Kind : static method of userInteraction Param Type Default Description element Object The element. [timeout] Number 30000 The timeout to wait (ms). Example const elem = await nonUi5 . element . getById ( \"button01\" ); await nonUi5 . userInteraction . rightClick ( elem );","title":"userInteraction.rightClick(element, [timeout])"},{"location":"doc/#userinteractionfillelement-value","text":"Fills the given value into the passed input. Kind : static method of userInteraction Param Type Description element Object The element. value String The value to be filled. Example const elem = await nonUi5 . element . getById ( \"input01\" ); await nonUi5 . userInteraction . fill ( elem , \"Service 01\" );","title":"userInteraction.fill(element, value)"},{"location":"doc/#userinteractionfillandretryelement-value-retries-interval","text":"Fills the given value into the passed input, retries in case of a failure. Kind : static method of userInteraction Param Type Default Description element Object The element. value String The value to be filled. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example const elem = await nonUi5 . element . getById ( \"input01\" ); await nonUi5 . userInteraction . fillAndRetry ( elem , \"Service 01\" );","title":"userInteraction.fillAndRetry(element, value, [retries], [interval])"},{"location":"doc/#userinteractionclearelement","text":"Clears the passed input element. Kind : static method of userInteraction Param Type Description element Object The element. Example const elem = await nonUi5 . element . getById ( \"input01\" ); await nonUi5 . userInteraction . clear ( elem );","title":"userInteraction.clear(element)"},{"location":"doc/#userinteractionclearandretryelement-retries-interval","text":"Clears the passed input element, retries in case of a failure. Kind : static method of userInteraction Param Type Default Description element Object The element. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. Example const elem = await nonUi5 . element . getById ( \"input01\" , 10000 ); await nonUi5 . userInteraction . clearAndRetry ( elem );","title":"userInteraction.clearAndRetry(element, [retries], [interval])"},{"location":"doc/#userinteractionclearandfillelement-value","text":"Clears and fills the passed input element. Kind : static method of userInteraction Param Type Description element Object The element. value String The value to be filled in. Example const elem = await nonUi5 . element . getById ( \"input01\" ); await nonUi5 . userInteraction . clearAndFill ( elem , \"Service 01\" );","title":"userInteraction.clearAndFill(element, value)"},{"location":"doc/#userinteractionclearandfillandretryelement-value-retries-interval-verify","text":"Clears and fills the passed input, retries in case it fails. Kind : static method of userInteraction Param Type Default Description element Object The element. value String The value to be filled in. [retries] Number 3 The number of retries, can be set in config for all functions under params stepsRetries. [interval] Number 5000 The delay between the retries (ms). Can be set in config for all functions under params.stepRetriesIntervals. [verify] Boolean true Specifies if the filled value should be verified. Example const elem = await nonUi5 . element . getById ( \"input01\" ); await nonUi5 . userInteraction . clearAndFillAndRetry ( elem , \"Service 01\" );","title":"userInteraction.clearAndFillAndRetry(element, value, [retries], [interval], [verify])"},{"location":"doc/#userinteractionmouseoverelementelement-xoffset-yoffset","text":"Moves the cursor/focus to the passed element. Kind : static method of userInteraction Param Type Description element Object The selector describing the element. [xOffset] Number X offset to move to, relative to the top-left corner of the element. If not specified, the mouse will move to the middle of the element. [yOffset] Number Y offset to move to, relative to the top-left corner of the element. If not specified, the mouse will move to the middle of the element. Example const elem = await nonUi5 . element . getById ( \"dropdown42\" ); await nonUi5 . userInteraction . mouseOverElement ( elem );","title":"userInteraction.mouseOverElement(element, [xOffset], [yOffset])"},{"location":"doc/#userinteractionscrolltoelementelem-alignment","text":"Scrolls to the passed element to get it into view. Kind : static method of userInteraction Param Type Default Description elem Object The element. alignment String \"center\" Defines vertical/horizontal alignment. One of \"start\", \"center\", \"end\", or \"nearest\". Affects the alignToTop parameter of scrollIntoView function. By default, it takes 'up' Example const elem = await nonUi5 . userInteraction . getElementById ( \"footer01\" ); await nonUi5 . userInteraction . scrollToElement ( elem );","title":"userInteraction.scrollToElement(elem, alignment)"},{"location":"doc/#userinteractiondraganddropelement-targetelem","text":"Drags and drops the given element to the given target element. Kind : static method of userInteraction Param Type Description element Object The element to drag. targetElem Object The target element to drop the element. Example const elem = await nonUi5 . element . getById ( \"drag01\" ); Example const targetElem = await nonUi5 . element . getById ( \"drop02\" ); await nonUi5 . userInteraction . dragAndDrop ( elem , targetElem );","title":"userInteraction.dragAndDrop(element, targetElem)"},{"location":"doc/#userinteractionmovecursorandclickelement","text":"Moves the cursor to the target element and clicks on it. Can be used for charts. Kind : static method of userInteraction Param Type Description element Object The element to be clicked. Example const elem = await nonUi5 . element . getById ( \"chartPartToClick\" ); await nonUi5 . userInteraction . moveCursorAndClick ( elem );","title":"userInteraction.moveCursorAndClick(element)"},{"location":"doc/#userinteractionclickelementinsvgsvgelem-innerselector","text":"Clicks on an inner element within a SVG element. Kind : static method of userInteraction Param Type Description svgElem Object The SVG element. innerSelector String The CSS selector describing the inner element to be clicked. Example const svgElem = await nonUi5 . element . getByCss ( \"svg\" ); const innerSelector = \"circle:nth-child(6)\" ; await nonUi5 . userInteraction . clickElementInSvg ( svgElem , innerSelector );","title":"userInteraction.clickElementInSvg(svgElem, innerSelector)"},{"location":"doc/#service","text":"Global namespace for service modules. Kind : global constant service .odata .init(url, username, password, [loggingEnabled], [params]) \u21d2 Object .get(service, entitySet, keys) .getEntitySet(service, entitySet, [filterString], [selectionFields], [queryParams]) \u21d2 Array .isFeatureToggleActivated(service, featureName) .post(service, entitySet, payload) .merge(service, entitySet, payload) .delete(service, entitySet, options) .callFunctionImport(service, functionImportName, options) .getOutputManagementPdfStream(outputConf, url) .readPdfFromDirectUrl(url) .rest .init([customConfig]) \u21d2 Object .get(uri, [options]) \u21d2 Object .post(uri, payload) \u21d2 Object .delete(uri, options) \u21d2 Object .patch(uri, options) \u21d2 Object","title":"service"},{"location":"doc/#serviceodata","text":"Kind : static class of service .odata .init(url, username, password, [loggingEnabled], [params]) \u21d2 Object .get(service, entitySet, keys) .getEntitySet(service, entitySet, [filterString], [selectionFields], [queryParams]) \u21d2 Array .isFeatureToggleActivated(service, featureName) .post(service, entitySet, payload) .merge(service, entitySet, payload) .delete(service, entitySet, options) .callFunctionImport(service, functionImportName, options) .getOutputManagementPdfStream(outputConf, url) .readPdfFromDirectUrl(url)","title":"service.odata"},{"location":"doc/#odatainiturl-username-password-loggingenabled-params-object","text":"Initializes The service to work with. XCSRF-Token will be automatically fetched and stored in the service instance. Cookies will also automatically assembled and stored in the service instance. Kind : static method of odata Returns : Object - The initialized service object. Param Type Default Description url url The base url of the service username username The username. password password The password of the username. [loggingEnabled] boolean false The boolean param to control whether user wants to see logs during build run [params] Object {} JSON object with key-value pairs of parameter names and corresponding values by default we send { \"client\": \"715\", \"documentation\": [\"heading\", \"quickinfo\"], \"language\": \"EN\" } These can be overridden by sending params as JSON object with additional params as shown in example Example const url = \"https://hbr-715.wdf.sap.corp/sap/opu/odata/sap/API_PURCHASEORDER_PROCESS_SRV/\" ; const params = { \"saml2\" : \"disabled\" , \"language\" : \"de\" } srv = await service . odata . init ( url , user , password , false , params );","title":"odata.init(url, username, password, [loggingEnabled], [params]) \u21d2 Object"},{"location":"doc/#odatagetservice-entityset-keys","text":"makes a GET request. Kind : static method of odata Param Type Description service service Instance of the service entitySet entitySet The entitySet you want to GET from. keys keys The required keys for the GET-request. Example const url = \"https://qs9-715.wdf.sap.corp/sap/opu/odata/sap/API_PURCHASEORDER_PROCESS_SRV/\" ; srv = await service . odata . init ( url , user , password );","title":"odata.get(service, entitySet, keys)"},{"location":"doc/#odatagetentitysetservice-entityset-filterstring-selectionfields-queryparams-array","text":"GET's the EntitySet collection. Kind : static method of odata Returns : Array - - Result set array Param Type Description service service Instance of the service entitySet entitySet The entitySet you want to GET from. [filterString] String The filters to be applied on get query [selectionFields] String comma separated list of fields to be selected [queryParams] Object JSON object of key value pairs of custom query parameters. Example const url = \"https://qs9-715.wdf.sap.corp/sap/opu/odata/sap/API_PURCHASEORDER_PROCESS_SRV/\" ; srv = await service . odata . init ( url , user , password ); let filterString = \"Status eq '01'\" ; let res = await service . odata . getEntitySet ( service , \"A_PurchaseOrder\" , filterString ); let select = \"CentralPurchaseContract,PurchasingProcessingStatus\" ; let res = await service . odata . getEntitySet ( service , \"A_PurchaseOrder\" , filterString , select ); let queryParams = { \"$top\" : 5 , \"$skip\" : 10 , }; let res = await service . odata . getEntitySet ( service , \"A_PurchaseOrder\" , filterString , select , queryParams );","title":"odata.getEntitySet(service, entitySet, [filterString], [selectionFields], [queryParams]) \u21d2 Array"},{"location":"doc/#odataisfeaturetoggleactivatedservice-featurename","text":"checks if a feature toggle is switched on or off Kind : static method of odata Param Type Description service service Instance of the service featureName featureName The name of the feature you want know the status of. Example const url = browser . params . systemUrl + \"/sap/opu/odata/SAP/CA_FM_FEATURE_TOGGLE_STATUS_SRV/\" ; service = await service . odata . init ( url , user , password ); let isFeatureActive = await service . odata . isFeatureToggleActivated ( service , \"MM_PUR_PO_BATCHES_IN_MANAGE_PO\" );","title":"odata.isFeatureToggleActivated(service, featureName)"},{"location":"doc/#odatapostservice-entityset-payload","text":"makes a POST request. Kind : static method of odata Param Type Description service service Instance of the service entitySet entitySet The entitySet you want to POST against. payload payload The payload for the POST-request. Example let keys = { \"PurchaseOrder\" : \"4500007108\" , \"DraftUUID\" : \"00000000-0000-0000-0000-000000000000\" , \"IsActiveEntity\" : \"true\" }; let res = await service . odata . get ( service , \"A_PurchaseOrder\" , keys );","title":"odata.post(service, entitySet, payload)"},{"location":"doc/#odatamergeservice-entityset-payload","text":"makes a MERGE request. Kind : static method of odata Param Type Description service service Instance of the service entitySet entitySet The entitySet you want to MERGE in. payload payload The payload for the MERGE-request. Example let res = await service . odata . merge ( service , \"A_PurchaseOrderScheduleLine\" , { \"PurchasingDocument\" : \"4500007108\" , \"PurchasingDocumentItem\" : \"10\" , \"ScheduleLine\" : \"1\" , \"ScheduleLineDeliveryDate\" : new Date () }; let res = await service . odata . get ( service , \"A_PurchaseOrder\" , keys );","title":"odata.merge(service, entitySet, payload)"},{"location":"doc/#odatadeleteservice-entityset-options","text":"makes a DELETE request. Kind : static method of odata Param Type Description service service Instance of the service entitySet entitySet The entitySet you want to DELETE. options options The options for the DELETE-request. Example let options = { \"PurchaseOrder\" : \"\" , \"DraftUUID\" : draftUUID , \"IsActiveEntity\" : false }; await service . odata . delete ( service , \"C_PurchaseOrderTP\" , options );","title":"odata.delete(service, entitySet, options)"},{"location":"doc/#odatacallfunctionimportservice-functionimportname-options","text":"makes a function import request on an OData service. Kind : static method of odata Param Type Description service service Instance of the service functionImportName entitySet Name of Function Import options options parameters for function import Example const options = { CentralRequestForQuotation : \"7500000026\" , Supplier : \"100006\" }; const res = await service . odata . callFunctionImport ( service , functionImportName , options );","title":"odata.callFunctionImport(service, functionImportName, options)"},{"location":"doc/#odatagetoutputmanagementpdfstreamoutputconf-url","text":"returns a stream of output management pdf file. Kind : static method of odata Param Type Description outputConf outputConf Configuration for the output management pdf. url url system url username username for login password password for login Example const outputConf = { ApplObjectType : \"REQUEST_FOR_QUOTATION\" , ApplObjectId : \"7000002653\" , ItemId : \"1\" }; const pdfStream = await service . odata . getOutputManagementPdfStream ( outputConf , url , user , password );","title":"odata.getOutputManagementPdfStream(outputConf, url)"},{"location":"doc/#odatareadpdffromdirecturlurl","text":"returns a stream of pdf file which is part of attachment. Kind : static method of odata Param Type Description url url system url username [OPTIONAL] username for login password [OPTIONAL] password for login Example const url = \"https://domain.com/getPdfFile\" ; const pdfStream = await service . odata . readPdfFromDirectUrl ( url , \"username\" , \"Password\" );","title":"odata.readPdfFromDirectUrl(url)"},{"location":"doc/#servicerest","text":"Kind : static class of service .rest .init([customConfig]) \u21d2 Object .get(uri, [options]) \u21d2 Object .post(uri, payload) \u21d2 Object .delete(uri, options) \u21d2 Object .patch(uri, options) \u21d2 Object","title":"service.rest"},{"location":"doc/#restinitcustomconfig-object","text":"Returns an axios instance for custom axios handling. Kind : static method of rest Returns : Object - The axios instance. Param Type Default Description [customConfig] Object {} Custom config for axios. If not specified axios defaults will be taken. Example const customConfig = { baseURL : 'https://some-domain.com/api/' , timeout : 1000 , headers : { 'X-Custom-Header' : 'foobar' } const axios = service . rest . init ( customConfig );","title":"rest.init([customConfig]) \u21d2 Object"},{"location":"doc/#restgeturi-options-object","text":"makes a GET request. Kind : static method of rest Returns : Object - The response of the GET request. Param Type Default Description uri String The uri to the data source you want to GET. [options] Object {} The options you want to specify for GET. Example const uri = https : //api.predic8.de/shop/products/\"; let res = await service . rest . get ( uri );","title":"rest.get(uri, [options]) \u21d2 Object"},{"location":"doc/#restposturi-payload-object","text":"makes a POST request. Kind : static method of rest Returns : Object - The response of the POST request. Param Type Description uri String The uri to the data source you want to POST against. payload Object The data you want to POST against your entity set. Example let res = await service . rest . delete ( ` ${ browser . config . baseUrl } /posts/99` );","title":"rest.post(uri, payload) \u21d2 Object"},{"location":"doc/#restdeleteuri-options-object","text":"makes a DELETE request. Kind : static method of rest Returns : Object - The response of the DELETE request. Param Type Description uri String The uri to the data source you want to DELETE. options Object The options you want to specify for DELETE. Example let res = await service . rest . delete ( ` ${ browser . config . baseUrl } /posts/99` );","title":"rest.delete(uri, options) \u21d2 Object"},{"location":"doc/#restpatchuri-options-object","text":"makes a PATCH request. Kind : static method of rest Returns : Object - The response of the PATCH request. Param Type Description uri String The uri to the data source you want to PATCH. options Object The options you want to specify for PATCH. Example let res = await service . rest . patch ( ` ${ browser . config . baseUrl } /posts/99` );","title":"rest.patch(uri, options) \u21d2 Object"},{"location":"gettingStarted/setup/","text":"Prerequisites Make sure Node.js is installed on your computer. Installation To install the latest version of the service, simply execute the following command: npm install @wdio/qmate-service-ts","title":"Setup"},{"location":"gettingStarted/setup/#prerequisites","text":"Make sure Node.js is installed on your computer.","title":"Prerequisites"},{"location":"gettingStarted/setup/#installation","text":"To install the latest version of the service, simply execute the following command: npm install @wdio/qmate-service-ts","title":"Installation"}]}